{
  "hash": "d99c61ce0cdd1938048f86c719455409",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle:  TP1:Méthodes traditionnelles de calcul de la VaR et Expected Shortfall (ES)\njupyter: python3\ndate: \"2025-02-28\"\n---\n\n\n\n\n\n\n\n\nCe TP est fait dans le but de modéliser la Value at Risk qui est une mesure de risque financier. La Value at Risk (VaR) est une mesure essentielle du risque de marché qui estime la perte potentielle maximale d’un portefeuille sur un horizon h donné, avec un certain niveau de confiance $\\alpha$. La VaR est utilisée par les institutions financières et les gestionnaires de risques pour évaluer l’exposition aux pertes extrêmes et ajuster leurs stratégies d’investissement. Elle est définie comme suit :\n\n$$VaR_{\\alpha}(h) = inf \\{ l \\in \\mathbb{R} | P(PnL \\geq -l) \\geq 1 - \\alpha \\}$$\n\nLe PnL représente le profit and loss, c’est-à-dire la variation de la valeur du portefeuille. Dans notre cas, nous utilserons les rendements logarithmiques des actifs financiers, qui est stationnaire, pour calculer la VaR. Les rendements logarithmiques sont calculés comme suit :\n\n$$r_t = log(\\frac{P_t}{P_{t-1}}) \\approx \\frac{P_t - P_{t-1}}{P_{t-1}}.$$\n\nCette mesure est préférée aux rendements simples car sa décomposition en termes additifs permet de mieux modéliser les variations de prix des actifs financiers. De plus, en supposant la distribution identique et indépendante des rendements, on peut facilement déterminer sa loi de probabilité et calculer la VaR.\n\nDans ce projet, nous explorerons plusieurs méthodes pour calculer la VaR, en tenant compte de la nature des rendements financiers et des hypothèses sous-jacentes :\n\n- **Méthodes non paramétriques** : VaR historique et VaR bootstrap.\n- **Méthodes paramétriques**: VaR gaussienne et VaR basée sur une distribution Skew Student.\n- **Méthodes avancées** : VaR avec pondération exponentielle EWMA et VaR calculée par diffusion d’actifs.\nEn complément, nous calculerons également l’Expected Shortfall (ES), qui mesure la perte moyenne au-delà du seuil de la VaR. Cette mesure est plus robuste, car elle intègre les queues de distribution et est particulièrement utile pour évaluer les risques extrêmes.\n\n::: {#45ba5ec8 .cell execution_count=2}\n``` {.python .cell-code}\n# Définition des librairies\nimport yfinance as yf\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport warnings\nfrom tqdm import tqdm\nfrom scipy.stats import bootstrap\n\nwarnings.filterwarnings(\"ignore\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/cherylkouadio/Library/Python/3.9/lib/python/site-packages/urllib3/__init__.py:35: NotOpenSSLWarning:\n\nurllib3 v2 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with 'LibreSSL 2.8.3'. See: https://github.com/urllib3/urllib3/issues/3020\n\n```\n:::\n:::\n\n\n::: {#30760b37 .cell execution_count=3}\n``` {.python .cell-code}\n# Import des données du CAC 40\ndata = yf.download(\"^FCHI\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nYF.download() has changed argument auto_adjust default to True\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r[*********************100%***********************]  1 of 1 completed\n```\n:::\n:::\n\n\n::: {#66d6a764 .cell execution_count=4}\n``` {.python .cell-code}\n# Calcul des rendements logarithmiques\ndata['log_return'] = np.log(data['Close'] / data['Close'].shift(1))\n\n# Retirer la première ligne\ndata = data.dropna()\n```\n:::\n\n\n::: {#f0991d3b .cell execution_count=5}\n``` {.python .cell-code}\ndata.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th>Price</th>\n      <th>Close</th>\n      <th>High</th>\n      <th>Low</th>\n      <th>Open</th>\n      <th>Volume</th>\n      <th>log_return</th>\n    </tr>\n    <tr>\n      <th>Ticker</th>\n      <th>^FCHI</th>\n      <th>^FCHI</th>\n      <th>^FCHI</th>\n      <th>^FCHI</th>\n      <th>^FCHI</th>\n      <th></th>\n    </tr>\n    <tr>\n      <th>Date</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1990-03-02</th>\n      <td>1860.0</td>\n      <td>1860.0</td>\n      <td>1831.0</td>\n      <td>1831.0</td>\n      <td>0</td>\n      <td>0.015168</td>\n    </tr>\n    <tr>\n      <th>1990-03-05</th>\n      <td>1874.0</td>\n      <td>1874.0</td>\n      <td>1862.0</td>\n      <td>1866.0</td>\n      <td>0</td>\n      <td>0.007499</td>\n    </tr>\n    <tr>\n      <th>1990-03-06</th>\n      <td>1872.0</td>\n      <td>1875.0</td>\n      <td>1866.0</td>\n      <td>1869.0</td>\n      <td>0</td>\n      <td>-0.001068</td>\n    </tr>\n    <tr>\n      <th>1990-03-07</th>\n      <td>1880.0</td>\n      <td>1881.0</td>\n      <td>1874.0</td>\n      <td>1874.0</td>\n      <td>0</td>\n      <td>0.004264</td>\n    </tr>\n    <tr>\n      <th>1990-03-08</th>\n      <td>1917.0</td>\n      <td>1923.0</td>\n      <td>1891.0</td>\n      <td>1891.0</td>\n      <td>0</td>\n      <td>0.019490</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n# I. Data wrangling\n\nLe jeu de données est constitué de 6 variables, à savoir, le prix de clôture (Close), le volume des transactions (Volume), le prix d'ouverture (Open), le prix le plus bas (Low), le prix le plus élevé (High) et les rendements logarithmiques (log-return). Pour calculer les rendements sur lesquels nous nous sommes baser pour mesurer le risque du portefeuille, nous avons utilisé le prix de clôture. Il aurait été idéal de disposer des prix de clôture ajustés, i.e. les prix de clôture qui tiennent compte des dividendes et des éventuels splits. Cependant, en raison de l'indispobilité de ces données, nous avons utilisé les prix de clôture bruts.\n\nSur tout l'historique du CAC 40, nous n'observons aucune donnée manquante et aucune valeur aberrante (i.e. Prix de clôture négatif). Nous avons donc pu calculer les rendements logarithmiques sans problème.\n\n::: {#78ae6e27 .cell execution_count=6}\n``` {.python .cell-code}\ndata.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nDatetimeIndex: 8893 entries, 1990-03-02 to 2025-03-10\nData columns (total 6 columns):\n #   Column           Non-Null Count  Dtype  \n---  ------           --------------  -----  \n 0   (Close, ^FCHI)   8893 non-null   float64\n 1   (High, ^FCHI)    8893 non-null   float64\n 2   (Low, ^FCHI)     8893 non-null   float64\n 3   (Open, ^FCHI)    8893 non-null   float64\n 4   (Volume, ^FCHI)  8893 non-null   int64  \n 5   (log_return, )   8893 non-null   float64\ndtypes: float64(5), int64(1)\nmemory usage: 486.3 KB\n```\n:::\n:::\n\n\n::: {#aaee0a89 .cell execution_count=7}\n``` {.python .cell-code}\ndata.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th>Price</th>\n      <th>Close</th>\n      <th>High</th>\n      <th>Low</th>\n      <th>Open</th>\n      <th>Volume</th>\n      <th>log_return</th>\n    </tr>\n    <tr>\n      <th>Ticker</th>\n      <th>^FCHI</th>\n      <th>^FCHI</th>\n      <th>^FCHI</th>\n      <th>^FCHI</th>\n      <th>^FCHI</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>8893.000000</td>\n      <td>8893.000000</td>\n      <td>8893.000000</td>\n      <td>8893.000000</td>\n      <td>8.893000e+03</td>\n      <td>8893.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>4218.008895</td>\n      <td>4247.115477</td>\n      <td>4186.989038</td>\n      <td>4218.370758</td>\n      <td>6.420326e+07</td>\n      <td>0.000166</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1615.807916</td>\n      <td>1623.475274</td>\n      <td>1608.120763</td>\n      <td>1615.896676</td>\n      <td>6.672479e+07</td>\n      <td>0.013422</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1441.000000</td>\n      <td>1459.000000</td>\n      <td>1425.000000</td>\n      <td>1438.000000</td>\n      <td>0.000000e+00</td>\n      <td>-0.130983</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>3054.899902</td>\n      <td>3091.239990</td>\n      <td>3014.310059</td>\n      <td>3052.939941</td>\n      <td>0.000000e+00</td>\n      <td>-0.006450</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>4215.700195</td>\n      <td>4247.540039</td>\n      <td>4178.790039</td>\n      <td>4220.470215</td>\n      <td>6.475250e+07</td>\n      <td>0.000453</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>5326.870117</td>\n      <td>5360.870117</td>\n      <td>5299.060059</td>\n      <td>5328.859863</td>\n      <td>1.092704e+08</td>\n      <td>0.007174</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>8239.990234</td>\n      <td>8259.190430</td>\n      <td>8211.200195</td>\n      <td>8241.679688</td>\n      <td>5.312476e+08</td>\n      <td>0.105946</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#a0af4479 .cell execution_count=8}\n``` {.python .cell-code}\n# check na\nprint(\"=\"*80)\nprint(data.isna().sum())\nprint(\"=\"*80)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n================================================================================\nPrice       Ticker\nClose       ^FCHI     0\nHigh        ^FCHI     0\nLow         ^FCHI     0\nOpen        ^FCHI     0\nVolume      ^FCHI     0\nlog_return            0\ndtype: int64\n================================================================================\n```\n:::\n:::\n\n\nSur tout l'historique du CAC40, i.e. entre 1990 jusqu'à récemment, nous avons enregistré 5 périodes de crise financière. Ces périodes sont les suivantes :\n\n- 1994 : Crise obligataire\n- 2000 : Bulle Internet\n- 2008 : Crise des subprimes\n- 2011 : Crise de la dette souveraine\n- 2020 : Crise du Covid-19\n\nCela peut se réperer par les clusters de rendements observables sur le graphique ci-dessous. Comme on peut l'observer, ces clusters de volatilité sont généralement associés à des périodes où le rendement journalier chute brutalemment. Pour mesurer le risque de marché, il peut être utile de modéliser ces clusters de volatilité et de prendre en compte les queues de distribution à travers des modèles GARCH par exemple.\n\nPour modéliser la VaR comme mesure de risque, il serait utile également de prendre les événements extrêmes en considération. En effet, en observant la densité des rendements, on peut voir que la distribution des rendements est leptokurtique, c'est-à-dire que les queues de distribution sont plus épaisses que celles d'une distribution normale (kurtosis > 3). Cela signifie que les événements extrêmes sont plus fréquents que ce que la distribution normale ne le suggère. De plus, le coefficient d'asytmmétrie est négatif, ce qui signifie que la distribution des rendements est asymétrique. Cela peut être problématique pour les méthodes paramétriques qui supposent, parfois, une distribution symétrique des rendements.\n\n::: {#8526a7de .cell execution_count=9}\n``` {.python .cell-code}\nfig, ax1 = plt.subplots(figsize=(12, 6))\n\nax1.plot(data['log_return'], label='Rendements logarithmiques', color='red')\nax1.set_xlabel('Date')\nax1.set_ylabel('Rendements logarithmiques', color='red')\nax1.tick_params(axis='y', labelcolor='red')\n\nax2 = ax1.twinx()\nax2.plot(data['Close'], label='Prix historiques', color='blue')\nax2.set_ylabel('Prix historiques', color='blue')\nax2.tick_params(axis='y', labelcolor='blue')\n\nfig.legend(loc='upper left', bbox_to_anchor=(0.12,0.89))\nplt.title(\"Evolution des prix de clôture, rendements logarithmiques du CAC 40\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](var_classiques_files/figure-ipynb/cell-9-output-1.png){}\n:::\n:::\n\n\n::: {#d442cd78 .cell execution_count=10}\n``` {.python .cell-code}\n# Densité des rendements logarithmiques\nplt.figure(figsize=(8, 6))\ndata['log_return'].plot(kind='kde', color='red')\nplt.title(\"Densité des rendements logarithmiques du CAC 40\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](var_classiques_files/figure-ipynb/cell-10-output-1.png){}\n:::\n:::\n\n\n::: {#94997824 .cell execution_count=11}\n``` {.python .cell-code}\n# Skewness\nskewness = data['log_return'].skew()\nprint(f\"Skewness: {skewness:.2f}\")\n\n# Kurtosis\nkurtosis = data['log_return'].kurtosis()\nprint(f\"Kurtosis: {kurtosis:.2f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSkewness: -0.20\nKurtosis: 5.90\n```\n:::\n:::\n\n\n::: {#a650e89f .cell execution_count=12}\n``` {.python .cell-code}\n# Autocorrélation et pacf\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 6))\n\nplot_acf(data['log_return'], lags=20, ax=ax1)\nplot_pacf(data['log_return'], lags=20, ax=ax2)\n\nplt.suptitle(\"Autocorrélation et PACF des rendements logarithmiques du CAC 40\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](var_classiques_files/figure-ipynb/cell-12-output-1.png){}\n:::\n:::\n\n\n::: {#b4296238 .cell execution_count=13}\n``` {.python .cell-code}\n# check for stationarity\nfrom statsmodels.tsa.stattools import adfuller\nimport pandas as pd\n\ndef adf_test(series, title=''):\n    \"\"\"\n    Pass in a time series and an optional title, returns an Adataset report\n    \"\"\"\n    print('Augmented Dickey-Fuller Test: {}\\n'.format(title))\n    # .dropna() handles differenced data\n    result = adfuller(series.dropna(),autolag='AIC')\n\n    labels = ['Adataset test statistic','p-value','# lags used','# observations']\n    out = pd.Series(result[0:4],index=labels)\n\n    for key,val in result[4].items():\n        out['critical value ({})'.format(key)]=val\n\n    # .to_string() removes the line \"dtype: float64\"\n    print(f'{out.to_string()}\\n')\n\n    if result[1] <= 0.05:\n        print(\"Strong evidence against the null hypothesis\")\n        print(\"Reject the null hypothesis\")\n        print(\"Data has no unit root and is stationary\")\n    else:\n        print(\"Weak evidence against the null hypothesis\")\n        print(\"Fail to reject the null hypothesis\")\n        print(\"Data has a unit root and is non-stationary\")\n\nprint(\"=\"*80)\nadf_test(data[\"Close\"], title='Prix de clôture')\nprint(\"=\"*80)\nadf_test(data[\"log_return\"], title='Log-rendements')\nprint(\"=\"*80)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n================================================================================\nAugmented Dickey-Fuller Test: Prix de clôture\n\nAdataset test statistic      -0.873878\np-value                       0.796453\n# lags used                  30.000000\n# observations             8862.000000\ncritical value (1%)          -3.431088\ncritical value (5%)          -2.861866\ncritical value (10%)         -2.566944\n\nWeak evidence against the null hypothesis\nFail to reject the null hypothesis\nData has a unit root and is non-stationary\n================================================================================\nAugmented Dickey-Fuller Test: Log-rendements\n\nAdataset test statistic     -41.273429\np-value                       0.000000\n# lags used                   5.000000\n# observations             8887.000000\ncritical value (1%)          -3.431086\ncritical value (5%)          -2.861865\ncritical value (10%)         -2.566943\n\nStrong evidence against the null hypothesis\nReject the null hypothesis\nData has no unit root and is stationary\n================================================================================\n```\n:::\n:::\n\n\n# II. Implémentation de la VaR\n\nOn va prendre comme période d'apprentissage où la BCE fait baisser ses taux directeurs et comme période de (back-)test où la BCE fait augmenter ses taux directeurs. De ce fait, nous avons le découpage suivant :\n- Train : 15 octobre 2008 - 26 juillet 2022\n- Test : 28 juillet 2022 - 11 juin 2024\n\nOn va implémenter les différentes méthodes de calcul de la VaR et de l'ES sur le jeu de données du CAC 40. On va comparer les performances de ces méthodes en utilisant la période de test. On s'attend à ce que les méthodes paramétriques soient moins performantes que les méthodes non paramétriques, car elles supposent une distribution des rendements qui n'est pas toujours vérifiée. De plus, les méthodes avancées, comme l'EWMA et la diffusion d'actifs, devraient être plus performantes que les méthodes non paramétriques, car elles prennent en compte la dynamique des rendements et les corrélations entre les actifs. En général, le backtest devrait être vérifié puisque la période de test ne comporte aucune crise financière.\n\n::: {#e0aee978 .cell execution_count=14}\n``` {.python .cell-code}\ntrain = data[['log_return',\"Close\"]]['15-10-2008':'26-07-2022']\ndata_train = train['log_return']\n\ntest = data[['log_return',\"Close\"]]['27-07-2022':'11-06-2024']\ndata_test = test['log_return']\n```\n:::\n\n\n## II.1. Statistiques descriptives\n\nNous constatons que dans la période d'entrainement est plus volatile (std=1.39%). Cela s'explique par le fait que la période d'entrainement prend en compte deux crises majeures : la crise des subprimes et la crise du Covid-19. Cela peut également se voir à travers les clusters de volatilité observables à la suite de ces crises. Dans la période de test, aucun évènement majeur n'est observé, avec une plus faible volatilité observée (std=0.08%).\n\nOn s'attend à ce que la VaR entrainée sur la période d'entrainement performe très bien sur la période de test, mais on s'attend également à ce que la VaR entrainée sur la période de test performe moins bien sur la période d'entrainement.\n\n::: {#8e1026fe .cell execution_count=15}\n``` {.python .cell-code}\nplt.figure(figsize=(10, 4))\nplt.plot(data_train, label='Train', color='grey')\nplt.plot(data_test, label='Test', color='red')\nplt.legend(loc='upper left')\nplt.title(\"Données d'entrainement et de test\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](var_classiques_files/figure-ipynb/cell-15-output-1.png){}\n:::\n:::\n\n\n::: {#b7dace76 .cell execution_count=16}\n``` {.python .cell-code}\ndata_train.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```\ncount    3523.000000\nmean        0.000153\nstd         0.013953\nmin        -0.130983\n25%        -0.006099\n50%         0.000580\n75%         0.006855\nmax         0.096169\nName: log_return, dtype: float64\n```\n:::\n:::\n\n\n::: {#2213879b .cell execution_count=17}\n``` {.python .cell-code}\ndata_test.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```\ncount    586.000000\nmean       0.000292\nstd        0.008947\nmin       -0.036484\n25%       -0.004763\n50%        0.000642\n75%        0.005612\nmax        0.041504\nName: log_return, dtype: float64\n```\n:::\n:::\n\n\n## II.2. VaR non paramétrique\n\nLa VaR est une mesure de risque qui donne une estimation de la perte maximale que l'on peut subir avec un certain niveau de confiance $\\alpha$ sur un horizon de temps donné. Par exemple, une VaR à 5% sur 1 jour de 1000 euros signifie que 95% du temps, on ne perdra pas plus de 1000 euros sur un jour.\n\n$$P(\\text{Loss} < \\text{VaR}) = \\alpha.$$\n\nOn peut également raisonner en terme de gain, i.e. Profit and Loss (PnL).\n\n$$P(\\text{PnL} > - \\text{VaR}) = \\alpha.$$\n\nLa VaR peut se calculer suivant trois approches :\n1. **Approche historique** : On se base sur les rendements passés selon l'horizon fixé pour estimer la VaR, à l'aide d'un quantile empirique d'ordre $\\alpha$. Autrement, on peut se baser sur les rendements journaliers et utiliser la méthode de **scaling**.\n2. **Approche bootstrap** : On tire aléatoirement des échantillons de rendements passés avec remise, puis on prend le quantile empirique d'ordre $\\alpha$ pour calculer la VaR de chaque échantillon. La VaR finale est la moyenne des VaR obtenues.\n\n### II.2.1. Historique\n\n::: {#f8a8c930 .cell execution_count=18}\n``` {.python .cell-code}\n# Objectif : implémenter une fonction calculant la VaR historique\n\ndef historical_var(data, alpha=0.99):\n    \"\"\"\n    Calcul de la VaR historique\n    data : les rendements logarithmiques\n    alpha : le niveau de confiance\n    \"\"\"\n    return -np.percentile(data, 100*(1- alpha))\n```\n:::\n\n\n::: {#6f17bd95 .cell execution_count=19}\n``` {.python .cell-code}\n# Calcul de la VaR historique sur l'échantillon d'entrainement pour h=1j et alpha=0.99\nalpha = 0.99\nvar_hist_train = historical_var(data_train, alpha=alpha)\nprint(f\"La VaR historique pour h=1j et alpha=0.99 est : {var_hist_train:.4%}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLa VaR historique pour h=1j et alpha=0.99 est : 4.0850%\n```\n:::\n:::\n\n\nOn constate que la VaR historique pour une horizon de 1 jour et un niveau de confiance de 99% est de -4,09%. De ce fait, la perte maximale que l'on peut subir avec un niveau de confiance de 99% sur un jour est de 4,09%. Autrement dit, il y a 1 chance sur 100 que la perte soit supérieure à 4,09%. Cette perte peut se produire 2 à 3 ans fois en une année (252 jours de trading).\n\n### II.2.2. Bootstrap\n\nPour l'implémentation de la VaR bootstrap, nous faisons le choix de faire un tirage de taille n=la taille de la série des rendements, avec remise. Ce choix est fait pour des raisons de simplicité. En ce qui concerne le choix du nombre d'échantillons, nous allons observer l'évolution de de l'estimation de la VaR en fonction du nombre d'échantillons. Nous limiterons à des échantillons compris entre 1000 et 10000, pour des raisons de temps computationnels, en ayant conscience que plus le nombre d'échantillons est grand, plus l'estimation de la VaR sera précise.\n\n::: {#cd2bf863 .cell execution_count=20}\n``` {.python .cell-code}\n# Objectif : implémenter une fonction calculant la VaR bootstrap et un IC\n\ndef bootstrap_var(data, alpha=0.99, M=1000, seuil=0.05):\n    \"\"\"\n    Calcul de la VaR bootstrap\n    data : les rendements logarithmiques\n    alpha : le niveau de confiance de la VaR\n    n : le nombre de simulations\n    seuil : le seuil de l'intervalle de confiance\n    \"\"\"\n    # set seed\n    np.random.seed(42)\n\n    # Initialisation du vecteur des VaR\n    var = np.zeros(M)\n\n    # Calcul de la VaR bootstrap\n    for i in range(M):\n        sample = np.random.choice(data, size=len(data), replace=True)\n        var[i] = -np.percentile(sample, 100*(1- alpha))\n\n    # Calcul de l'intervalle de confiance\n    lower = np.percentile(var, 100*(1-seuil)/2)\n    upper = np.percentile(var, 100*(seuil + (1-seuil)/2))\n\n    return np.mean(var), lower, upper\n```\n:::\n\n\n::: {#a6286a39 .cell execution_count=21}\n``` {.python .cell-code}\n# Observer la variation de la VaR en fonction de M\nM_values = np.arange(1000, 10000, 10)\nvar_bs_values = []\n\nfor M in tqdm(M_values):\n    var_bs_train, _, _ = bootstrap_var(data_train, alpha=alpha, M=M)\n    var_bs_values.append(var_bs_train)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\r  0%|          | 0/900 [00:00<?, ?it/s]\r  0%|          | 2/900 [00:00<01:07, 13.28it/s]\r  0%|          | 4/900 [00:00<01:06, 13.42it/s]\r  1%|          | 6/900 [00:00<01:07, 13.33it/s]\r  1%|          | 8/900 [00:00<01:08, 13.07it/s]\r  1%|          | 10/900 [00:00<01:07, 13.13it/s]\r  1%|▏         | 12/900 [00:00<01:08, 12.95it/s]\r  2%|▏         | 14/900 [00:01<01:09, 12.68it/s]\r  2%|▏         | 16/900 [00:01<01:11, 12.44it/s]\r  2%|▏         | 18/900 [00:01<01:12, 12.12it/s]\r  2%|▏         | 20/900 [00:01<01:14, 11.83it/s]\r  2%|▏         | 22/900 [00:01<01:15, 11.69it/s]\r  3%|▎         | 24/900 [00:01<01:15, 11.66it/s]\r  3%|▎         | 26/900 [00:02<01:16, 11.43it/s]\r  3%|▎         | 28/900 [00:02<01:17, 11.20it/s]\r  3%|▎         | 30/900 [00:02<01:19, 10.99it/s]\r  4%|▎         | 32/900 [00:02<01:19, 10.91it/s]\r  4%|▍         | 34/900 [00:02<01:20, 10.73it/s]\r  4%|▍         | 36/900 [00:03<01:22, 10.53it/s]\r  4%|▍         | 38/900 [00:03<01:23, 10.29it/s]\r  4%|▍         | 40/900 [00:03<01:25, 10.05it/s]\r  5%|▍         | 42/900 [00:03<01:35,  9.00it/s]\r  5%|▍         | 43/900 [00:03<01:34,  9.08it/s]\r  5%|▍         | 44/900 [00:03<01:33,  9.20it/s]\r  5%|▌         | 45/900 [00:04<01:32,  9.23it/s]\r  5%|▌         | 46/900 [00:04<01:32,  9.26it/s]\r  5%|▌         | 47/900 [00:04<01:31,  9.30it/s]\r  5%|▌         | 48/900 [00:04<01:32,  9.25it/s]\r  5%|▌         | 49/900 [00:04<01:32,  9.22it/s]\r  6%|▌         | 50/900 [00:04<01:33,  9.12it/s]\r  6%|▌         | 51/900 [00:04<01:33,  9.06it/s]\r  6%|▌         | 52/900 [00:04<01:33,  9.09it/s]\r  6%|▌         | 53/900 [00:04<01:34,  8.96it/s]\r  6%|▌         | 54/900 [00:05<01:35,  8.84it/s]\r  6%|▌         | 55/900 [00:05<01:37,  8.71it/s]\r  6%|▌         | 56/900 [00:05<01:36,  8.75it/s]\r  6%|▋         | 57/900 [00:05<01:36,  8.76it/s]\r  6%|▋         | 58/900 [00:05<01:36,  8.70it/s]\r  7%|▋         | 59/900 [00:05<01:37,  8.64it/s]\r  7%|▋         | 60/900 [00:05<01:38,  8.56it/s]\r  7%|▋         | 61/900 [00:05<01:37,  8.58it/s]\r  7%|▋         | 62/900 [00:06<01:45,  7.91it/s]\r  7%|▋         | 63/900 [00:06<01:44,  8.04it/s]\r  7%|▋         | 64/900 [00:06<01:42,  8.18it/s]\r  7%|▋         | 65/900 [00:06<01:41,  8.22it/s]\r  7%|▋         | 66/900 [00:06<01:41,  8.23it/s]\r  7%|▋         | 67/900 [00:06<01:41,  8.21it/s]\r  8%|▊         | 68/900 [00:06<01:41,  8.20it/s]\r  8%|▊         | 69/900 [00:06<01:42,  8.12it/s]\r  8%|▊         | 70/900 [00:07<01:41,  8.18it/s]\r  8%|▊         | 71/900 [00:07<01:42,  8.08it/s]\r  8%|▊         | 72/900 [00:07<01:42,  8.08it/s]\r  8%|▊         | 73/900 [00:07<01:44,  7.89it/s]\r  8%|▊         | 74/900 [00:07<01:44,  7.88it/s]\r  8%|▊         | 75/900 [00:07<01:45,  7.82it/s]\r  8%|▊         | 76/900 [00:07<01:45,  7.85it/s]\r  9%|▊         | 77/900 [00:07<01:44,  7.84it/s]\r  9%|▊         | 78/900 [00:08<01:46,  7.70it/s]\r  9%|▉         | 79/900 [00:08<01:47,  7.67it/s]\r  9%|▉         | 80/900 [00:08<01:48,  7.58it/s]\r  9%|▉         | 81/900 [00:08<01:48,  7.54it/s]\r  9%|▉         | 82/900 [00:08<01:48,  7.51it/s]\r  9%|▉         | 83/900 [00:08<01:55,  7.07it/s]\r  9%|▉         | 84/900 [00:08<01:54,  7.15it/s]\r  9%|▉         | 85/900 [00:09<01:52,  7.24it/s]\r 10%|▉         | 86/900 [00:09<01:52,  7.20it/s]\r 10%|▉         | 87/900 [00:09<01:52,  7.21it/s]\r 10%|▉         | 88/900 [00:09<01:56,  7.00it/s]\r 10%|▉         | 89/900 [00:09<01:57,  6.91it/s]\r 10%|█         | 90/900 [00:09<01:56,  6.96it/s]\r 10%|█         | 91/900 [00:09<01:54,  7.07it/s]\r 10%|█         | 92/900 [00:10<01:54,  7.08it/s]\r 10%|█         | 93/900 [00:10<01:53,  7.10it/s]\r 10%|█         | 94/900 [00:10<01:53,  7.09it/s]\r 11%|█         | 95/900 [00:10<01:54,  7.01it/s]\r 11%|█         | 96/900 [00:10<01:54,  6.99it/s]\r 11%|█         | 97/900 [00:10<01:56,  6.90it/s]\r 11%|█         | 98/900 [00:10<01:57,  6.80it/s]\r 11%|█         | 99/900 [00:11<01:56,  6.88it/s]\r 11%|█         | 100/900 [00:11<01:55,  6.90it/s]\r 11%|█         | 101/900 [00:11<01:55,  6.92it/s]\r 11%|█▏        | 102/900 [00:11<01:56,  6.85it/s]\r 11%|█▏        | 103/900 [00:11<01:58,  6.75it/s]\r 12%|█▏        | 104/900 [00:11<01:57,  6.78it/s]\r 12%|█▏        | 105/900 [00:11<01:57,  6.78it/s]\r 12%|█▏        | 106/900 [00:12<01:57,  6.74it/s]\r 12%|█▏        | 107/900 [00:12<01:58,  6.69it/s]\r 12%|█▏        | 108/900 [00:12<01:58,  6.69it/s]\r 12%|█▏        | 109/900 [00:12<01:58,  6.66it/s]\r 12%|█▏        | 110/900 [00:12<01:58,  6.69it/s]\r 12%|█▏        | 111/900 [00:12<01:57,  6.73it/s]\r 12%|█▏        | 112/900 [00:12<01:56,  6.76it/s]\r 13%|█▎        | 113/900 [00:13<01:57,  6.72it/s]\r 13%|█▎        | 114/900 [00:13<01:56,  6.73it/s]\r 13%|█▎        | 115/900 [00:13<01:56,  6.72it/s]\r 13%|█▎        | 116/900 [00:13<01:57,  6.66it/s]\r 13%|█▎        | 117/900 [00:13<01:58,  6.59it/s]\r 13%|█▎        | 118/900 [00:13<01:59,  6.55it/s]\r 13%|█▎        | 119/900 [00:14<02:00,  6.50it/s]\r 13%|█▎        | 120/900 [00:14<02:00,  6.49it/s]\r 13%|█▎        | 121/900 [00:14<02:00,  6.46it/s]\r 14%|█▎        | 122/900 [00:14<02:02,  6.36it/s]\r 14%|█▎        | 123/900 [00:14<02:01,  6.37it/s]\r 14%|█▍        | 124/900 [00:14<02:01,  6.39it/s]\r 14%|█▍        | 125/900 [00:14<02:01,  6.40it/s]\r 14%|█▍        | 126/900 [00:15<02:01,  6.37it/s]\r 14%|█▍        | 127/900 [00:15<02:01,  6.37it/s]\r 14%|█▍        | 128/900 [00:15<02:01,  6.36it/s]\r 14%|█▍        | 129/900 [00:15<02:03,  6.24it/s]\r 14%|█▍        | 130/900 [00:15<02:03,  6.25it/s]\r 15%|█▍        | 131/900 [00:15<02:03,  6.25it/s]\r 15%|█▍        | 132/900 [00:16<02:03,  6.24it/s]\r 15%|█▍        | 133/900 [00:16<02:05,  6.12it/s]\r 15%|█▍        | 134/900 [00:16<02:04,  6.14it/s]\r 15%|█▌        | 135/900 [00:16<02:04,  6.14it/s]\r 15%|█▌        | 136/900 [00:16<02:04,  6.13it/s]\r 15%|█▌        | 137/900 [00:16<02:04,  6.12it/s]\r 15%|█▌        | 138/900 [00:17<02:04,  6.11it/s]\r 15%|█▌        | 139/900 [00:17<02:05,  6.09it/s]\r 16%|█▌        | 140/900 [00:17<02:05,  6.07it/s]\r 16%|█▌        | 141/900 [00:17<02:05,  6.05it/s]\r 16%|█▌        | 142/900 [00:17<02:05,  6.03it/s]\r 16%|█▌        | 143/900 [00:17<02:07,  5.92it/s]\r 16%|█▌        | 144/900 [00:18<02:07,  5.92it/s]\r 16%|█▌        | 145/900 [00:18<02:07,  5.92it/s]\r 16%|█▌        | 146/900 [00:18<02:14,  5.61it/s]\r 16%|█▋        | 147/900 [00:18<02:14,  5.62it/s]\r 16%|█▋        | 148/900 [00:18<02:14,  5.59it/s]\r 17%|█▋        | 149/900 [00:18<02:12,  5.66it/s]\r 17%|█▋        | 150/900 [00:19<02:17,  5.46it/s]\r 17%|█▋        | 151/900 [00:19<02:15,  5.54it/s]\r 17%|█▋        | 152/900 [00:19<02:13,  5.61it/s]\r 17%|█▋        | 153/900 [00:19<02:12,  5.63it/s]\r 17%|█▋        | 154/900 [00:19<02:11,  5.65it/s]\r 17%|█▋        | 155/900 [00:20<02:13,  5.58it/s]\r 17%|█▋        | 156/900 [00:20<02:15,  5.51it/s]\r 17%|█▋        | 157/900 [00:20<02:13,  5.55it/s]\r 18%|█▊        | 158/900 [00:20<02:13,  5.57it/s]\r 18%|█▊        | 159/900 [00:20<02:13,  5.57it/s]\r 18%|█▊        | 160/900 [00:20<02:12,  5.57it/s]\r 18%|█▊        | 161/900 [00:21<02:12,  5.57it/s]\r 18%|█▊        | 162/900 [00:21<02:14,  5.48it/s]\r 18%|█▊        | 163/900 [00:21<02:14,  5.49it/s]\r 18%|█▊        | 164/900 [00:21<02:22,  5.15it/s]\r 18%|█▊        | 165/900 [00:21<02:21,  5.19it/s]\r 18%|█▊        | 166/900 [00:22<02:19,  5.27it/s]\r 19%|█▊        | 167/900 [00:22<02:18,  5.31it/s]\r 19%|█▊        | 168/900 [00:22<02:19,  5.25it/s]\r 19%|█▉        | 169/900 [00:22<02:20,  5.20it/s]\r 19%|█▉        | 170/900 [00:22<02:19,  5.25it/s]\r 19%|█▉        | 171/900 [00:23<02:18,  5.28it/s]\r 19%|█▉        | 172/900 [00:23<02:23,  5.09it/s]\r 19%|█▉        | 173/900 [00:23<02:22,  5.09it/s]\r 19%|█▉        | 174/900 [00:23<02:23,  5.07it/s]\r 19%|█▉        | 175/900 [00:23<02:24,  5.01it/s]\r 20%|█▉        | 176/900 [00:24<02:36,  4.62it/s]\r 20%|█▉        | 177/900 [00:24<02:32,  4.73it/s]\r 20%|█▉        | 178/900 [00:24<02:35,  4.66it/s]\r 20%|█▉        | 179/900 [00:24<02:31,  4.76it/s]\r 20%|██        | 180/900 [00:24<02:29,  4.82it/s]\r 20%|██        | 181/900 [00:25<02:29,  4.82it/s]\r 20%|██        | 182/900 [00:25<02:29,  4.82it/s]\r 20%|██        | 183/900 [00:25<02:27,  4.85it/s]\r 20%|██        | 184/900 [00:25<02:26,  4.88it/s]\r 21%|██        | 185/900 [00:25<02:27,  4.86it/s]\r 21%|██        | 186/900 [00:26<02:26,  4.88it/s]\r 21%|██        | 187/900 [00:26<02:27,  4.82it/s]\r 21%|██        | 188/900 [00:26<02:28,  4.81it/s]\r 21%|██        | 189/900 [00:26<02:27,  4.81it/s]\r 21%|██        | 190/900 [00:27<02:29,  4.75it/s]\r 21%|██        | 191/900 [00:27<02:29,  4.75it/s]\r 21%|██▏       | 192/900 [00:27<02:31,  4.69it/s]\r 21%|██▏       | 193/900 [00:27<02:30,  4.69it/s]\r 22%|██▏       | 194/900 [00:27<02:32,  4.64it/s]\r 22%|██▏       | 195/900 [00:28<02:33,  4.59it/s]\r 22%|██▏       | 196/900 [00:28<02:32,  4.62it/s]\r 22%|██▏       | 197/900 [00:28<02:33,  4.58it/s]\r 22%|██▏       | 198/900 [00:28<02:32,  4.60it/s]\r 22%|██▏       | 199/900 [00:28<02:31,  4.62it/s]\r 22%|██▏       | 200/900 [00:29<02:31,  4.63it/s]\r 22%|██▏       | 201/900 [00:29<02:36,  4.47it/s]\r 22%|██▏       | 202/900 [00:29<02:37,  4.43it/s]\r 23%|██▎       | 203/900 [00:29<02:37,  4.44it/s]\r 23%|██▎       | 204/900 [00:30<02:37,  4.43it/s]\r 23%|██▎       | 205/900 [00:30<02:37,  4.42it/s]\r 23%|██▎       | 206/900 [00:30<02:39,  4.36it/s]\r 23%|██▎       | 207/900 [00:30<02:36,  4.42it/s]\r 23%|██▎       | 208/900 [00:31<02:35,  4.44it/s]\r 23%|██▎       | 209/900 [00:31<02:35,  4.44it/s]\r 23%|██▎       | 210/900 [00:31<02:34,  4.45it/s]\r 23%|██▎       | 211/900 [00:31<02:34,  4.46it/s]\r 24%|██▎       | 212/900 [00:31<02:34,  4.46it/s]\r 24%|██▎       | 213/900 [00:32<02:35,  4.40it/s]\r 24%|██▍       | 214/900 [00:32<02:37,  4.37it/s]\r 24%|██▍       | 215/900 [00:32<02:36,  4.39it/s]\r 24%|██▍       | 216/900 [00:32<02:38,  4.32it/s]\r 24%|██▍       | 217/900 [00:33<02:38,  4.30it/s]\r 24%|██▍       | 218/900 [00:33<02:37,  4.33it/s]\r 24%|██▍       | 219/900 [00:33<02:39,  4.26it/s]\r 24%|██▍       | 220/900 [00:33<02:39,  4.25it/s]\r 25%|██▍       | 221/900 [00:34<02:39,  4.27it/s]\r 25%|██▍       | 222/900 [00:34<02:40,  4.22it/s]\r 25%|██▍       | 223/900 [00:34<02:40,  4.23it/s]\r 25%|██▍       | 224/900 [00:34<02:39,  4.23it/s]\r 25%|██▌       | 225/900 [00:34<02:37,  4.30it/s]\r 25%|██▌       | 226/900 [00:35<02:40,  4.20it/s]\r 25%|██▌       | 227/900 [00:35<02:40,  4.19it/s]\r 25%|██▌       | 228/900 [00:35<02:40,  4.18it/s]\r 25%|██▌       | 229/900 [00:35<02:43,  4.10it/s]\r 26%|██▌       | 230/900 [00:36<02:42,  4.13it/s]\r 26%|██▌       | 231/900 [00:36<02:41,  4.14it/s]\r 26%|██▌       | 232/900 [00:36<02:41,  4.13it/s]\r 26%|██▌       | 233/900 [00:36<02:42,  4.11it/s]\r 26%|██▌       | 234/900 [00:37<02:42,  4.09it/s]\r 26%|██▌       | 235/900 [00:37<02:43,  4.06it/s]\r 26%|██▌       | 236/900 [00:37<02:42,  4.09it/s]\r 26%|██▋       | 237/900 [00:37<02:43,  4.06it/s]\r 26%|██▋       | 238/900 [00:38<02:43,  4.06it/s]\r 27%|██▋       | 239/900 [00:38<02:43,  4.05it/s]\r 27%|██▋       | 240/900 [00:38<02:45,  3.99it/s]\r 27%|██▋       | 241/900 [00:38<02:44,  4.01it/s]\r 27%|██▋       | 242/900 [00:39<02:44,  4.01it/s]\r 27%|██▋       | 243/900 [00:39<02:43,  4.01it/s]\r 27%|██▋       | 244/900 [00:39<02:44,  3.98it/s]\r 27%|██▋       | 245/900 [00:39<02:44,  3.97it/s]\r 27%|██▋       | 246/900 [00:40<02:44,  3.97it/s]\r 27%|██▋       | 247/900 [00:40<02:45,  3.95it/s]\r 28%|██▊       | 248/900 [00:40<02:45,  3.94it/s]\r 28%|██▊       | 249/900 [00:40<02:45,  3.92it/s]\r 28%|██▊       | 250/900 [00:41<02:46,  3.89it/s]\r 28%|██▊       | 251/900 [00:41<02:46,  3.90it/s]\r 28%|██▊       | 252/900 [00:41<02:48,  3.86it/s]\r 28%|██▊       | 253/900 [00:41<02:47,  3.86it/s]\r 28%|██▊       | 254/900 [00:42<02:48,  3.84it/s]\r 28%|██▊       | 255/900 [00:42<02:48,  3.83it/s]\r 28%|██▊       | 256/900 [00:42<02:47,  3.85it/s]\r 29%|██▊       | 257/900 [00:43<02:48,  3.83it/s]\r 29%|██▊       | 258/900 [00:43<02:48,  3.81it/s]\r 29%|██▉       | 259/900 [00:43<02:49,  3.78it/s]\r 29%|██▉       | 260/900 [00:43<02:49,  3.78it/s]\r 29%|██▉       | 261/900 [00:44<02:48,  3.80it/s]\r 29%|██▉       | 262/900 [00:44<02:48,  3.78it/s]\r 29%|██▉       | 263/900 [00:44<02:48,  3.77it/s]\r 29%|██▉       | 264/900 [00:44<02:46,  3.82it/s]\r 29%|██▉       | 265/900 [00:45<02:46,  3.82it/s]\r 30%|██▉       | 266/900 [00:45<02:45,  3.83it/s]\r 30%|██▉       | 267/900 [00:45<02:46,  3.81it/s]\r 30%|██▉       | 268/900 [00:45<02:44,  3.84it/s]\r 30%|██▉       | 269/900 [00:46<02:43,  3.86it/s]\r 30%|███       | 270/900 [00:46<02:42,  3.87it/s]\r 30%|███       | 271/900 [00:46<02:42,  3.88it/s]\r 30%|███       | 272/900 [00:46<02:41,  3.88it/s]\r 30%|███       | 273/900 [00:47<02:41,  3.88it/s]\r 30%|███       | 274/900 [00:47<02:41,  3.87it/s]\r 31%|███       | 275/900 [00:47<02:41,  3.87it/s]\r 31%|███       | 276/900 [00:47<02:41,  3.86it/s]\r 31%|███       | 277/900 [00:48<02:42,  3.84it/s]\r 31%|███       | 278/900 [00:48<02:42,  3.84it/s]\r 31%|███       | 279/900 [00:48<02:42,  3.83it/s]\r 31%|███       | 280/900 [00:49<02:42,  3.82it/s]\r 31%|███       | 281/900 [00:49<02:42,  3.81it/s]\r 31%|███▏      | 282/900 [00:49<02:42,  3.80it/s]\r 31%|███▏      | 283/900 [00:49<02:43,  3.78it/s]\r 32%|███▏      | 284/900 [00:50<02:44,  3.74it/s]\r 32%|███▏      | 285/900 [00:50<02:44,  3.74it/s]\r 32%|███▏      | 286/900 [00:50<02:43,  3.75it/s]\r 32%|███▏      | 287/900 [00:50<02:43,  3.75it/s]\r 32%|███▏      | 288/900 [00:51<02:43,  3.74it/s]\r 32%|███▏      | 289/900 [00:51<02:43,  3.74it/s]\r 32%|███▏      | 290/900 [00:51<02:43,  3.73it/s]\r 32%|███▏      | 291/900 [00:51<02:43,  3.72it/s]\r 32%|███▏      | 292/900 [00:52<02:44,  3.70it/s]\r 33%|███▎      | 293/900 [00:52<02:45,  3.68it/s]\r 33%|███▎      | 294/900 [00:52<02:45,  3.66it/s]\r 33%|███▎      | 295/900 [00:53<02:45,  3.66it/s]\r 33%|███▎      | 296/900 [00:53<02:45,  3.65it/s]\r 33%|███▎      | 297/900 [00:53<02:47,  3.60it/s]\r 33%|███▎      | 298/900 [00:53<02:47,  3.59it/s]\r 33%|███▎      | 299/900 [00:54<02:47,  3.58it/s]\r 33%|███▎      | 300/900 [00:54<02:46,  3.59it/s]\r 33%|███▎      | 301/900 [00:54<02:46,  3.59it/s]\r 34%|███▎      | 302/900 [00:55<02:46,  3.59it/s]\r 34%|███▎      | 303/900 [00:55<02:46,  3.59it/s]\r 34%|███▍      | 304/900 [00:55<02:46,  3.59it/s]\r 34%|███▍      | 305/900 [00:55<02:46,  3.57it/s]\r 34%|███▍      | 306/900 [00:56<02:46,  3.57it/s]\r 34%|███▍      | 307/900 [00:56<02:46,  3.56it/s]\r 34%|███▍      | 308/900 [00:56<02:47,  3.54it/s]\r 34%|███▍      | 309/900 [00:57<02:46,  3.54it/s]\r 34%|███▍      | 310/900 [00:57<02:46,  3.54it/s]\r 35%|███▍      | 311/900 [00:57<02:47,  3.52it/s]\r 35%|███▍      | 312/900 [00:57<02:47,  3.52it/s]\r 35%|███▍      | 313/900 [00:58<02:47,  3.51it/s]\r 35%|███▍      | 314/900 [00:58<02:47,  3.51it/s]\r 35%|███▌      | 315/900 [00:58<02:47,  3.50it/s]\r 35%|███▌      | 316/900 [00:59<02:47,  3.50it/s]\r 35%|███▌      | 317/900 [00:59<02:47,  3.49it/s]\r 35%|███▌      | 318/900 [00:59<02:48,  3.46it/s]\r 35%|███▌      | 319/900 [00:59<02:48,  3.45it/s]\r 36%|███▌      | 320/900 [01:00<02:48,  3.44it/s]\r 36%|███▌      | 321/900 [01:00<02:48,  3.43it/s]\r 36%|███▌      | 322/900 [01:00<02:48,  3.43it/s]\r 36%|███▌      | 323/900 [01:01<02:48,  3.42it/s]\r 36%|███▌      | 324/900 [01:01<02:48,  3.41it/s]\r 36%|███▌      | 325/900 [01:01<02:48,  3.41it/s]\r 36%|███▌      | 326/900 [01:01<02:48,  3.40it/s]\r 36%|███▋      | 327/900 [01:02<02:48,  3.40it/s]\r 36%|███▋      | 328/900 [01:02<02:48,  3.39it/s]\r 37%|███▋      | 329/900 [01:02<02:48,  3.38it/s]\r 37%|███▋      | 330/900 [01:03<02:48,  3.38it/s]\r 37%|███▋      | 331/900 [01:03<02:48,  3.37it/s]\r 37%|███▋      | 332/900 [01:03<02:48,  3.37it/s]\r 37%|███▋      | 333/900 [01:04<02:48,  3.36it/s]\r 37%|███▋      | 334/900 [01:04<02:49,  3.34it/s]\r 37%|███▋      | 335/900 [01:04<02:49,  3.33it/s]\r 37%|███▋      | 336/900 [01:04<02:49,  3.33it/s]\r 37%|███▋      | 337/900 [01:05<02:50,  3.31it/s]\r 38%|███▊      | 338/900 [01:05<02:50,  3.30it/s]\r 38%|███▊      | 339/900 [01:05<02:50,  3.30it/s]\r 38%|███▊      | 340/900 [01:06<02:50,  3.29it/s]\r 38%|███▊      | 341/900 [01:06<02:49,  3.29it/s]\r 38%|███▊      | 342/900 [01:06<02:49,  3.29it/s]\r 38%|███▊      | 343/900 [01:07<02:49,  3.28it/s]\r 38%|███▊      | 344/900 [01:07<02:49,  3.27it/s]\r 38%|███▊      | 345/900 [01:07<02:52,  3.22it/s]\r 38%|███▊      | 346/900 [01:08<02:51,  3.23it/s]\r 39%|███▊      | 347/900 [01:08<02:51,  3.23it/s]\r 39%|███▊      | 348/900 [01:08<02:50,  3.23it/s]\r 39%|███▉      | 349/900 [01:08<02:51,  3.22it/s]\r 39%|███▉      | 350/900 [01:09<02:50,  3.22it/s]\r 39%|███▉      | 351/900 [01:09<02:51,  3.20it/s]\r 39%|███▉      | 352/900 [01:09<02:51,  3.20it/s]\r 39%|███▉      | 353/900 [01:10<02:51,  3.20it/s]\r 39%|███▉      | 354/900 [01:10<02:50,  3.19it/s]\r 39%|███▉      | 355/900 [01:10<02:51,  3.18it/s]\r 40%|███▉      | 356/900 [01:11<02:51,  3.18it/s]\r 40%|███▉      | 357/900 [01:11<02:50,  3.18it/s]\r 40%|███▉      | 358/900 [01:11<02:51,  3.16it/s]\r 40%|███▉      | 359/900 [01:12<02:51,  3.16it/s]\r 40%|████      | 360/900 [01:12<02:51,  3.16it/s]\r 40%|████      | 361/900 [01:12<02:51,  3.15it/s]\r 40%|████      | 362/900 [01:13<02:51,  3.14it/s]\r 40%|████      | 363/900 [01:13<02:51,  3.12it/s]\r 40%|████      | 364/900 [01:13<02:51,  3.12it/s]\r 41%|████      | 365/900 [01:14<02:51,  3.12it/s]\r 41%|████      | 366/900 [01:14<02:51,  3.12it/s]\r 41%|████      | 367/900 [01:14<02:51,  3.11it/s]\r 41%|████      | 368/900 [01:14<02:51,  3.11it/s]\r 41%|████      | 369/900 [01:15<02:51,  3.10it/s]\r 41%|████      | 370/900 [01:15<02:51,  3.09it/s]\r 41%|████      | 371/900 [01:15<02:51,  3.08it/s]\r 41%|████▏     | 372/900 [01:16<02:51,  3.08it/s]\r 41%|████▏     | 373/900 [01:16<02:51,  3.07it/s]\r 42%|████▏     | 374/900 [01:16<02:52,  3.06it/s]\r 42%|████▏     | 375/900 [01:17<02:52,  3.04it/s]\r 42%|████▏     | 376/900 [01:17<02:52,  3.04it/s]\r 42%|████▏     | 377/900 [01:17<02:51,  3.04it/s]\r 42%|████▏     | 378/900 [01:18<02:51,  3.04it/s]\r 42%|████▏     | 379/900 [01:18<02:51,  3.04it/s]\r 42%|████▏     | 380/900 [01:18<02:52,  3.02it/s]\r 42%|████▏     | 381/900 [01:19<02:51,  3.02it/s]\r 42%|████▏     | 382/900 [01:19<02:52,  3.00it/s]\r 43%|████▎     | 383/900 [01:19<02:52,  2.99it/s]\r 43%|████▎     | 384/900 [01:20<02:52,  2.99it/s]\r 43%|████▎     | 385/900 [01:20<02:52,  2.99it/s]\r 43%|████▎     | 386/900 [01:20<02:51,  2.99it/s]\r 43%|████▎     | 387/900 [01:21<02:54,  2.95it/s]\r 43%|████▎     | 388/900 [01:21<02:53,  2.95it/s]\r 43%|████▎     | 389/900 [01:21<02:52,  2.96it/s]\r 43%|████▎     | 390/900 [01:22<02:52,  2.96it/s]\r 43%|████▎     | 391/900 [01:22<02:52,  2.95it/s]\r 44%|████▎     | 392/900 [01:22<02:52,  2.95it/s]\r 44%|████▎     | 393/900 [01:23<02:52,  2.95it/s]\r 44%|████▍     | 394/900 [01:23<02:51,  2.94it/s]\r 44%|████▍     | 395/900 [01:23<02:51,  2.94it/s]\r 44%|████▍     | 396/900 [01:24<02:51,  2.93it/s]\r 44%|████▍     | 397/900 [01:24<02:55,  2.87it/s]\r 44%|████▍     | 398/900 [01:25<02:54,  2.88it/s]\r 44%|████▍     | 399/900 [01:25<02:53,  2.88it/s]\r 44%|████▍     | 400/900 [01:25<02:53,  2.88it/s]\r 45%|████▍     | 401/900 [01:26<02:53,  2.88it/s]\r 45%|████▍     | 402/900 [01:26<02:53,  2.88it/s]\r 45%|████▍     | 403/900 [01:26<02:53,  2.87it/s]\r 45%|████▍     | 404/900 [01:27<02:52,  2.87it/s]\r 45%|████▌     | 405/900 [01:27<02:52,  2.87it/s]\r 45%|████▌     | 406/900 [01:27<02:52,  2.87it/s]\r 45%|████▌     | 407/900 [01:28<02:52,  2.86it/s]\r 45%|████▌     | 408/900 [01:28<02:52,  2.86it/s]\r 45%|████▌     | 409/900 [01:28<02:52,  2.85it/s]\r 46%|████▌     | 410/900 [01:29<02:52,  2.84it/s]\r 46%|████▌     | 411/900 [01:29<02:52,  2.84it/s]\r 46%|████▌     | 412/900 [01:29<02:52,  2.83it/s]\r 46%|████▌     | 413/900 [01:30<02:52,  2.82it/s]\r 46%|████▌     | 414/900 [01:30<02:52,  2.82it/s]\r 46%|████▌     | 415/900 [01:31<02:52,  2.82it/s]\r 46%|████▌     | 416/900 [01:31<02:51,  2.81it/s]\r 46%|████▋     | 417/900 [01:31<02:51,  2.81it/s]\r 46%|████▋     | 418/900 [01:32<02:51,  2.81it/s]\r 47%|████▋     | 419/900 [01:32<02:51,  2.80it/s]\r 47%|████▋     | 420/900 [01:32<02:51,  2.80it/s]\r 47%|████▋     | 421/900 [01:33<02:51,  2.79it/s]\r 47%|████▋     | 422/900 [01:33<02:52,  2.77it/s]\r 47%|████▋     | 423/900 [01:33<02:52,  2.77it/s]\r 47%|████▋     | 424/900 [01:34<02:52,  2.76it/s]\r 47%|████▋     | 425/900 [01:34<02:51,  2.76it/s]\r 47%|████▋     | 426/900 [01:34<02:51,  2.76it/s]\r 47%|████▋     | 427/900 [01:35<02:51,  2.75it/s]\r 48%|████▊     | 428/900 [01:35<02:51,  2.75it/s]\r 48%|████▊     | 429/900 [01:36<02:51,  2.74it/s]\r 48%|████▊     | 430/900 [01:36<02:52,  2.73it/s]\r 48%|████▊     | 431/900 [01:36<02:52,  2.73it/s]\r 48%|████▊     | 432/900 [01:37<02:51,  2.72it/s]\r 48%|████▊     | 433/900 [01:37<02:51,  2.72it/s]\r 48%|████▊     | 434/900 [01:37<02:51,  2.72it/s]\r 48%|████▊     | 435/900 [01:38<02:51,  2.71it/s]\r 48%|████▊     | 436/900 [01:38<02:51,  2.71it/s]\r 49%|████▊     | 437/900 [01:39<02:51,  2.69it/s]\r 49%|████▊     | 438/900 [01:39<02:51,  2.69it/s]\r 49%|████▉     | 439/900 [01:39<02:51,  2.69it/s]\r 49%|████▉     | 440/900 [01:40<02:51,  2.68it/s]\r 49%|████▉     | 441/900 [01:40<02:51,  2.68it/s]\r 49%|████▉     | 442/900 [01:40<02:51,  2.67it/s]\r 49%|████▉     | 443/900 [01:41<02:51,  2.67it/s]\r 49%|████▉     | 444/900 [01:41<02:51,  2.66it/s]\r 49%|████▉     | 445/900 [01:42<02:51,  2.66it/s]\r 50%|████▉     | 446/900 [01:42<02:50,  2.66it/s]\r 50%|████▉     | 447/900 [01:42<02:50,  2.65it/s]\r 50%|████▉     | 448/900 [01:43<02:50,  2.64it/s]\r 50%|████▉     | 449/900 [01:43<02:50,  2.64it/s]\r 50%|█████     | 450/900 [01:43<02:50,  2.64it/s]\r 50%|█████     | 451/900 [01:44<02:50,  2.63it/s]\r 50%|█████     | 452/900 [01:44<02:50,  2.63it/s]\r 50%|█████     | 453/900 [01:45<02:51,  2.61it/s]\r 50%|█████     | 454/900 [01:45<02:50,  2.61it/s]\r 51%|█████     | 455/900 [01:45<02:50,  2.60it/s]\r 51%|█████     | 456/900 [01:46<02:50,  2.60it/s]\r 51%|█████     | 457/900 [01:46<02:50,  2.60it/s]\r 51%|█████     | 458/900 [01:47<02:50,  2.60it/s]\r 51%|█████     | 459/900 [01:47<02:49,  2.60it/s]\r 51%|█████     | 460/900 [01:47<02:49,  2.59it/s]\r 51%|█████     | 461/900 [01:48<02:50,  2.58it/s]\r 51%|█████▏    | 462/900 [01:48<02:49,  2.58it/s]\r 51%|█████▏    | 463/900 [01:48<02:49,  2.58it/s]\r 52%|█████▏    | 464/900 [01:49<02:49,  2.57it/s]\r 52%|█████▏    | 465/900 [01:49<02:49,  2.57it/s]\r 52%|█████▏    | 466/900 [01:50<02:49,  2.56it/s]\r 52%|█████▏    | 467/900 [01:50<02:49,  2.56it/s]\r 52%|█████▏    | 468/900 [01:50<02:49,  2.55it/s]\r 52%|█████▏    | 469/900 [01:51<02:49,  2.54it/s]\r 52%|█████▏    | 470/900 [01:51<02:55,  2.44it/s]\r 52%|█████▏    | 471/900 [01:52<02:53,  2.47it/s]\r 52%|█████▏    | 472/900 [01:52<02:52,  2.48it/s]\r 53%|█████▎    | 473/900 [01:52<02:51,  2.50it/s]\r 53%|█████▎    | 474/900 [01:53<02:50,  2.49it/s]\r 53%|█████▎    | 475/900 [01:53<02:50,  2.50it/s]\r 53%|█████▎    | 476/900 [01:54<02:49,  2.50it/s]\r 53%|█████▎    | 477/900 [01:54<02:48,  2.50it/s]\r 53%|█████▎    | 478/900 [01:54<02:49,  2.49it/s]\r 53%|█████▎    | 479/900 [01:55<02:48,  2.49it/s]\r 53%|█████▎    | 480/900 [01:55<02:48,  2.50it/s]\r 53%|█████▎    | 481/900 [01:56<02:48,  2.49it/s]\r 54%|█████▎    | 482/900 [01:56<02:47,  2.49it/s]\r 54%|█████▎    | 483/900 [01:56<02:47,  2.49it/s]\r 54%|█████▍    | 484/900 [01:57<02:47,  2.48it/s]\r 54%|█████▍    | 485/900 [01:57<02:47,  2.48it/s]\r 54%|█████▍    | 486/900 [01:58<02:47,  2.48it/s]\r 54%|█████▍    | 487/900 [01:58<02:47,  2.47it/s]\r 54%|█████▍    | 488/900 [01:58<02:47,  2.46it/s]\r 54%|█████▍    | 489/900 [01:59<02:46,  2.46it/s]\r 54%|█████▍    | 490/900 [01:59<02:47,  2.45it/s]\r 55%|█████▍    | 491/900 [02:00<02:46,  2.45it/s]\r 55%|█████▍    | 492/900 [02:00<02:46,  2.45it/s]\r 55%|█████▍    | 493/900 [02:01<02:46,  2.44it/s]\r 55%|█████▍    | 494/900 [02:01<02:46,  2.43it/s]\r 55%|█████▌    | 495/900 [02:01<02:46,  2.43it/s]\r 55%|█████▌    | 496/900 [02:02<02:46,  2.43it/s]\r 55%|█████▌    | 497/900 [02:02<02:45,  2.43it/s]\r 55%|█████▌    | 498/900 [02:03<02:46,  2.42it/s]\r 55%|█████▌    | 499/900 [02:03<02:45,  2.42it/s]\r 56%|█████▌    | 500/900 [02:03<02:45,  2.42it/s]\r 56%|█████▌    | 501/900 [02:04<02:45,  2.41it/s]\r 56%|█████▌    | 502/900 [02:04<02:45,  2.41it/s]\r 56%|█████▌    | 503/900 [02:05<02:46,  2.39it/s]\r 56%|█████▌    | 504/900 [02:05<02:45,  2.39it/s]\r 56%|█████▌    | 505/900 [02:06<02:45,  2.39it/s]\r 56%|█████▌    | 506/900 [02:06<02:45,  2.38it/s]\r 56%|█████▋    | 507/900 [02:06<02:45,  2.38it/s]\r 56%|█████▋    | 508/900 [02:07<02:44,  2.38it/s]\r 57%|█████▋    | 509/900 [02:07<02:44,  2.38it/s]\r 57%|█████▋    | 510/900 [02:08<02:44,  2.38it/s]\r 57%|█████▋    | 511/900 [02:08<02:43,  2.38it/s]\r 57%|█████▋    | 512/900 [02:08<02:43,  2.37it/s]\r 57%|█████▋    | 513/900 [02:09<02:43,  2.37it/s]\r 57%|█████▋    | 514/900 [02:09<02:43,  2.36it/s]\r 57%|█████▋    | 515/900 [02:10<02:43,  2.36it/s]\r 57%|█████▋    | 516/900 [02:10<02:43,  2.36it/s]\r 57%|█████▋    | 517/900 [02:11<02:42,  2.35it/s]\r 58%|█████▊    | 518/900 [02:11<02:42,  2.35it/s]\r 58%|█████▊    | 519/900 [02:11<02:42,  2.34it/s]\r 58%|█████▊    | 520/900 [02:12<02:42,  2.34it/s]\r 58%|█████▊    | 521/900 [02:12<02:42,  2.34it/s]\r 58%|█████▊    | 522/900 [02:13<02:42,  2.32it/s]\r 58%|█████▊    | 523/900 [02:13<02:42,  2.32it/s]\r 58%|█████▊    | 524/900 [02:14<02:42,  2.31it/s]\r 58%|█████▊    | 525/900 [02:14<02:42,  2.31it/s]\r 58%|█████▊    | 526/900 [02:15<02:41,  2.31it/s]\r 59%|█████▊    | 527/900 [02:15<02:41,  2.31it/s]\r 59%|█████▊    | 528/900 [02:15<02:41,  2.31it/s]\r 59%|█████▉    | 529/900 [02:16<02:40,  2.31it/s]\r 59%|█████▉    | 530/900 [02:16<02:40,  2.30it/s]\r 59%|█████▉    | 531/900 [02:17<02:40,  2.30it/s]\r 59%|█████▉    | 532/900 [02:17<02:40,  2.30it/s]\r 59%|█████▉    | 533/900 [02:18<02:40,  2.29it/s]\r 59%|█████▉    | 534/900 [02:18<02:44,  2.22it/s]\r 59%|█████▉    | 535/900 [02:18<02:43,  2.24it/s]\r 60%|█████▉    | 536/900 [02:19<02:41,  2.25it/s]\r 60%|█████▉    | 537/900 [02:19<02:40,  2.26it/s]\r 60%|█████▉    | 538/900 [02:20<02:40,  2.26it/s]\r 60%|█████▉    | 539/900 [02:20<02:39,  2.27it/s]\r 60%|██████    | 540/900 [02:21<02:41,  2.22it/s]\r 60%|██████    | 541/900 [02:21<02:40,  2.23it/s]\r 60%|██████    | 542/900 [02:22<02:39,  2.24it/s]\r 60%|██████    | 543/900 [02:22<02:39,  2.25it/s]\r 60%|██████    | 544/900 [02:22<02:39,  2.24it/s]\r 61%|██████    | 545/900 [02:23<02:38,  2.24it/s]\r 61%|██████    | 546/900 [02:23<02:38,  2.24it/s]\r 61%|██████    | 547/900 [02:24<02:38,  2.23it/s]\r 61%|██████    | 548/900 [02:24<02:39,  2.21it/s]\r 61%|██████    | 549/900 [02:25<02:38,  2.21it/s]\r 61%|██████    | 550/900 [02:25<02:38,  2.21it/s]\r 61%|██████    | 551/900 [02:26<02:37,  2.21it/s]\r 61%|██████▏   | 552/900 [02:26<02:37,  2.22it/s]\r 61%|██████▏   | 553/900 [02:27<02:36,  2.21it/s]\r 62%|██████▏   | 554/900 [02:27<02:36,  2.21it/s]\r 62%|██████▏   | 555/900 [02:27<02:36,  2.21it/s]\r 62%|██████▏   | 556/900 [02:28<02:35,  2.21it/s]\r 62%|██████▏   | 557/900 [02:28<02:35,  2.20it/s]\r 62%|██████▏   | 558/900 [02:29<02:36,  2.18it/s]\r 62%|██████▏   | 559/900 [02:29<02:36,  2.17it/s]\r 62%|██████▏   | 560/900 [02:30<02:36,  2.17it/s]\r 62%|██████▏   | 561/900 [02:30<02:35,  2.18it/s]\r 62%|██████▏   | 562/900 [02:31<02:35,  2.17it/s]\r 63%|██████▎   | 563/900 [02:31<02:37,  2.14it/s]\r 63%|██████▎   | 564/900 [02:32<02:37,  2.13it/s]\r 63%|██████▎   | 565/900 [02:32<02:37,  2.13it/s]\r 63%|██████▎   | 566/900 [02:33<02:37,  2.12it/s]\r 63%|██████▎   | 567/900 [02:33<02:37,  2.12it/s]\r 63%|██████▎   | 568/900 [02:34<02:37,  2.11it/s]\r 63%|██████▎   | 569/900 [02:34<02:36,  2.12it/s]\r 63%|██████▎   | 570/900 [02:34<02:35,  2.12it/s]\r 63%|██████▎   | 571/900 [02:35<02:39,  2.06it/s]\r 64%|██████▎   | 572/900 [02:35<02:37,  2.08it/s]\r 64%|██████▎   | 573/900 [02:36<02:36,  2.09it/s]\r 64%|██████▍   | 574/900 [02:36<02:35,  2.09it/s]\r 64%|██████▍   | 575/900 [02:37<02:35,  2.09it/s]\r 64%|██████▍   | 576/900 [02:37<02:35,  2.08it/s]\r 64%|██████▍   | 577/900 [02:38<02:38,  2.03it/s]\r 64%|██████▍   | 578/900 [02:38<02:37,  2.04it/s]\r 64%|██████▍   | 579/900 [02:39<02:37,  2.04it/s]\r 64%|██████▍   | 580/900 [02:39<02:36,  2.05it/s]\r 65%|██████▍   | 581/900 [02:40<02:37,  2.02it/s]\r 65%|██████▍   | 582/900 [02:40<02:39,  2.00it/s]\r 65%|██████▍   | 583/900 [02:41<02:37,  2.02it/s]\r 65%|██████▍   | 584/900 [02:41<02:35,  2.03it/s]\r 65%|██████▌   | 585/900 [02:42<02:35,  2.03it/s]\r 65%|██████▌   | 586/900 [02:42<02:34,  2.03it/s]\r 65%|██████▌   | 587/900 [02:43<02:34,  2.03it/s]\r 65%|██████▌   | 588/900 [02:43<02:33,  2.04it/s]\r 65%|██████▌   | 589/900 [02:44<02:32,  2.03it/s]\r 66%|██████▌   | 590/900 [02:44<02:32,  2.03it/s]\r 66%|██████▌   | 591/900 [02:45<02:32,  2.03it/s]\r 66%|██████▌   | 592/900 [02:45<02:37,  1.96it/s]\r 66%|██████▌   | 593/900 [02:46<02:35,  1.98it/s]\r 66%|██████▌   | 594/900 [02:46<02:33,  1.99it/s]\r 66%|██████▌   | 595/900 [02:47<02:32,  2.00it/s]\r 66%|██████▌   | 596/900 [02:47<02:31,  2.00it/s]\r 66%|██████▋   | 597/900 [02:48<02:31,  2.00it/s]\r 66%|██████▋   | 598/900 [02:48<02:30,  2.01it/s]\r 67%|██████▋   | 599/900 [02:49<02:30,  2.00it/s]\r 67%|██████▋   | 600/900 [02:49<02:30,  2.00it/s]\r 67%|██████▋   | 601/900 [02:50<02:30,  1.98it/s]\r 67%|██████▋   | 602/900 [02:50<02:29,  1.99it/s]\r 67%|██████▋   | 603/900 [02:51<02:29,  1.99it/s]\r 67%|██████▋   | 604/900 [02:51<02:28,  1.99it/s]\r 67%|██████▋   | 605/900 [02:52<02:27,  2.00it/s]\r 67%|██████▋   | 606/900 [02:52<02:27,  1.99it/s]\r 67%|██████▋   | 607/900 [02:53<02:27,  1.99it/s]\r 68%|██████▊   | 608/900 [02:53<02:26,  1.99it/s]\r 68%|██████▊   | 609/900 [02:54<02:27,  1.97it/s]\r 68%|██████▊   | 610/900 [02:54<02:26,  1.97it/s]\r 68%|██████▊   | 611/900 [02:55<02:27,  1.95it/s]\r 68%|██████▊   | 612/900 [02:55<02:26,  1.97it/s]\r 68%|██████▊   | 613/900 [02:56<02:25,  1.98it/s]\r 68%|██████▊   | 614/900 [02:56<02:24,  1.98it/s]\r 68%|██████▊   | 615/900 [02:57<02:23,  1.98it/s]\r 68%|██████▊   | 616/900 [02:57<02:24,  1.96it/s]\r 69%|██████▊   | 617/900 [02:58<02:26,  1.93it/s]\r 69%|██████▊   | 618/900 [02:59<02:28,  1.90it/s]\r 69%|██████▉   | 619/900 [02:59<02:26,  1.91it/s]\r 69%|██████▉   | 620/900 [03:00<02:25,  1.92it/s]\r 69%|██████▉   | 621/900 [03:00<02:23,  1.94it/s]\r 69%|██████▉   | 622/900 [03:01<02:23,  1.94it/s]\r 69%|██████▉   | 623/900 [03:01<02:24,  1.92it/s]\r 69%|██████▉   | 624/900 [03:02<02:24,  1.91it/s]\r 69%|██████▉   | 625/900 [03:02<02:24,  1.90it/s]\r 70%|██████▉   | 626/900 [03:03<02:24,  1.90it/s]\r 70%|██████▉   | 627/900 [03:03<02:24,  1.89it/s]\r 70%|██████▉   | 628/900 [03:04<02:24,  1.89it/s]\r 70%|██████▉   | 629/900 [03:04<02:23,  1.89it/s]\r 70%|███████   | 630/900 [03:05<02:33,  1.76it/s]\r 70%|███████   | 631/900 [03:05<02:28,  1.81it/s]\r 70%|███████   | 632/900 [03:06<02:25,  1.84it/s]\r 70%|███████   | 633/900 [03:06<02:23,  1.86it/s]\r 70%|███████   | 634/900 [03:07<02:22,  1.87it/s]\r 71%|███████   | 635/900 [03:08<02:21,  1.87it/s]\r 71%|███████   | 636/900 [03:08<02:21,  1.87it/s]\r 71%|███████   | 637/900 [03:09<02:20,  1.88it/s]\r 71%|███████   | 638/900 [03:09<02:20,  1.86it/s]\r 71%|███████   | 639/900 [03:10<02:20,  1.86it/s]\r 71%|███████   | 640/900 [03:10<02:19,  1.87it/s]\r 71%|███████   | 641/900 [03:11<02:17,  1.88it/s]\r 71%|███████▏  | 642/900 [03:11<02:16,  1.89it/s]\r 71%|███████▏  | 643/900 [03:12<02:17,  1.86it/s]\r 72%|███████▏  | 644/900 [03:12<02:19,  1.84it/s]\r 72%|███████▏  | 645/900 [03:13<02:19,  1.83it/s]\r 72%|███████▏  | 646/900 [03:13<02:17,  1.85it/s]\r 72%|███████▏  | 647/900 [03:14<02:17,  1.84it/s]\r 72%|███████▏  | 648/900 [03:15<02:16,  1.85it/s]\r 72%|███████▏  | 649/900 [03:15<02:14,  1.86it/s]\r 72%|███████▏  | 650/900 [03:16<02:13,  1.87it/s]\r 72%|███████▏  | 651/900 [03:16<02:14,  1.85it/s]\r 72%|███████▏  | 652/900 [03:17<02:12,  1.87it/s]\r 73%|███████▎  | 653/900 [03:17<02:11,  1.87it/s]\r 73%|███████▎  | 654/900 [03:18<02:13,  1.85it/s]\r 73%|███████▎  | 655/900 [03:18<02:11,  1.86it/s]\r 73%|███████▎  | 656/900 [03:19<02:10,  1.87it/s]\r 73%|███████▎  | 657/900 [03:19<02:09,  1.87it/s]\r 73%|███████▎  | 658/900 [03:20<02:10,  1.85it/s]\r 73%|███████▎  | 659/900 [03:20<02:09,  1.86it/s]\r 73%|███████▎  | 660/900 [03:21<02:10,  1.83it/s]\r 73%|███████▎  | 661/900 [03:22<02:09,  1.85it/s]\r 74%|███████▎  | 662/900 [03:22<02:08,  1.85it/s]\r 74%|███████▎  | 663/900 [03:23<02:08,  1.85it/s]\r 74%|███████▍  | 664/900 [03:23<02:07,  1.85it/s]\r 74%|███████▍  | 665/900 [03:24<02:07,  1.85it/s]\r 74%|███████▍  | 666/900 [03:24<02:07,  1.83it/s]\r 74%|███████▍  | 667/900 [03:25<02:06,  1.83it/s]\r 74%|███████▍  | 668/900 [03:25<02:06,  1.84it/s]\r 74%|███████▍  | 669/900 [03:26<02:05,  1.84it/s]\r 74%|███████▍  | 670/900 [03:26<02:05,  1.83it/s]\r 75%|███████▍  | 671/900 [03:27<02:05,  1.83it/s]\r 75%|███████▍  | 672/900 [03:28<02:04,  1.83it/s]\r 75%|███████▍  | 673/900 [03:28<02:05,  1.80it/s]\r 75%|███████▍  | 674/900 [03:29<02:06,  1.78it/s]\r 75%|███████▌  | 675/900 [03:29<02:06,  1.78it/s]\r 75%|███████▌  | 676/900 [03:30<02:06,  1.77it/s]\r 75%|███████▌  | 677/900 [03:30<02:04,  1.79it/s]\r 75%|███████▌  | 678/900 [03:31<02:04,  1.78it/s]\r 75%|███████▌  | 679/900 [03:32<02:04,  1.78it/s]\r 76%|███████▌  | 680/900 [03:32<02:04,  1.77it/s]\r 76%|███████▌  | 681/900 [03:33<02:02,  1.78it/s]\r 76%|███████▌  | 682/900 [03:33<02:02,  1.78it/s]\r 76%|███████▌  | 683/900 [03:34<02:03,  1.76it/s]\r 76%|███████▌  | 684/900 [03:34<02:02,  1.76it/s]\r 76%|███████▌  | 685/900 [03:35<02:01,  1.77it/s]\r 76%|███████▌  | 686/900 [03:35<02:00,  1.77it/s]\r 76%|███████▋  | 687/900 [03:36<01:59,  1.78it/s]\r 76%|███████▋  | 688/900 [03:37<01:59,  1.77it/s]\r 77%|███████▋  | 689/900 [03:37<01:58,  1.78it/s]\r 77%|███████▋  | 690/900 [03:38<01:57,  1.79it/s]\r 77%|███████▋  | 691/900 [03:38<01:59,  1.75it/s]\r 77%|███████▋  | 692/900 [03:39<01:58,  1.76it/s]\r 77%|███████▋  | 693/900 [03:39<01:57,  1.76it/s]\r 77%|███████▋  | 694/900 [03:40<01:56,  1.76it/s]\r 77%|███████▋  | 695/900 [03:41<01:55,  1.77it/s]\r 77%|███████▋  | 696/900 [03:41<01:55,  1.77it/s]\r 77%|███████▋  | 697/900 [03:42<01:54,  1.78it/s]\r 78%|███████▊  | 698/900 [03:42<01:53,  1.78it/s]\r 78%|███████▊  | 699/900 [03:43<01:53,  1.78it/s]\r 78%|███████▊  | 700/900 [03:43<01:52,  1.78it/s]\r 78%|███████▊  | 701/900 [03:44<01:51,  1.78it/s]\r 78%|███████▊  | 702/900 [03:45<01:51,  1.77it/s]\r 78%|███████▊  | 703/900 [03:45<01:51,  1.77it/s]\r 78%|███████▊  | 704/900 [03:46<01:50,  1.78it/s]\r 78%|███████▊  | 705/900 [03:46<01:49,  1.78it/s]\r 78%|███████▊  | 706/900 [03:47<01:48,  1.78it/s]\r 79%|███████▊  | 707/900 [03:47<01:48,  1.77it/s]\r 79%|███████▊  | 708/900 [03:48<01:49,  1.76it/s]\r 79%|███████▉  | 709/900 [03:48<01:50,  1.73it/s]\r 79%|███████▉  | 710/900 [03:49<01:49,  1.73it/s]\r 79%|███████▉  | 711/900 [03:50<01:49,  1.73it/s]\r 79%|███████▉  | 712/900 [03:50<01:48,  1.74it/s]\r 79%|███████▉  | 713/900 [03:51<01:48,  1.73it/s]\r 79%|███████▉  | 714/900 [03:51<01:47,  1.73it/s]\r 79%|███████▉  | 715/900 [03:52<01:46,  1.74it/s]\r 80%|███████▉  | 716/900 [03:53<01:45,  1.75it/s]\r 80%|███████▉  | 717/900 [03:53<01:44,  1.75it/s]\r 80%|███████▉  | 718/900 [03:54<01:44,  1.75it/s]\r 80%|███████▉  | 719/900 [03:54<01:44,  1.73it/s]\r 80%|████████  | 720/900 [03:55<01:44,  1.73it/s]\r 80%|████████  | 721/900 [03:55<01:44,  1.71it/s]\r 80%|████████  | 722/900 [03:56<01:43,  1.71it/s]\r 80%|████████  | 723/900 [03:57<01:43,  1.71it/s]\r 80%|████████  | 724/900 [03:57<01:43,  1.70it/s]\r 81%|████████  | 725/900 [03:58<01:44,  1.68it/s]\r 81%|████████  | 726/900 [03:58<01:44,  1.67it/s]\r 81%|████████  | 727/900 [03:59<01:43,  1.67it/s]\r 81%|████████  | 728/900 [04:00<01:43,  1.67it/s]\r 81%|████████  | 729/900 [04:00<01:43,  1.66it/s]\r 81%|████████  | 730/900 [04:01<01:44,  1.63it/s]\r 81%|████████  | 731/900 [04:01<01:44,  1.62it/s]\r 81%|████████▏ | 732/900 [04:02<01:43,  1.63it/s]\r 81%|████████▏ | 733/900 [04:03<01:42,  1.63it/s]\r 82%|████████▏ | 734/900 [04:03<01:41,  1.63it/s]\r 82%|████████▏ | 735/900 [04:04<01:41,  1.63it/s]\r 82%|████████▏ | 736/900 [04:05<01:39,  1.64it/s]\r 82%|████████▏ | 737/900 [04:05<01:39,  1.64it/s]\r 82%|████████▏ | 738/900 [04:06<01:38,  1.65it/s]\r 82%|████████▏ | 739/900 [04:06<01:37,  1.65it/s]\r 82%|████████▏ | 740/900 [04:07<01:37,  1.65it/s]\r 82%|████████▏ | 741/900 [04:08<01:37,  1.64it/s]\r 82%|████████▏ | 742/900 [04:08<01:36,  1.65it/s]\r 83%|████████▎ | 743/900 [04:09<01:36,  1.63it/s]\r 83%|████████▎ | 744/900 [04:10<01:41,  1.54it/s]\r 83%|████████▎ | 745/900 [04:10<01:39,  1.56it/s]\r 83%|████████▎ | 746/900 [04:11<01:38,  1.57it/s]\r 83%|████████▎ | 747/900 [04:11<01:37,  1.56it/s]\r 83%|████████▎ | 748/900 [04:12<01:36,  1.57it/s]\r 83%|████████▎ | 749/900 [04:13<01:35,  1.58it/s]\r 83%|████████▎ | 750/900 [04:13<01:34,  1.58it/s]\r 83%|████████▎ | 751/900 [04:14<01:35,  1.57it/s]\r 84%|████████▎ | 752/900 [04:15<01:33,  1.58it/s]\r 84%|████████▎ | 753/900 [04:15<01:33,  1.57it/s]\r 84%|████████▍ | 754/900 [04:16<01:33,  1.57it/s]\r 84%|████████▍ | 755/900 [04:17<01:32,  1.57it/s]\r 84%|████████▍ | 756/900 [04:17<01:32,  1.56it/s]\r 84%|████████▍ | 757/900 [04:18<01:31,  1.57it/s]\r 84%|████████▍ | 758/900 [04:18<01:30,  1.57it/s]\r 84%|████████▍ | 759/900 [04:19<01:29,  1.57it/s]\r 84%|████████▍ | 760/900 [04:20<01:29,  1.57it/s]\r 85%|████████▍ | 761/900 [04:20<01:27,  1.58it/s]\r 85%|████████▍ | 762/900 [04:21<01:26,  1.59it/s]\r 85%|████████▍ | 763/900 [04:22<01:25,  1.60it/s]\r 85%|████████▍ | 764/900 [04:22<01:25,  1.59it/s]\r 85%|████████▌ | 765/900 [04:23<01:24,  1.60it/s]\r 85%|████████▌ | 766/900 [04:23<01:23,  1.60it/s]\r 85%|████████▌ | 767/900 [04:24<01:23,  1.59it/s]\r 85%|████████▌ | 768/900 [04:25<01:23,  1.59it/s]\r 85%|████████▌ | 769/900 [04:25<01:22,  1.60it/s]\r 86%|████████▌ | 770/900 [04:26<01:21,  1.60it/s]\r 86%|████████▌ | 771/900 [04:27<01:20,  1.60it/s]\r 86%|████████▌ | 772/900 [04:27<01:20,  1.60it/s]\r 86%|████████▌ | 773/900 [04:28<01:19,  1.60it/s]\r 86%|████████▌ | 774/900 [04:28<01:18,  1.60it/s]\r 86%|████████▌ | 775/900 [04:29<01:17,  1.60it/s]\r 86%|████████▌ | 776/900 [04:30<01:17,  1.59it/s]\r 86%|████████▋ | 777/900 [04:30<01:17,  1.59it/s]\r 86%|████████▋ | 778/900 [04:31<01:17,  1.58it/s]\r 87%|████████▋ | 779/900 [04:32<01:22,  1.47it/s]\r 87%|████████▋ | 780/900 [04:32<01:20,  1.49it/s]\r 87%|████████▋ | 781/900 [04:33<01:18,  1.52it/s]\r 87%|████████▋ | 782/900 [04:34<01:16,  1.54it/s]\r 87%|████████▋ | 783/900 [04:34<01:16,  1.53it/s]\r 87%|████████▋ | 784/900 [04:35<01:18,  1.48it/s]\r 87%|████████▋ | 785/900 [04:36<01:17,  1.48it/s]\r 87%|████████▋ | 786/900 [04:36<01:16,  1.49it/s]\r 87%|████████▋ | 787/900 [04:37<01:15,  1.50it/s]\r 88%|████████▊ | 788/900 [04:38<01:14,  1.51it/s]\r 88%|████████▊ | 789/900 [04:38<01:13,  1.50it/s]\r 88%|████████▊ | 790/900 [04:39<01:13,  1.50it/s]\r 88%|████████▊ | 791/900 [04:40<01:12,  1.51it/s]\r 88%|████████▊ | 792/900 [04:40<01:11,  1.51it/s]\r 88%|████████▊ | 793/900 [04:41<01:11,  1.50it/s]\r 88%|████████▊ | 794/900 [04:42<01:10,  1.50it/s]\r 88%|████████▊ | 795/900 [04:42<01:10,  1.50it/s]\r 88%|████████▊ | 796/900 [04:43<01:09,  1.49it/s]\r 89%|████████▊ | 797/900 [04:44<01:09,  1.49it/s]\r 89%|████████▊ | 798/900 [04:44<01:08,  1.49it/s]\r 89%|████████▉ | 799/900 [04:45<01:08,  1.48it/s]\r 89%|████████▉ | 800/900 [04:46<01:06,  1.50it/s]\r 89%|████████▉ | 801/900 [04:46<01:05,  1.51it/s]\r 89%|████████▉ | 802/900 [04:47<01:04,  1.51it/s]\r 89%|████████▉ | 803/900 [04:48<01:04,  1.51it/s]\r 89%|████████▉ | 804/900 [04:48<01:05,  1.47it/s]\r 89%|████████▉ | 805/900 [04:49<01:04,  1.48it/s]\r 90%|████████▉ | 806/900 [04:50<01:02,  1.49it/s]\r 90%|████████▉ | 807/900 [04:50<01:02,  1.50it/s]\r 90%|████████▉ | 808/900 [04:51<01:01,  1.50it/s]\r 90%|████████▉ | 809/900 [04:52<01:00,  1.50it/s]\r 90%|█████████ | 810/900 [04:52<00:59,  1.50it/s]\r 90%|█████████ | 811/900 [04:53<01:00,  1.48it/s]\r 90%|█████████ | 812/900 [04:54<00:59,  1.48it/s]\r 90%|█████████ | 813/900 [04:54<00:58,  1.49it/s]\r 90%|█████████ | 814/900 [04:55<00:57,  1.50it/s]\r 91%|█████████ | 815/900 [04:56<00:56,  1.49it/s]\r 91%|█████████ | 816/900 [04:56<00:56,  1.49it/s]\r 91%|█████████ | 817/900 [04:57<00:56,  1.48it/s]\r 91%|█████████ | 818/900 [04:58<00:58,  1.40it/s]\r 91%|█████████ | 819/900 [04:59<00:56,  1.43it/s]\r 91%|█████████ | 820/900 [04:59<00:55,  1.45it/s]\r 91%|█████████ | 821/900 [05:00<00:53,  1.46it/s]\r 91%|█████████▏| 822/900 [05:01<00:52,  1.47it/s]\r 91%|█████████▏| 823/900 [05:01<00:51,  1.48it/s]\r 92%|█████████▏| 824/900 [05:02<00:51,  1.49it/s]\r 92%|█████████▏| 825/900 [05:03<00:50,  1.48it/s]\r 92%|█████████▏| 826/900 [05:03<00:50,  1.47it/s]\r 92%|█████████▏| 827/900 [05:04<00:50,  1.46it/s]\r 92%|█████████▏| 828/900 [05:05<00:49,  1.47it/s]\r 92%|█████████▏| 829/900 [05:05<00:50,  1.40it/s]\r 92%|█████████▏| 830/900 [05:06<00:49,  1.42it/s]\r 92%|█████████▏| 831/900 [05:07<00:47,  1.45it/s]\r 92%|█████████▏| 832/900 [05:07<00:46,  1.46it/s]\r 93%|█████████▎| 833/900 [05:08<00:45,  1.48it/s]\r 93%|█████████▎| 834/900 [05:09<00:44,  1.49it/s]\r 93%|█████████▎| 835/900 [05:09<00:43,  1.50it/s]\r 93%|█████████▎| 836/900 [05:10<00:42,  1.50it/s]\r 93%|█████████▎| 837/900 [05:11<00:42,  1.49it/s]\r 93%|█████████▎| 838/900 [05:11<00:41,  1.49it/s]\r 93%|█████████▎| 839/900 [05:12<00:41,  1.49it/s]\r 93%|█████████▎| 840/900 [05:13<00:40,  1.49it/s]\r 93%|█████████▎| 841/900 [05:13<00:39,  1.50it/s]\r 94%|█████████▎| 842/900 [05:14<00:38,  1.50it/s]\r 94%|█████████▎| 843/900 [05:15<00:38,  1.50it/s]\r 94%|█████████▍| 844/900 [05:15<00:37,  1.50it/s]\r 94%|█████████▍| 845/900 [05:16<00:36,  1.50it/s]\r 94%|█████████▍| 846/900 [05:17<00:36,  1.49it/s]\r 94%|█████████▍| 847/900 [05:17<00:35,  1.50it/s]\r 94%|█████████▍| 848/900 [05:18<00:34,  1.49it/s]\r 94%|█████████▍| 849/900 [05:19<00:34,  1.49it/s]\r 94%|█████████▍| 850/900 [05:20<00:33,  1.49it/s]\r 95%|█████████▍| 851/900 [05:20<00:32,  1.50it/s]\r 95%|█████████▍| 852/900 [05:21<00:32,  1.49it/s]\r 95%|█████████▍| 853/900 [05:22<00:31,  1.49it/s]\r 95%|█████████▍| 854/900 [05:22<00:30,  1.49it/s]\r 95%|█████████▌| 855/900 [05:23<00:30,  1.48it/s]\r 95%|█████████▌| 856/900 [05:24<00:29,  1.48it/s]\r 95%|█████████▌| 857/900 [05:24<00:29,  1.46it/s]\r 95%|█████████▌| 858/900 [05:25<00:28,  1.46it/s]\r 95%|█████████▌| 859/900 [05:26<00:28,  1.45it/s]\r 96%|█████████▌| 860/900 [05:26<00:27,  1.46it/s]\r 96%|█████████▌| 861/900 [05:27<00:26,  1.45it/s]\r 96%|█████████▌| 862/900 [05:28<00:26,  1.44it/s]\r 96%|█████████▌| 863/900 [05:28<00:25,  1.43it/s]\r 96%|█████████▌| 864/900 [05:29<00:24,  1.44it/s]\r 96%|█████████▌| 865/900 [05:30<00:24,  1.45it/s]\r 96%|█████████▌| 866/900 [05:30<00:23,  1.45it/s]\r 96%|█████████▋| 867/900 [05:31<00:22,  1.45it/s]\r 96%|█████████▋| 868/900 [05:32<00:22,  1.45it/s]\r 97%|█████████▋| 869/900 [05:33<00:21,  1.41it/s]\r 97%|█████████▋| 870/900 [05:33<00:21,  1.42it/s]\r 97%|█████████▋| 871/900 [05:34<00:20,  1.42it/s]\r 97%|█████████▋| 872/900 [05:35<00:19,  1.41it/s]\r 97%|█████████▋| 873/900 [05:35<00:19,  1.42it/s]\r 97%|█████████▋| 874/900 [05:36<00:18,  1.42it/s]\r 97%|█████████▋| 875/900 [05:37<00:17,  1.42it/s]\r 97%|█████████▋| 876/900 [05:38<00:16,  1.41it/s]\r 97%|█████████▋| 877/900 [05:38<00:16,  1.41it/s]\r 98%|█████████▊| 878/900 [05:39<00:15,  1.41it/s]\r 98%|█████████▊| 879/900 [05:40<00:14,  1.41it/s]\r 98%|█████████▊| 880/900 [05:40<00:14,  1.41it/s]\r 98%|█████████▊| 881/900 [05:41<00:13,  1.42it/s]\r 98%|█████████▊| 882/900 [05:42<00:12,  1.41it/s]\r 98%|█████████▊| 883/900 [05:43<00:12,  1.41it/s]\r 98%|█████████▊| 884/900 [05:43<00:11,  1.41it/s]\r 98%|█████████▊| 885/900 [05:44<00:10,  1.41it/s]\r 98%|█████████▊| 886/900 [05:45<00:09,  1.41it/s]\r 99%|█████████▊| 887/900 [05:45<00:09,  1.41it/s]\r 99%|█████████▊| 888/900 [05:46<00:08,  1.41it/s]\r 99%|█████████▉| 889/900 [05:47<00:07,  1.41it/s]\r 99%|█████████▉| 890/900 [05:47<00:07,  1.41it/s]\r 99%|█████████▉| 891/900 [05:48<00:06,  1.41it/s]\r 99%|█████████▉| 892/900 [05:49<00:05,  1.41it/s]\r 99%|█████████▉| 893/900 [05:50<00:04,  1.41it/s]\r 99%|█████████▉| 894/900 [05:50<00:04,  1.40it/s]\r 99%|█████████▉| 895/900 [05:51<00:03,  1.40it/s]\r100%|█████████▉| 896/900 [05:52<00:02,  1.39it/s]\r100%|█████████▉| 897/900 [05:52<00:02,  1.39it/s]\r100%|█████████▉| 898/900 [05:53<00:01,  1.38it/s]\r100%|█████████▉| 899/900 [05:54<00:00,  1.38it/s]\r100%|██████████| 900/900 [05:55<00:00,  1.39it/s]\r100%|██████████| 900/900 [05:55<00:00,  2.53it/s]\n```\n:::\n:::\n\n\n::: {#3af5426b .cell execution_count=22}\n``` {.python .cell-code}\nplt.figure(figsize=(10, 4))\nplt.plot(M_values, var_bs_values, marker='o', color='red')\nplt.xlabel('Nombre de simulations')\nplt.ylabel('VaR bootstrap')\nplt.title(\"Variation de la VaR bootstrap en fonction du nombre de simulations\")\n```\n\n::: {.cell-output .cell-output-display execution_count=21}\n```\nText(0.5, 1.0, 'Variation de la VaR bootstrap en fonction du nombre de simulations')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](var_classiques_files/figure-ipynb/cell-22-output-2.png){}\n:::\n:::\n\n\nPour la taille de l'echantillon bootstrap, nous allons prendre M=8000 étant donné que la courbe semble se stabiliser à partir de cette valeur. Avec ce choix, la VaR estimé est de 4.11%% avec un intervalle de confiance à 5% de [4.05%, 4.09%]. De plus, en ce qui concerne la VaR historique, nous constatons que l'estimation est contenu dans l'intervalle de confiance.\n\n::: {#1dfb7e1c .cell execution_count=23}\n``` {.python .cell-code}\nM=8000\nvar_bs_train, lower_ic,upper_ic = bootstrap_var(data_train, alpha=alpha, M=M)\nprint(f\"La VaR bootstrap pour h=1j et alpha=0.99 est : {var_bs_train:.4%}\")\nprint(f\"L'intervalle de confiance est : [{lower_ic:.4%}, {upper_ic:.4%}]\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLa VaR bootstrap pour h=1j et alpha=0.99 est : 4.1065%\nL'intervalle de confiance est : [4.0536%, 4.0939%]\n```\n:::\n:::\n\n\n### II.2.3. Backtest\n\nPour l'exercice de backtest, il s'agit de :\n1. Déterminer si la proportion $p$ de violations de la VaR est cohérente avec le niveau de confiance, i.e. égale à $1-\\alpha$. Cela permet de vérifier si la mesure de risque est bien calibrée. Pour cela, nous pouvons avoir recours à un test de proportion ou un test de ratio de vraisemblance.\n\n    **Unconditional coverage test** :\n    Soit I la variable indicatrice de violation de la VaR, i.e. $I=1$ si la perte est supérieure à la VaR, et $I=0$ sinon. La proportion de violations de la VaR est donnée par :\n\n    $$p = \\frac{1}{n} \\sum_{i=1}^{n} I_i = \\frac{Z}{n}$$\n\n    Sous H0, i.e. p=1-$\\alpha$, Z $\\sim$ Binomiale(n, 1-$\\alpha$). En supposant que n est suffisamment grand, on peut approximer Z par une loi normale. Ainsi donc :\n    $$\\frac{Z - n (1-\\alpha)}{\\sqrt{\\alpha (1-\\alpha) n}} \\sim \\mathcal{N}(n(1-\\alpha), n\\alpha(1-\\alpha))$$\n\n    Sous cette hypothèse asymptotique, on peut calculer la statistique du ratio de vraisemblance suivant :\n    $$LR = -2 ln \\left( \\frac{L(H1)}{L(H0)} \\right) =-2 ln \\left( 1- (1-\\alpha))^{n-e}(1-\\alpha)^e \\right) + 2 ln \\left( (1-\\frac{e}{n})^{n-e} (\\frac{e}{n})^e  \\right)  \\sim \\chi^2(1)$$\n\n    où e est le nombre de violations de la VaR. On rejette H0 si LR > $\\chi^2(1-\\alpha)$.\n\n    **Test de proportion** :\n    $$\n    H_0 : p = p_0 = 1-\\alpha \\\\ H_1 : p > 1-\\alpha\n    $$\n    On peut également utiliser un test binomial pour tester si la proportion de violations de la VaR est égale à $1-\\alpha$. On peut calculer la statistique du test suivant :\n    $$Z = \\frac{p - p_0}{\\sqrt{p_0 (1-p_0) / n}} \\sim \\mathcal{N}(0,1)$$\n\n    On rejette H0 si Z > $p_0+ \\phi^{-1}(1-\\alpha) \\sqrt{p_0 (1-p_0)/n}$, où $\\phi$ est la quantile de la loi normale standard.\n\n2. Déterminer si, lorsqu'il y en a, les violations de VaR à deux différents jours sont indépendantes. Cela permet si la mesure de risque est capable de réagir aux chocs de marché affectant la volatilité des rendements. Pour cela, nous utilisons un conditional coverage test.\n\n    **Conditional coverage test** :\n    y revenir\n\n::: {#c1ca8ce4 .cell execution_count=24}\n``` {.python .cell-code}\nimport scipy.stats as stats\n\n# Objectif : implémenter une fonction calculant le nombre d'exception sur l'échantillon test\ndef exceptions(data, var):\n    \"\"\"\n    Calcul du nombre d'exception\n    data : les rendements logarithmiques\n    var : la VaR\n    \"\"\"\n    return np.sum(data < -var)\n\n\n# Objectif : test de proportion binomiale\n\ndef binomial_test(n, p, p0 = 0.01, alpha=0.05):\n    \"\"\"\n    Test de proportion binomiale\n    H0 : p = p0\n    H1 : p > p0\n    n : le nombre d'essais\n    p : la proportion\n    alpha : le niveau de confiance\n    \"\"\"\n\n    z = (p - p0) / np.sqrt(p0 * (1 - p0) / n)\n    #reject_zone = p0 + stats.norm.ppf(1 - alpha) * np.sqrt(p0 * (1 - p0) / n)\n    p_value = 1 - stats.norm.cdf(z)\n    reject = p_value < alpha\n\n    # Calcul des IC\n    lower = p - stats.norm.ppf(1 - alpha) * np.sqrt(p * (1 - p) / n)\n    upper = p + stats.norm.ppf(1 - alpha) * np.sqrt(p * (1 - p) / n)\n\n    return p_value, reject, lower, upper\n\n# Unconditionnal coverage test ==> to do.\n```\n:::\n\n\n::: {#8d84f154 .cell execution_count=25}\n``` {.python .cell-code}\n# Backtest de la VaR historique\n\nexceptions_test = exceptions(data_test, var_hist_train)\nprint(f\"Le nombre d'exceptions sur l'échantillon de test est : {exceptions_test}\")\n\nprint(\"=\"*80)\nn = len(data_test)\np = exceptions_test / n\np_value, reject, lower,upper = binomial_test(n, p)\nprint(f\"H0 : le nombre d'exceptions est inférieur ou égale à {1-alpha:.2%}\")\nprint(f\"IC : [{lower:.2%},{upper:.2%}]\")\nprint(f\"La p-value du test de proportion binomiale est : {p_value:.4f}\")\nprint(f\"Rejet de l'hypothèse nulle : {reject}\")\nprint(\"=\"*80)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLe nombre d'exceptions sur l'échantillon de test est : 0\n================================================================================\nH0 : le nombre d'exceptions est inférieur ou égale à 1.00%\nIC : [0.00%,0.00%]\nLa p-value du test de proportion binomiale est : 0.9925\nRejet de l'hypothèse nulle : False\n================================================================================\n```\n:::\n:::\n\n\n## II.3. VaR paramétrique\n\n### II.3.1. Validation ex-ante\n\nVisuellement, les données ne semblent pas suivre une loi normale. En effet, les quantiles théoriques d'une loi normale ne collent pas avec les quantiles empiriques des rendements. Cela peut être dû à la présence de queues épaisses observables sur l'estimation de la densité des rendements sur l'échantillon d'apprentissage, de pics, de clusters de volatilité que nous avons observées plus haut. De plus, le skewness est négatif ce qui indique une asymétrie négative des rendements. Enfin, le kurtosis est supérieur à 3, ce qui indique une distribution leptokurtique des rendements.\n\nNous allons tout de même implémenter une VaR gaussienne pour voir comment elle se comporte dans le backtest.\n\n::: {#2707bba5 .cell execution_count=26}\n``` {.python .cell-code}\n# Test visuel d'adéquation de la loi normale\n\n# Créer un Q-Q plot\nfig, ax = plt.subplots(figsize=(10, 6))\nstats.probplot(data_train, dist=\"norm\", plot=ax)\n\n# Personnalisation du graphique\nax.set_title(\"Q-Q Plot (Normal Distribution)\")\nax.set_xlabel(\"Theoretical Quantiles\")\nax.set_ylabel(\"Sample Quantiles\")\n\n# Afficher le graphique\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](var_classiques_files/figure-ipynb/cell-26-output-1.png){}\n:::\n:::\n\n\n::: {#4094d38f .cell execution_count=27}\n``` {.python .cell-code}\n# Densité de l'echantillon train et l'échantillon de test\n\nplt.figure(figsize=(10, 4))\ndata_train.plot(kind='kde', label='Train', color='red')\nplt.legend(loc='upper left')\nplt.title(\"Densité de l'échantillon d'entrainement\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](var_classiques_files/figure-ipynb/cell-27-output-1.png){}\n:::\n:::\n\n\n::: {#750debb2 .cell execution_count=28}\n``` {.python .cell-code}\n# Skewness et kurtosis\nprint(\"=\"*80)\nprint(\"Skewness de l'échantillon d'entrainement : \", data_train.skew())\nprint(\"Kurtosis de l'échantillon d'entrainement : \", data_train.kurt())\nprint(\"=\"*80)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n================================================================================\nSkewness de l'échantillon d'entrainement :  -0.2981820421484688\nKurtosis de l'échantillon d'entrainement :  7.353960005618779\n================================================================================\n```\n:::\n:::\n\n\n::: {#9e9c4c67 .cell execution_count=29}\n``` {.python .cell-code}\nfrom scipy.stats import kstest\n\n# Test de Kolmogorov-Smirnov\nks_stat, ks_p_value = kstest(data_train, 'norm')\nprint(\"=\"*80)\nprint(\"H0 : Les données suivent une loi normale\")\nprint(f\"Statistique de test : {ks_stat:.4f}\")\nprint(f\"P-value : {ks_p_value:.4f}\")\nprint(\"=\"*80)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n================================================================================\nH0 : Les données suivent une loi normale\nStatistique de test : 0.4775\nP-value : 0.0000\n================================================================================\n```\n:::\n:::\n\n\n### II.3.2. Implémentation de la VaR\n\n#### a. Méthode scaling\n\n::: {#26b070eb .cell execution_count=30}\n``` {.python .cell-code}\n# Objectif : écrire une fonction qui calcule la VaR gaussienne\n\ndef gaussian_var(data, alpha):\n    \"\"\"\n    Calcul de la VaR gaussienne\n    data : les rendements logarithmiques\n    alpha : le niveau de confiance\n    \"\"\"\n    from scipy.stats import norm\n\n    mu = np.mean(data)\n    sigma = np.std(data)\n    return -(mu + sigma * norm.ppf(1 - alpha))\n```\n:::\n\n\n::: {#f9534d01 .cell execution_count=31}\n``` {.python .cell-code}\nvar_gauss_train = gaussian_var(data_train, alpha=alpha)\nprint(f\"La VaR gaussienne pour h=1j et alpha={alpha} est : {var_gauss_train:.4%}\")\nprint(f\"La VaR historique pour h=10j et alpha={alpha} est : {np.sqrt(10)*var_gauss_train:.4%}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLa VaR gaussienne pour h=1j et alpha=0.99 est : 3.2302%\nLa VaR historique pour h=10j et alpha=0.99 est : 10.2148%\n```\n:::\n:::\n\n\n#### b. Méthode de diffusion d’un actif\n\nPour calculer la **VaR gaussienne à 10 jours** par **méthode de diffusion d’un actif**, nous allons suivre les étapes suivantes :\n\nL'évolution du prix d'un actif suit un processus de type mouvement brownien géométrique :\n$$\ndS_t = \\mu S_t dt + \\sigma S_t dW_t <=> S_t = S_{t-1} e^{(\\mu - \\frac{1}{2} \\sigma^2) + \\sigma W_t}\n$$\noù $ S_t$ est le prix de l'actif à l'instant$ t$, $ \\mu$ est le rendement moyen estimé (drift), $ \\sigma$ est la volatilité du rendement, $ dW_t$ est un mouvement brownien standard.\n\n\nOn peut de ce fait calculer plusieurs trajectoires de rendements de $S_0$ et $S_{10}$, puis calculer la VaR à partir de la série des rendements $ r_{10j} = \\ln(S_{10} / S_{0}) $ obtenus avec ces trajectoires.\n\nEn utilisant la méthode de scaling et la méthode de diffusion, nous obtenons sensiblement la même VaR.\n\n::: {#e863a573 .cell execution_count=32}\n``` {.python .cell-code}\nimport numpy as np\n\nmu = np.mean(data_train)\nsigma = np.std(data_train)\n\nreturn_sim = []\nT = 10\nM = 1000\nS0 = train['Close'].iloc[-1]\n\nfor i in range(M):\n    S = np.zeros(T+1)\n    S[0] = S0\n    for t in range(1,T+1):\n        Wt = np.random.normal()\n        S[t] = S[t-1] * np.exp((mu - 0.5 * sigma**2) + sigma * Wt)\n\n    return_sim.append(np.log(S[T]/S0))\n\nvar_gauss_diffusion = gaussian_var(return_sim, alpha=alpha)\nprint(f\"La VaR gaussienne pour h=10j et alpha={alpha} est : {var_gauss_diffusion:.4%}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLa VaR gaussienne pour h=10j et alpha=0.99 est : 10.0053%\n```\n:::\n:::\n\n\n#### c. Méthode EWMA\n\nLa VaR EWMA est une méthode qui permet de calculer la VaR en surpondérant les rendements les plus récents. Cela permet de donner plus de poids aux rendements les plus récents, et donc de mieux capturer les changements de volatilité. La VaR EWMA est donnée par la formule suivante :\n\n$$\nVaR_{t+1} = \\mu + \\sigma \\times z_{\\alpha}\n$$\n\n::: {#614fde8d .cell execution_count=33}\n``` {.python .cell-code}\n# VaR la méthode EWMA (Exponential Weighting Moving Average)\n\ndef gaussian_var_ewma(data, alpha, lambda_=0.94):\n    \"\"\"\n    Calcul de la VaR gaussienne EWMA\n    data : les rendements logarithmiques\n    alpha : le niveau de confiance\n    lambda_ : le paramètre de lissage\n    \"\"\"\n\n    weights = np.array([(1-lambda_)*(lambda_**i) for i in range(len(data))])\n    weights = weights / np.sum(weights)\n\n    mu = np.sum(data[::-1] * weights)\n    sigma = np.sqrt(np.sum(weights * (data[::-1] - mu)**2))\n\n    return -(mu + sigma * stats.norm.ppf(1 - alpha)), mu, sigma\n\n# y revenir\n```\n:::\n\n\n::: {#dfe26cc1 .cell execution_count=34}\n``` {.python .cell-code}\nlambdas = [0.9, 0.95, 0.99]\nalpha = 0.99\nimport scipy.stats as stats\nfor l in lambdas:\n    print(\"=\"*80)\n    print(\"Lambda : \", l)\n    print(\"-\"*15)\n    var_gauss_emwa, mu, sigma = gaussian_var_ewma(data_train, alpha=alpha, lambda_=l)\n    print(f\"La VaR gaussienne EWMA pour h=1j et alpha={alpha} est : {var_gauss_emwa:.4%}\")\n    print(f\"La moyenne est : {mu:.4%}\")\n    print(f\"L'écart-type est : {sigma:.4%}\")\n\n    n_exceptions = exceptions(data_test, var_gauss_emwa)\n    print(f\"Le nombre d'exceptions sur l'échantillon de test est : {n_exceptions}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n================================================================================\nLambda :  0.9\n---------------\nLa VaR gaussienne EWMA pour h=1j et alpha=0.99 est : 2.3751%\nLa moyenne est : 0.1898%\nL'écart-type est : 1.1025%\nLe nombre d'exceptions sur l'échantillon de test est : 5\n================================================================================\nLambda :  0.95\n---------------\nLa VaR gaussienne EWMA pour h=1j et alpha=0.99 est : 2.8969%\nLa moyenne est : 0.0735%\nL'écart-type est : 1.2768%\nLe nombre d'exceptions sur l'échantillon de test est : 4\n================================================================================\nLambda :  0.99\n---------------\nLa VaR gaussienne EWMA pour h=1j et alpha=0.99 est : 3.3511%\nLa moyenne est : -0.0321%\nL'écart-type est : 1.4267%\nLe nombre d'exceptions sur l'échantillon de test est : 1\n```\n:::\n:::\n\n\nAvec la méthode EWMA, nous observons une  que la VaR diminue plus $\\lambda$ augmente. Cela est dû au fait que plus $\\lambda$ est grand, plus les rendements les plus récents sont surpondérés, et donc la volatilité est plus faible, en raison de la fin de la période d'apprentissage.\n\n## II.4. VaR skew-student\n\n### II.4.1. Validation ex-ante\n\n::: {#30b6d6b2 .cell execution_count=35}\n``` {.python .cell-code}\n# Ecrire une fonction permettant d’estimer les paramètres d’une loi de Skew Student par maximum de vraisemblance.\n\nfrom scipy.optimize import minimize\nfrom scipy.stats import t\n\n\ndef skew_student_pdf(x, mu, sigma, gamma, nu ):\n    \"\"\"\n    Compute the Skew Student-t probability density function (PDF).\n    \"\"\"\n\n\n    t_x = ((x - mu) * gamma / sigma) * np.sqrt((nu + 1) / (nu + ((x - mu) / sigma) ** 2))\n    # PDF of the standard Student-t distribution\n    pdf_t = t.pdf(x , df=nu,  loc=mu, scale=sigma)\n    # CDF of the transformed Student-t distribution\n    cdf_t = t.cdf(t_x, df=nu + 1,loc=0, scale=1)\n\n    # Skew Student density function\n    density = 2 * pdf_t * cdf_t\n\n    return density\n\n\ndef skew_student_log_likelihood(params, data):\n    \"\"\"\n    Calcul de la log-vraisemblance de la loi de Skew Student\n    params [mu, sigma, gamma, nu]: les paramètres de la loi\n    data : les rendements logarithmiques\n    \"\"\"\n    mu, sigma, gamma, nu = params\n    density = skew_student_pdf(data , mu, sigma, gamma, nu)\n    # log-vraisemblance\n    loglik = np.sum(np.log(density))\n\n    return - loglik\n\n# Optimisation des paramètres avec contraintes de positivité sur sigma et nu\ndef skew_student_fit(data):\n    \"\"\"\n    Estimation des paramètres de la loi de Skew Student\n    \"\"\"\n    # initial guess\n    x0 = np.array([np.mean(data), np.std(data), 1, 4])\n\n    # contraintes\n    bounds = [(None, None), (0, None), (None, None), (None, None)]\n\n    # optimisation\n    res = minimize(skew_student_log_likelihood, x0, args=(data), bounds=bounds)\n\n    return res.x\n\nparams = skew_student_fit(data_train)\nprint(\"=\"*80)\nprint(\"Les paramètres estimés de la loi de Skew Student sont : \")\nprint(\"-\"*15)\nprint(\"Mu : \", params[0])\nprint(\"Sigma : \", params[1])\nprint(\"Gamma : \", params[2])\nprint(\"Nu : \", params[3])\nprint(\"=\"*80)\n\n\nparams_sstd = {\n    \"mu\" : params[0],\n    \"sigma\" : params[1],\n    \"gamma\" : params[2],\n    \"nu\" : params[3]\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n================================================================================\nLes paramètres estimés de la loi de Skew Student sont : \n---------------\nMu :  0.0023251952411471218\nSigma :  0.008823931435233275\nGamma :  -0.23188477391476636\nNu :  2.9618199934116825\n================================================================================\n```\n:::\n:::\n\n\n::: {#964e74ad .cell execution_count=36}\n``` {.python .cell-code}\n# Superposition de la densité théorique et des données\n\nx_values = np.linspace(min(data_train), max(data_train), 1000)\n\ntheoretical_density = skew_student_pdf(x_values, **params_sstd)\nplt.figure(figsize = (10,4))\nplt.hist(data_train, bins=30, density=True, alpha=0.5, label='Données empiriques')\nplt.plot(x_values, theoretical_density, label='Densité Skew Student', color='red')\n# Densité normale\nplt.plot(x_values, stats.norm.pdf(x_values, np.mean(data_train), np.std(data_train)), label='Densité normale', color='blue')\nplt.xlabel('Rendements logarithmiques')\nplt.ylabel('Densité')\nplt.title(\"Comparaison entre les données et la densité théorique d'une loi de Skew Student\")\nplt.legend()\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](var_classiques_files/figure-ipynb/cell-36-output-1.png){}\n:::\n:::\n\n\nLe graphique ci-dessus est satisfaisant. La densité théorique de la skew-student semble bien s'ajuster aux données. La loi skew-student de paramètres ($\\mu = 0.002, \\sigma = 0.009, \\gamma = -0.23, \\nu = 2.96$). Le $\\mu$ est le rendement moyen, $\\sigma$ est l'écart-type, $\\gamma$ est le coefficient d'asymétrie et $\\nu$ est le degré de liberté. Le skewness est négatif, ce qui indique une asymétrie négative des rendements, comme ce qu'on a observé plus haut.\n\nNous allons appuyer cette validation en utilisant le QQ-plot. La fonction quantile d'une loi skew-student n'est pas analytique. Pour ce faire, nous allons construire la fonction de repartition de la skew-student ainsi que la fonction quantile qui est l’inverse de cette fonction de repartition. Nous allons ensuite comparer les quantiles théoriques de la skew-student avec les quantiles empiriques des rendements.\n\nEn observant le QQ-plot, on constate que les quantiles théoriques de la skew-student collent bien avec les quantiles empiriques des rendements. Cela confirme que la skew-student est une bonne approximation de la distribution des rendements.\nPour une validation plus rigoureuse, on peut utiliser un test de Kolmogorov-Smirnov pour tester si les rendements suivent une loi skew-student.\n\n::: {#b953d38c .cell execution_count=37}\n``` {.python .cell-code}\n## Intégration de la fonction de densité\nfrom scipy import integrate\nfrom scipy.optimize import minimize_scalar\n\ndef integrale_SkewStudent(x,params):\n    borne_inf = -np.inf\n    resultat_integration, erreur = integrate.quad(lambda x: skew_student_pdf(x, **params), borne_inf, x)\n    return resultat_integration\n\ndef fonc_minimize(x, alpha,params):\n    value = integrale_SkewStudent(x,params)-alpha\n    return abs(value)\n\ndef skew_student_quantile(alpha,mu, sigma, gamma, nu ):\n    params = {\n    \"mu\" : mu ,\n    \"sigma\" : sigma,\n    \"gamma\" : gamma,\n    \"nu\" : nu\n    }\n\n    if alpha <0 or alpha >1:\n        raise Exception(\"Veuillez entrer un niveau alpha entre 0 et 1\")\n    else:\n        resultat_minimisation = minimize_scalar(lambda x: fonc_minimize(x, alpha,params))\n        return resultat_minimisation.x\n```\n:::\n\n\n::: {#3d2da27b .cell execution_count=38}\n``` {.python .cell-code}\nniveaux_quantiles = np.arange(0.001, 1, 0.001)\nquantiles_empiriques = np.quantile(data_train, niveaux_quantiles)\nquantiles_theoriques = [skew_student_quantile(alpha,**params_sstd) for alpha in tqdm(niveaux_quantiles)]\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\r  0%|          | 0/999 [00:00<?, ?it/s]\r  0%|          | 1/999 [00:00<05:32,  3.00it/s]\r  0%|          | 2/999 [00:00<05:25,  3.07it/s]\r  0%|          | 3/999 [00:00<05:28,  3.03it/s]\r  0%|          | 4/999 [00:01<06:16,  2.64it/s]\r  1%|          | 5/999 [00:01<06:33,  2.53it/s]\r  1%|          | 6/999 [00:02<07:40,  2.16it/s]\r  1%|          | 7/999 [00:02<07:42,  2.15it/s]\r  1%|          | 8/999 [00:03<07:37,  2.17it/s]\r  1%|          | 9/999 [00:03<07:40,  2.15it/s]\r  1%|          | 10/999 [00:04<07:36,  2.17it/s]\r  1%|          | 11/999 [00:04<07:11,  2.29it/s]\r  1%|          | 12/999 [00:05<07:08,  2.31it/s]\r  1%|▏         | 13/999 [00:05<07:12,  2.28it/s]\r  1%|▏         | 14/999 [00:06<07:19,  2.24it/s]\r  2%|▏         | 15/999 [00:06<07:06,  2.31it/s]\r  2%|▏         | 16/999 [00:06<07:08,  2.29it/s]\r  2%|▏         | 17/999 [00:07<07:03,  2.32it/s]\r  2%|▏         | 18/999 [00:07<07:01,  2.33it/s]\r  2%|▏         | 19/999 [00:08<07:13,  2.26it/s]\r  2%|▏         | 20/999 [00:08<06:58,  2.34it/s]\r  2%|▏         | 21/999 [00:09<06:56,  2.35it/s]\r  2%|▏         | 22/999 [00:09<07:06,  2.29it/s]\r  2%|▏         | 23/999 [00:09<07:02,  2.31it/s]\r  2%|▏         | 24/999 [00:10<06:54,  2.35it/s]\r  3%|▎         | 25/999 [00:10<06:59,  2.32it/s]\r  3%|▎         | 26/999 [00:11<07:20,  2.21it/s]\r  3%|▎         | 27/999 [00:11<07:09,  2.27it/s]\r  3%|▎         | 28/999 [00:12<07:01,  2.31it/s]\r  3%|▎         | 29/999 [00:12<07:02,  2.30it/s]\r  3%|▎         | 30/999 [00:12<06:57,  2.32it/s]\r  3%|▎         | 31/999 [00:13<06:56,  2.32it/s]\r  3%|▎         | 32/999 [00:13<07:05,  2.28it/s]\r  3%|▎         | 33/999 [00:14<07:19,  2.20it/s]\r  3%|▎         | 34/999 [00:14<07:31,  2.14it/s]\r  4%|▎         | 35/999 [00:15<07:30,  2.14it/s]\r  4%|▎         | 36/999 [00:15<07:37,  2.11it/s]\r  4%|▎         | 37/999 [00:16<07:40,  2.09it/s]\r  4%|▍         | 38/999 [00:16<07:57,  2.01it/s]\r  4%|▍         | 39/999 [00:17<08:06,  1.97it/s]\r  4%|▍         | 40/999 [00:17<07:58,  2.01it/s]\r  4%|▍         | 41/999 [00:18<07:48,  2.05it/s]\r  4%|▍         | 42/999 [00:18<07:49,  2.04it/s]\r  4%|▍         | 43/999 [00:19<07:45,  2.05it/s]\r  4%|▍         | 44/999 [00:19<07:37,  2.09it/s]\r  5%|▍         | 45/999 [00:20<07:46,  2.04it/s]\r  5%|▍         | 46/999 [00:20<07:46,  2.04it/s]\r  5%|▍         | 47/999 [00:21<07:40,  2.07it/s]\r  5%|▍         | 48/999 [00:21<07:47,  2.03it/s]\r  5%|▍         | 49/999 [00:22<07:57,  1.99it/s]\r  5%|▌         | 50/999 [00:22<07:41,  2.05it/s]\r  5%|▌         | 51/999 [00:23<07:38,  2.07it/s]\r  5%|▌         | 52/999 [00:23<07:55,  1.99it/s]\r  5%|▌         | 53/999 [00:24<07:58,  1.98it/s]\r  5%|▌         | 54/999 [00:24<08:37,  1.83it/s]\r  6%|▌         | 55/999 [00:25<08:24,  1.87it/s]\r  6%|▌         | 56/999 [00:25<08:10,  1.92it/s]\r  6%|▌         | 57/999 [00:26<08:14,  1.90it/s]\r  6%|▌         | 58/999 [00:26<08:14,  1.90it/s]\r  6%|▌         | 59/999 [00:27<08:11,  1.91it/s]\r  6%|▌         | 60/999 [00:27<08:18,  1.88it/s]\r  6%|▌         | 61/999 [00:28<08:40,  1.80it/s]\r  6%|▌         | 62/999 [00:29<08:29,  1.84it/s]\r  6%|▋         | 63/999 [00:29<08:27,  1.84it/s]\r  6%|▋         | 64/999 [00:30<08:23,  1.86it/s]\r  7%|▋         | 65/999 [00:30<08:05,  1.92it/s]\r  7%|▋         | 66/999 [00:31<07:48,  1.99it/s]\r  7%|▋         | 67/999 [00:31<07:58,  1.95it/s]\r  7%|▋         | 68/999 [00:32<07:43,  2.01it/s]\r  7%|▋         | 69/999 [00:32<07:48,  1.99it/s]\r  7%|▋         | 70/999 [00:33<07:39,  2.02it/s]\r  7%|▋         | 71/999 [00:33<07:44,  2.00it/s]\r  7%|▋         | 72/999 [00:34<07:46,  1.99it/s]\r  7%|▋         | 73/999 [00:34<07:49,  1.97it/s]\r  7%|▋         | 74/999 [00:35<07:44,  1.99it/s]\r  8%|▊         | 75/999 [00:35<07:52,  1.96it/s]\r  8%|▊         | 76/999 [00:36<07:53,  1.95it/s]\r  8%|▊         | 77/999 [00:36<07:43,  1.99it/s]\r  8%|▊         | 78/999 [00:37<08:01,  1.91it/s]\r  8%|▊         | 79/999 [00:37<08:10,  1.88it/s]\r  8%|▊         | 80/999 [00:38<08:07,  1.89it/s]\r  8%|▊         | 81/999 [00:38<07:54,  1.94it/s]\r  8%|▊         | 82/999 [00:39<07:54,  1.93it/s]\r  8%|▊         | 83/999 [00:39<07:45,  1.97it/s]\r  8%|▊         | 84/999 [00:40<07:47,  1.96it/s]\r  9%|▊         | 85/999 [00:40<08:04,  1.88it/s]\r  9%|▊         | 86/999 [00:41<07:52,  1.93it/s]\r  9%|▊         | 87/999 [00:41<08:07,  1.87it/s]\r  9%|▉         | 88/999 [00:42<08:26,  1.80it/s]\r  9%|▉         | 89/999 [00:43<08:07,  1.87it/s]\r  9%|▉         | 90/999 [00:43<07:40,  1.98it/s]\r  9%|▉         | 91/999 [00:43<07:36,  1.99it/s]\r  9%|▉         | 92/999 [00:44<07:24,  2.04it/s]\r  9%|▉         | 93/999 [00:44<06:52,  2.19it/s]\r  9%|▉         | 94/999 [00:45<07:03,  2.14it/s]\r 10%|▉         | 95/999 [00:45<07:11,  2.09it/s]\r 10%|▉         | 96/999 [00:46<07:13,  2.08it/s]\r 10%|▉         | 97/999 [00:46<07:18,  2.06it/s]\r 10%|▉         | 98/999 [00:47<07:22,  2.04it/s]\r 10%|▉         | 99/999 [00:47<07:22,  2.03it/s]\r 10%|█         | 100/999 [00:48<07:28,  2.00it/s]\r 10%|█         | 101/999 [00:48<07:21,  2.04it/s]\r 10%|█         | 102/999 [00:49<07:25,  2.01it/s]\r 10%|█         | 103/999 [00:49<07:20,  2.03it/s]\r 10%|█         | 104/999 [00:50<07:19,  2.04it/s]\r 11%|█         | 105/999 [00:50<07:12,  2.07it/s]\r 11%|█         | 106/999 [00:51<07:20,  2.03it/s]\r 11%|█         | 107/999 [00:51<07:20,  2.02it/s]\r 11%|█         | 108/999 [00:52<07:35,  1.96it/s]\r 11%|█         | 109/999 [00:52<07:34,  1.96it/s]\r 11%|█         | 110/999 [00:53<07:30,  1.97it/s]\r 11%|█         | 111/999 [00:53<07:31,  1.97it/s]\r 11%|█         | 112/999 [00:54<07:39,  1.93it/s]\r 11%|█▏        | 113/999 [00:54<07:49,  1.89it/s]\r 11%|█▏        | 114/999 [00:55<07:45,  1.90it/s]\r 12%|█▏        | 115/999 [00:55<07:46,  1.90it/s]\r 12%|█▏        | 116/999 [00:56<07:37,  1.93it/s]\r 12%|█▏        | 117/999 [00:56<07:35,  1.93it/s]\r 12%|█▏        | 118/999 [00:57<07:36,  1.93it/s]\r 12%|█▏        | 119/999 [00:58<07:42,  1.90it/s]\r 12%|█▏        | 120/999 [00:58<07:32,  1.94it/s]\r 12%|█▏        | 121/999 [00:59<07:37,  1.92it/s]\r 12%|█▏        | 122/999 [00:59<07:51,  1.86it/s]\r 12%|█▏        | 123/999 [01:00<07:44,  1.88it/s]\r 12%|█▏        | 124/999 [01:00<07:53,  1.85it/s]\r 13%|█▎        | 125/999 [01:01<07:50,  1.86it/s]\r 13%|█▎        | 126/999 [01:01<07:56,  1.83it/s]\r 13%|█▎        | 127/999 [01:02<07:52,  1.84it/s]\r 13%|█▎        | 128/999 [01:02<07:41,  1.89it/s]\r 13%|█▎        | 129/999 [01:03<07:38,  1.90it/s]\r 13%|█▎        | 130/999 [01:03<07:40,  1.89it/s]\r 13%|█▎        | 131/999 [01:04<07:37,  1.90it/s]\r 13%|█▎        | 132/999 [01:04<07:28,  1.93it/s]\r 13%|█▎        | 133/999 [01:05<07:23,  1.95it/s]\r 13%|█▎        | 134/999 [01:05<07:14,  1.99it/s]\r 14%|█▎        | 135/999 [01:06<07:16,  1.98it/s]\r 14%|█▎        | 136/999 [01:06<07:21,  1.96it/s]\r 14%|█▎        | 137/999 [01:07<07:20,  1.96it/s]\r 14%|█▍        | 138/999 [01:07<07:15,  1.97it/s]\r 14%|█▍        | 139/999 [01:08<07:26,  1.92it/s]\r 14%|█▍        | 140/999 [01:09<07:30,  1.91it/s]\r 14%|█▍        | 141/999 [01:09<07:19,  1.95it/s]\r 14%|█▍        | 142/999 [01:10<07:13,  1.98it/s]\r 14%|█▍        | 143/999 [01:10<07:05,  2.01it/s]\r 14%|█▍        | 144/999 [01:10<07:01,  2.03it/s]\r 15%|█▍        | 145/999 [01:11<06:56,  2.05it/s]\r 15%|█▍        | 146/999 [01:11<06:53,  2.06it/s]\r 15%|█▍        | 147/999 [01:12<07:07,  1.99it/s]\r 15%|█▍        | 148/999 [01:13<07:39,  1.85it/s]\r 15%|█▍        | 149/999 [01:13<07:46,  1.82it/s]\r 15%|█▌        | 150/999 [01:14<07:45,  1.82it/s]\r 15%|█▌        | 151/999 [01:14<07:47,  1.81it/s]\r 15%|█▌        | 152/999 [01:15<07:32,  1.87it/s]\r 15%|█▌        | 153/999 [01:15<07:38,  1.85it/s]\r 15%|█▌        | 154/999 [01:16<07:41,  1.83it/s]\r 16%|█▌        | 155/999 [01:16<07:42,  1.82it/s]\r 16%|█▌        | 156/999 [01:17<07:50,  1.79it/s]\r 16%|█▌        | 157/999 [01:18<07:50,  1.79it/s]\r 16%|█▌        | 158/999 [01:18<07:38,  1.83it/s]\r 16%|█▌        | 159/999 [01:19<07:46,  1.80it/s]\r 16%|█▌        | 160/999 [01:19<07:53,  1.77it/s]\r 16%|█▌        | 161/999 [01:20<07:57,  1.76it/s]\r 16%|█▌        | 162/999 [01:20<08:03,  1.73it/s]\r 16%|█▋        | 163/999 [01:21<08:08,  1.71it/s]\r 16%|█▋        | 164/999 [01:22<08:26,  1.65it/s]\r 17%|█▋        | 165/999 [01:22<08:18,  1.67it/s]\r 17%|█▋        | 166/999 [01:23<08:13,  1.69it/s]\r 17%|█▋        | 167/999 [01:23<08:09,  1.70it/s]\r 17%|█▋        | 168/999 [01:24<08:05,  1.71it/s]\r 17%|█▋        | 169/999 [01:25<07:55,  1.75it/s]\r 17%|█▋        | 170/999 [01:25<07:49,  1.77it/s]\r 17%|█▋        | 171/999 [01:26<07:53,  1.75it/s]\r 17%|█▋        | 172/999 [01:26<08:09,  1.69it/s]\r 17%|█▋        | 173/999 [01:27<08:04,  1.70it/s]\r 17%|█▋        | 174/999 [01:27<08:02,  1.71it/s]\r 18%|█▊        | 175/999 [01:28<08:02,  1.71it/s]\r 18%|█▊        | 176/999 [01:29<08:17,  1.65it/s]\r 18%|█▊        | 177/999 [01:29<08:14,  1.66it/s]\r 18%|█▊        | 178/999 [01:30<08:08,  1.68it/s]\r 18%|█▊        | 179/999 [01:30<07:59,  1.71it/s]\r 18%|█▊        | 180/999 [01:31<08:01,  1.70it/s]\r 18%|█▊        | 181/999 [01:32<08:04,  1.69it/s]\r 18%|█▊        | 182/999 [01:32<08:02,  1.69it/s]\r 18%|█▊        | 183/999 [01:33<08:17,  1.64it/s]\r 18%|█▊        | 184/999 [01:33<08:08,  1.67it/s]\r 19%|█▊        | 185/999 [01:34<08:15,  1.64it/s]\r 19%|█▊        | 186/999 [01:35<08:27,  1.60it/s]\r 19%|█▊        | 187/999 [01:35<08:25,  1.61it/s]\r 19%|█▉        | 188/999 [01:36<08:27,  1.60it/s]\r 19%|█▉        | 189/999 [01:37<08:21,  1.62it/s]\r 19%|█▉        | 190/999 [01:37<08:19,  1.62it/s]\r 19%|█▉        | 191/999 [01:38<07:41,  1.75it/s]\r 19%|█▉        | 192/999 [01:38<07:51,  1.71it/s]\r 19%|█▉        | 193/999 [01:39<07:45,  1.73it/s]\r 19%|█▉        | 194/999 [01:39<07:31,  1.78it/s]\r 20%|█▉        | 195/999 [01:40<07:25,  1.80it/s]\r 20%|█▉        | 196/999 [01:40<07:25,  1.80it/s]\r 20%|█▉        | 197/999 [01:41<07:37,  1.75it/s]\r 20%|█▉        | 198/999 [01:42<07:30,  1.78it/s]\r 20%|█▉        | 199/999 [01:42<07:30,  1.78it/s]\r 20%|██        | 200/999 [01:43<07:45,  1.72it/s]\r 20%|██        | 201/999 [01:43<07:39,  1.74it/s]\r 20%|██        | 202/999 [01:44<07:38,  1.74it/s]\r 20%|██        | 203/999 [01:45<07:33,  1.75it/s]\r 20%|██        | 204/999 [01:45<07:14,  1.83it/s]\r 21%|██        | 205/999 [01:46<07:08,  1.85it/s]\r 21%|██        | 206/999 [01:46<07:10,  1.84it/s]\r 21%|██        | 207/999 [01:47<07:18,  1.81it/s]\r 21%|██        | 208/999 [01:47<07:20,  1.80it/s]\r 21%|██        | 209/999 [01:48<07:42,  1.71it/s]\r 21%|██        | 210/999 [01:49<07:56,  1.66it/s]\r 21%|██        | 211/999 [01:49<07:52,  1.67it/s]\r 21%|██        | 212/999 [01:50<07:46,  1.69it/s]\r 21%|██▏       | 213/999 [01:50<07:55,  1.65it/s]\r 21%|██▏       | 214/999 [01:51<07:41,  1.70it/s]\r 22%|██▏       | 215/999 [01:51<07:41,  1.70it/s]\r 22%|██▏       | 216/999 [01:52<07:35,  1.72it/s]\r 22%|██▏       | 217/999 [01:53<07:31,  1.73it/s]\r 22%|██▏       | 218/999 [01:53<07:30,  1.73it/s]\r 22%|██▏       | 219/999 [01:54<07:16,  1.79it/s]\r 22%|██▏       | 220/999 [01:54<07:14,  1.79it/s]\r 22%|██▏       | 221/999 [01:55<07:17,  1.78it/s]\r 22%|██▏       | 222/999 [01:55<07:09,  1.81it/s]\r 22%|██▏       | 223/999 [01:56<07:04,  1.83it/s]\r 22%|██▏       | 224/999 [01:56<07:07,  1.81it/s]\r 23%|██▎       | 225/999 [01:57<07:17,  1.77it/s]\r 23%|██▎       | 226/999 [01:58<07:12,  1.79it/s]\r 23%|██▎       | 227/999 [01:58<07:01,  1.83it/s]\r 23%|██▎       | 228/999 [01:59<07:04,  1.82it/s]\r 23%|██▎       | 229/999 [01:59<06:56,  1.85it/s]\r 23%|██▎       | 230/999 [02:00<07:15,  1.77it/s]\r 23%|██▎       | 231/999 [02:00<07:10,  1.78it/s]\r 23%|██▎       | 232/999 [02:01<07:13,  1.77it/s]\r 23%|██▎       | 233/999 [02:02<07:16,  1.75it/s]\r 23%|██▎       | 234/999 [02:02<07:13,  1.76it/s]\r 24%|██▎       | 235/999 [02:03<07:15,  1.76it/s]\r 24%|██▎       | 236/999 [02:03<07:19,  1.74it/s]\r 24%|██▎       | 237/999 [02:04<07:27,  1.70it/s]\r 24%|██▍       | 238/999 [02:04<07:42,  1.64it/s]\r 24%|██▍       | 239/999 [02:05<07:47,  1.62it/s]\r 24%|██▍       | 240/999 [02:06<08:00,  1.58it/s]\r 24%|██▍       | 241/999 [02:06<07:56,  1.59it/s]\r 24%|██▍       | 242/999 [02:07<08:29,  1.49it/s]\r 24%|██▍       | 243/999 [02:08<08:33,  1.47it/s]\r 24%|██▍       | 244/999 [02:09<08:40,  1.45it/s]\r 25%|██▍       | 245/999 [02:09<08:27,  1.49it/s]\r 25%|██▍       | 246/999 [02:10<08:25,  1.49it/s]\r 25%|██▍       | 247/999 [02:11<08:15,  1.52it/s]\r 25%|██▍       | 248/999 [02:11<08:20,  1.50it/s]\r 25%|██▍       | 249/999 [02:12<08:21,  1.49it/s]\r 25%|██▌       | 250/999 [02:13<08:21,  1.49it/s]\r 25%|██▌       | 251/999 [02:13<08:14,  1.51it/s]\r 25%|██▌       | 252/999 [02:14<08:12,  1.52it/s]\r 25%|██▌       | 253/999 [02:15<08:19,  1.49it/s]\r 25%|██▌       | 254/999 [02:15<08:25,  1.47it/s]\r 26%|██▌       | 255/999 [02:16<08:18,  1.49it/s]\r 26%|██▌       | 256/999 [02:17<08:07,  1.53it/s]\r 26%|██▌       | 257/999 [02:17<07:59,  1.55it/s]\r 26%|██▌       | 258/999 [02:18<07:56,  1.56it/s]\r 26%|██▌       | 259/999 [02:18<07:48,  1.58it/s]\r 26%|██▌       | 260/999 [02:19<07:45,  1.59it/s]\r 26%|██▌       | 261/999 [02:20<07:41,  1.60it/s]\r 26%|██▌       | 262/999 [02:20<07:25,  1.65it/s]\r 26%|██▋       | 263/999 [02:21<07:26,  1.65it/s]\r 26%|██▋       | 264/999 [02:21<07:26,  1.65it/s]\r 27%|██▋       | 265/999 [02:22<07:26,  1.65it/s]\r 27%|██▋       | 266/999 [02:23<07:21,  1.66it/s]\r 27%|██▋       | 267/999 [02:23<07:22,  1.65it/s]\r 27%|██▋       | 268/999 [02:24<07:28,  1.63it/s]\r 27%|██▋       | 269/999 [02:24<07:29,  1.62it/s]\r 27%|██▋       | 270/999 [02:25<07:37,  1.59it/s]\r 27%|██▋       | 271/999 [02:26<07:29,  1.62it/s]\r 27%|██▋       | 272/999 [02:26<07:36,  1.59it/s]\r 27%|██▋       | 273/999 [02:27<07:38,  1.58it/s]\r 27%|██▋       | 274/999 [02:28<07:38,  1.58it/s]\r 28%|██▊       | 275/999 [02:28<07:40,  1.57it/s]\r 28%|██▊       | 276/999 [02:29<07:42,  1.56it/s]\r 28%|██▊       | 277/999 [02:30<07:35,  1.59it/s]\r 28%|██▊       | 278/999 [02:30<07:36,  1.58it/s]\r 28%|██▊       | 279/999 [02:31<07:38,  1.57it/s]\r 28%|██▊       | 280/999 [02:32<07:52,  1.52it/s]\r 28%|██▊       | 281/999 [02:32<07:54,  1.51it/s]\r 28%|██▊       | 282/999 [02:33<08:01,  1.49it/s]\r 28%|██▊       | 283/999 [02:34<08:11,  1.46it/s]\r 28%|██▊       | 284/999 [02:34<08:20,  1.43it/s]\r 29%|██▊       | 285/999 [02:35<08:28,  1.40it/s]\r 29%|██▊       | 286/999 [02:36<08:18,  1.43it/s]\r 29%|██▊       | 287/999 [02:37<08:26,  1.41it/s]\r 29%|██▉       | 288/999 [02:37<08:04,  1.47it/s]\r 29%|██▉       | 289/999 [02:38<08:16,  1.43it/s]\r 29%|██▉       | 290/999 [02:39<08:16,  1.43it/s]\r 29%|██▉       | 291/999 [02:39<08:07,  1.45it/s]\r 29%|██▉       | 292/999 [02:40<08:03,  1.46it/s]\r 29%|██▉       | 293/999 [02:41<08:00,  1.47it/s]\r 29%|██▉       | 294/999 [02:41<07:56,  1.48it/s]\r 30%|██▉       | 295/999 [02:42<07:58,  1.47it/s]\r 30%|██▉       | 296/999 [02:43<08:05,  1.45it/s]\r 30%|██▉       | 297/999 [02:43<08:08,  1.44it/s]\r 30%|██▉       | 298/999 [02:44<08:16,  1.41it/s]\r 30%|██▉       | 299/999 [02:45<08:02,  1.45it/s]\r 30%|███       | 300/999 [02:45<07:58,  1.46it/s]\r 30%|███       | 301/999 [02:46<08:03,  1.44it/s]\r 30%|███       | 302/999 [02:47<07:58,  1.46it/s]\r 30%|███       | 303/999 [02:47<08:00,  1.45it/s]\r 30%|███       | 304/999 [02:48<07:57,  1.46it/s]\r 31%|███       | 305/999 [02:49<07:55,  1.46it/s]\r 31%|███       | 306/999 [02:49<07:45,  1.49it/s]\r 31%|███       | 307/999 [02:50<07:42,  1.50it/s]\r 31%|███       | 308/999 [02:51<07:33,  1.52it/s]\r 31%|███       | 309/999 [02:51<07:35,  1.51it/s]\r 31%|███       | 310/999 [02:52<07:40,  1.50it/s]\r 31%|███       | 311/999 [02:53<07:43,  1.49it/s]\r 31%|███       | 312/999 [02:54<07:50,  1.46it/s]\r 31%|███▏      | 313/999 [02:54<07:51,  1.45it/s]\r 31%|███▏      | 314/999 [02:55<07:46,  1.47it/s]\r 32%|███▏      | 315/999 [02:56<07:47,  1.46it/s]\r 32%|███▏      | 316/999 [02:56<07:45,  1.47it/s]\r 32%|███▏      | 317/999 [02:57<07:43,  1.47it/s]\r 32%|███▏      | 318/999 [02:58<07:37,  1.49it/s]\r 32%|███▏      | 319/999 [02:58<07:43,  1.47it/s]\r 32%|███▏      | 320/999 [02:59<07:46,  1.45it/s]\r 32%|███▏      | 321/999 [03:00<07:56,  1.42it/s]\r 32%|███▏      | 322/999 [03:00<07:47,  1.45it/s]\r 32%|███▏      | 323/999 [03:01<07:49,  1.44it/s]\r 32%|███▏      | 324/999 [03:02<07:52,  1.43it/s]\r 33%|███▎      | 325/999 [03:02<07:39,  1.47it/s]\r 33%|███▎      | 326/999 [03:03<07:37,  1.47it/s]\r 33%|███▎      | 327/999 [03:04<07:49,  1.43it/s]\r 33%|███▎      | 328/999 [03:05<07:42,  1.45it/s]\r 33%|███▎      | 329/999 [03:05<07:44,  1.44it/s]\r 33%|███▎      | 330/999 [03:06<07:42,  1.45it/s]\r 33%|███▎      | 331/999 [03:07<07:49,  1.42it/s]\r 33%|███▎      | 332/999 [03:07<07:44,  1.44it/s]\r 33%|███▎      | 333/999 [03:08<07:45,  1.43it/s]\r 33%|███▎      | 334/999 [03:09<07:41,  1.44it/s]\r 34%|███▎      | 335/999 [03:09<07:33,  1.46it/s]\r 34%|███▎      | 336/999 [03:10<07:40,  1.44it/s]\r 34%|███▎      | 337/999 [03:11<07:40,  1.44it/s]\r 34%|███▍      | 338/999 [03:12<07:44,  1.42it/s]\r 34%|███▍      | 339/999 [03:12<07:36,  1.44it/s]\r 34%|███▍      | 340/999 [03:13<07:31,  1.46it/s]\r 34%|███▍      | 341/999 [03:14<07:37,  1.44it/s]\r 34%|███▍      | 342/999 [03:14<07:31,  1.45it/s]\r 34%|███▍      | 343/999 [03:15<07:25,  1.47it/s]\r 34%|███▍      | 344/999 [03:16<07:25,  1.47it/s]\r 35%|███▍      | 345/999 [03:16<07:18,  1.49it/s]\r 35%|███▍      | 346/999 [03:17<07:18,  1.49it/s]\r 35%|███▍      | 347/999 [03:18<07:22,  1.47it/s]\r 35%|███▍      | 348/999 [03:18<07:22,  1.47it/s]\r 35%|███▍      | 349/999 [03:19<07:14,  1.49it/s]\r 35%|███▌      | 350/999 [03:20<07:13,  1.50it/s]\r 35%|███▌      | 351/999 [03:20<07:21,  1.47it/s]\r 35%|███▌      | 352/999 [03:21<07:30,  1.43it/s]\r 35%|███▌      | 353/999 [03:22<07:29,  1.44it/s]\r 35%|███▌      | 354/999 [03:22<07:29,  1.44it/s]\r 36%|███▌      | 355/999 [03:23<07:21,  1.46it/s]\r 36%|███▌      | 356/999 [03:24<07:17,  1.47it/s]\r 36%|███▌      | 357/999 [03:24<07:12,  1.49it/s]\r 36%|███▌      | 358/999 [03:25<07:09,  1.49it/s]\r 36%|███▌      | 359/999 [03:26<07:16,  1.47it/s]\r 36%|███▌      | 360/999 [03:26<07:12,  1.48it/s]\r 36%|███▌      | 361/999 [03:27<07:21,  1.45it/s]\r 36%|███▌      | 362/999 [03:28<07:19,  1.45it/s]\r 36%|███▋      | 363/999 [03:28<07:07,  1.49it/s]\r 36%|███▋      | 364/999 [03:29<06:59,  1.51it/s]\r 37%|███▋      | 365/999 [03:30<06:59,  1.51it/s]\r 37%|███▋      | 366/999 [03:30<06:50,  1.54it/s]\r 37%|███▋      | 367/999 [03:31<06:46,  1.55it/s]\r 37%|███▋      | 368/999 [03:32<06:47,  1.55it/s]\r 37%|███▋      | 369/999 [03:32<06:51,  1.53it/s]\r 37%|███▋      | 370/999 [03:33<06:48,  1.54it/s]\r 37%|███▋      | 371/999 [03:34<06:44,  1.55it/s]\r 37%|███▋      | 372/999 [03:34<06:39,  1.57it/s]\r 37%|███▋      | 373/999 [03:35<06:35,  1.58it/s]\r 37%|███▋      | 374/999 [03:36<06:35,  1.58it/s]\r 38%|███▊      | 375/999 [03:36<06:31,  1.59it/s]\r 38%|███▊      | 376/999 [03:37<06:32,  1.59it/s]\r 38%|███▊      | 377/999 [03:37<06:35,  1.57it/s]\r 38%|███▊      | 378/999 [03:38<06:34,  1.57it/s]\r 38%|███▊      | 379/999 [03:39<06:33,  1.57it/s]\r 38%|███▊      | 380/999 [03:39<06:43,  1.53it/s]\r 38%|███▊      | 381/999 [03:40<06:46,  1.52it/s]\r 38%|███▊      | 382/999 [03:41<06:36,  1.56it/s]\r 38%|███▊      | 383/999 [03:41<06:33,  1.56it/s]\r 38%|███▊      | 384/999 [03:42<06:39,  1.54it/s]\r 39%|███▊      | 385/999 [03:43<06:39,  1.54it/s]\r 39%|███▊      | 386/999 [03:43<06:42,  1.52it/s]\r 39%|███▊      | 387/999 [03:44<06:29,  1.57it/s]\r 39%|███▉      | 388/999 [03:45<06:39,  1.53it/s]\r 39%|███▉      | 389/999 [03:45<06:37,  1.53it/s]\r 39%|███▉      | 390/999 [03:46<06:37,  1.53it/s]\r 39%|███▉      | 391/999 [03:47<06:39,  1.52it/s]\r 39%|███▉      | 392/999 [03:47<06:47,  1.49it/s]\r 39%|███▉      | 393/999 [03:48<06:49,  1.48it/s]\r 39%|███▉      | 394/999 [03:49<06:46,  1.49it/s]\r 40%|███▉      | 395/999 [03:49<06:38,  1.51it/s]\r 40%|███▉      | 396/999 [03:50<06:43,  1.49it/s]\r 40%|███▉      | 397/999 [03:51<06:49,  1.47it/s]\r 40%|███▉      | 398/999 [03:51<06:56,  1.44it/s]\r 40%|███▉      | 399/999 [03:52<07:04,  1.41it/s]\r 40%|████      | 400/999 [03:53<07:01,  1.42it/s]\r 40%|████      | 401/999 [03:53<06:57,  1.43it/s]\r 40%|████      | 402/999 [03:54<06:53,  1.44it/s]\r 40%|████      | 403/999 [03:55<06:59,  1.42it/s]\r 40%|████      | 404/999 [03:56<06:51,  1.45it/s]\r 41%|████      | 405/999 [03:56<06:48,  1.45it/s]\r 41%|████      | 406/999 [03:57<06:44,  1.47it/s]\r 41%|████      | 407/999 [03:58<06:38,  1.49it/s]\r 41%|████      | 408/999 [03:58<06:28,  1.52it/s]\r 41%|████      | 409/999 [03:59<06:34,  1.50it/s]\r 41%|████      | 410/999 [04:00<06:46,  1.45it/s]\r 41%|████      | 411/999 [04:00<06:46,  1.45it/s]\r 41%|████      | 412/999 [04:01<06:42,  1.46it/s]\r 41%|████▏     | 413/999 [04:02<06:35,  1.48it/s]\r 41%|████▏     | 414/999 [04:02<06:28,  1.51it/s]\r 42%|████▏     | 415/999 [04:03<06:30,  1.50it/s]\r 42%|████▏     | 416/999 [04:04<06:33,  1.48it/s]\r 42%|████▏     | 417/999 [04:04<06:39,  1.46it/s]\r 42%|████▏     | 418/999 [04:05<06:38,  1.46it/s]\r 42%|████▏     | 419/999 [04:06<06:42,  1.44it/s]\r 42%|████▏     | 420/999 [04:06<06:47,  1.42it/s]\r 42%|████▏     | 421/999 [04:07<06:48,  1.42it/s]\r 42%|████▏     | 422/999 [04:08<06:48,  1.41it/s]\r 42%|████▏     | 423/999 [04:09<06:51,  1.40it/s]\r 42%|████▏     | 424/999 [04:09<06:50,  1.40it/s]\r 43%|████▎     | 425/999 [04:10<06:48,  1.40it/s]\r 43%|████▎     | 426/999 [04:11<06:45,  1.41it/s]\r 43%|████▎     | 427/999 [04:11<06:46,  1.41it/s]\r 43%|████▎     | 428/999 [04:12<06:44,  1.41it/s]\r 43%|████▎     | 429/999 [04:13<06:52,  1.38it/s]\r 43%|████▎     | 430/999 [04:14<06:44,  1.41it/s]\r 43%|████▎     | 431/999 [04:14<06:29,  1.46it/s]\r 43%|████▎     | 432/999 [04:15<06:18,  1.50it/s]\r 43%|████▎     | 433/999 [04:15<06:17,  1.50it/s]\r 43%|████▎     | 434/999 [04:16<06:22,  1.48it/s]\r 44%|████▎     | 435/999 [04:17<06:21,  1.48it/s]\r 44%|████▎     | 436/999 [04:18<06:27,  1.45it/s]\r 44%|████▎     | 437/999 [04:18<06:27,  1.45it/s]\r 44%|████▍     | 438/999 [04:19<06:25,  1.46it/s]\r 44%|████▍     | 439/999 [04:20<06:20,  1.47it/s]\r 44%|████▍     | 440/999 [04:20<06:28,  1.44it/s]\r 44%|████▍     | 441/999 [04:21<06:23,  1.45it/s]\r 44%|████▍     | 442/999 [04:22<06:18,  1.47it/s]\r 44%|████▍     | 443/999 [04:22<06:23,  1.45it/s]\r 44%|████▍     | 444/999 [04:23<06:08,  1.50it/s]\r 45%|████▍     | 445/999 [04:24<06:16,  1.47it/s]\r 45%|████▍     | 446/999 [04:24<06:16,  1.47it/s]\r 45%|████▍     | 447/999 [04:25<06:15,  1.47it/s]\r 45%|████▍     | 448/999 [04:26<06:08,  1.50it/s]\r 45%|████▍     | 449/999 [04:26<06:11,  1.48it/s]\r 45%|████▌     | 450/999 [04:27<06:17,  1.45it/s]\r 45%|████▌     | 451/999 [04:28<06:20,  1.44it/s]\r 45%|████▌     | 452/999 [04:29<06:25,  1.42it/s]\r 45%|████▌     | 453/999 [04:29<06:32,  1.39it/s]\r 45%|████▌     | 454/999 [04:30<06:32,  1.39it/s]\r 46%|████▌     | 455/999 [04:31<06:22,  1.42it/s]\r 46%|████▌     | 456/999 [04:31<06:20,  1.43it/s]\r 46%|████▌     | 457/999 [04:32<06:14,  1.45it/s]\r 46%|████▌     | 458/999 [04:33<06:19,  1.43it/s]\r 46%|████▌     | 459/999 [04:34<06:26,  1.40it/s]\r 46%|████▌     | 460/999 [04:34<06:20,  1.42it/s]\r 46%|████▌     | 461/999 [04:35<06:26,  1.39it/s]\r 46%|████▌     | 462/999 [04:36<06:15,  1.43it/s]\r 46%|████▋     | 463/999 [04:36<06:13,  1.44it/s]\r 46%|████▋     | 464/999 [04:37<06:18,  1.41it/s]\r 47%|████▋     | 465/999 [04:38<06:15,  1.42it/s]\r 47%|████▋     | 466/999 [04:38<06:16,  1.41it/s]\r 47%|████▋     | 467/999 [04:39<06:09,  1.44it/s]\r 47%|████▋     | 468/999 [04:40<06:03,  1.46it/s]\r 47%|████▋     | 469/999 [04:40<06:01,  1.47it/s]\r 47%|████▋     | 470/999 [04:41<06:06,  1.44it/s]\r 47%|████▋     | 471/999 [04:42<06:10,  1.42it/s]\r 47%|████▋     | 472/999 [04:43<06:18,  1.39it/s]\r 47%|████▋     | 473/999 [04:43<06:27,  1.36it/s]\r 47%|████▋     | 474/999 [04:44<06:12,  1.41it/s]\r 48%|████▊     | 475/999 [04:45<06:08,  1.42it/s]\r 48%|████▊     | 476/999 [04:45<06:00,  1.45it/s]\r 48%|████▊     | 477/999 [04:46<06:01,  1.45it/s]\r 48%|████▊     | 478/999 [04:47<06:05,  1.42it/s]\r 48%|████▊     | 479/999 [04:48<06:06,  1.42it/s]\r 48%|████▊     | 480/999 [04:48<06:02,  1.43it/s]\r 48%|████▊     | 481/999 [04:49<06:15,  1.38it/s]\r 48%|████▊     | 482/999 [04:50<06:11,  1.39it/s]\r 48%|████▊     | 483/999 [04:50<06:12,  1.39it/s]\r 48%|████▊     | 484/999 [04:51<06:00,  1.43it/s]\r 49%|████▊     | 485/999 [04:52<05:58,  1.44it/s]\r 49%|████▊     | 486/999 [04:52<05:50,  1.47it/s]\r 49%|████▊     | 487/999 [04:53<05:53,  1.45it/s]\r 49%|████▉     | 488/999 [04:54<05:48,  1.46it/s]\r 49%|████▉     | 489/999 [04:55<05:50,  1.46it/s]\r 49%|████▉     | 490/999 [04:55<05:41,  1.49it/s]\r 49%|████▉     | 491/999 [04:56<05:35,  1.51it/s]\r 49%|████▉     | 492/999 [04:56<05:33,  1.52it/s]\r 49%|████▉     | 493/999 [04:57<05:40,  1.48it/s]\r 49%|████▉     | 494/999 [04:58<05:47,  1.45it/s]\r 50%|████▉     | 495/999 [04:59<05:47,  1.45it/s]\r 50%|████▉     | 496/999 [04:59<05:45,  1.45it/s]\r 50%|████▉     | 497/999 [05:00<05:52,  1.43it/s]\r 50%|████▉     | 498/999 [05:01<06:05,  1.37it/s]\r 50%|████▉     | 499/999 [05:01<05:45,  1.45it/s]\r 50%|█████     | 500/999 [05:02<05:42,  1.46it/s]\r 50%|█████     | 501/999 [05:03<05:32,  1.50it/s]\r 50%|█████     | 502/999 [05:03<05:40,  1.46it/s]\r 50%|█████     | 503/999 [05:04<05:34,  1.48it/s]\r 50%|█████     | 504/999 [05:05<05:23,  1.53it/s]\r 51%|█████     | 505/999 [05:05<05:19,  1.55it/s]\r 51%|█████     | 506/999 [05:06<05:26,  1.51it/s]\r 51%|█████     | 507/999 [05:07<05:25,  1.51it/s]\r 51%|█████     | 508/999 [05:07<05:14,  1.56it/s]\r 51%|█████     | 509/999 [05:08<05:13,  1.56it/s]\r 51%|█████     | 510/999 [05:09<05:18,  1.54it/s]\r 51%|█████     | 511/999 [05:09<05:10,  1.57it/s]\r 51%|█████▏    | 512/999 [05:10<05:07,  1.59it/s]\r 51%|█████▏    | 513/999 [05:10<05:06,  1.59it/s]\r 51%|█████▏    | 514/999 [05:11<05:07,  1.58it/s]\r 52%|█████▏    | 515/999 [05:12<05:11,  1.55it/s]\r 52%|█████▏    | 516/999 [05:12<05:08,  1.57it/s]\r 52%|█████▏    | 517/999 [05:13<05:09,  1.55it/s]\r 52%|█████▏    | 518/999 [05:14<05:10,  1.55it/s]\r 52%|█████▏    | 519/999 [05:14<05:06,  1.57it/s]\r 52%|█████▏    | 520/999 [05:15<05:01,  1.59it/s]\r 52%|█████▏    | 521/999 [05:16<05:05,  1.57it/s]\r 52%|█████▏    | 522/999 [05:16<05:02,  1.57it/s]\r 52%|█████▏    | 523/999 [05:17<04:57,  1.60it/s]\r 52%|█████▏    | 524/999 [05:17<05:01,  1.58it/s]\r 53%|█████▎    | 525/999 [05:18<05:13,  1.51it/s]\r 53%|█████▎    | 526/999 [05:19<05:13,  1.51it/s]\r 53%|█████▎    | 527/999 [05:19<05:04,  1.55it/s]\r 53%|█████▎    | 528/999 [05:20<05:08,  1.53it/s]\r 53%|█████▎    | 529/999 [05:21<05:06,  1.53it/s]\r 53%|█████▎    | 530/999 [05:21<05:18,  1.47it/s]\r 53%|█████▎    | 531/999 [05:22<05:17,  1.47it/s]\r 53%|█████▎    | 532/999 [05:23<05:18,  1.47it/s]\r 53%|█████▎    | 533/999 [05:24<05:22,  1.44it/s]\r 53%|█████▎    | 534/999 [05:24<05:19,  1.46it/s]\r 54%|█████▎    | 535/999 [05:25<05:15,  1.47it/s]\r 54%|█████▎    | 536/999 [05:26<05:15,  1.47it/s]\r 54%|█████▍    | 537/999 [05:26<05:14,  1.47it/s]\r 54%|█████▍    | 538/999 [05:27<05:09,  1.49it/s]\r 54%|█████▍    | 539/999 [05:28<05:08,  1.49it/s]\r 54%|█████▍    | 540/999 [05:28<05:03,  1.51it/s]\r 54%|█████▍    | 541/999 [05:29<05:00,  1.52it/s]\r 54%|█████▍    | 542/999 [05:30<04:58,  1.53it/s]\r 54%|█████▍    | 543/999 [05:30<05:06,  1.49it/s]\r 54%|█████▍    | 544/999 [05:31<05:09,  1.47it/s]\r 55%|█████▍    | 545/999 [05:32<05:11,  1.46it/s]\r 55%|█████▍    | 546/999 [05:32<05:10,  1.46it/s]\r 55%|█████▍    | 547/999 [05:33<05:09,  1.46it/s]\r 55%|█████▍    | 548/999 [05:34<05:04,  1.48it/s]\r 55%|█████▍    | 549/999 [05:34<05:00,  1.50it/s]\r 55%|█████▌    | 550/999 [05:35<04:58,  1.50it/s]\r 55%|█████▌    | 551/999 [05:36<05:05,  1.47it/s]\r 55%|█████▌    | 552/999 [05:36<05:01,  1.48it/s]\r 55%|█████▌    | 553/999 [05:37<05:07,  1.45it/s]\r 55%|█████▌    | 554/999 [05:38<05:08,  1.44it/s]\r 56%|█████▌    | 555/999 [05:38<05:06,  1.45it/s]\r 56%|█████▌    | 556/999 [05:39<05:03,  1.46it/s]\r 56%|█████▌    | 557/999 [05:40<05:02,  1.46it/s]\r 56%|█████▌    | 558/999 [05:40<05:02,  1.46it/s]\r 56%|█████▌    | 559/999 [05:41<05:00,  1.47it/s]\r 56%|█████▌    | 560/999 [05:42<04:57,  1.47it/s]\r 56%|█████▌    | 561/999 [05:43<04:57,  1.47it/s]\r 56%|█████▋    | 562/999 [05:43<04:54,  1.48it/s]\r 56%|█████▋    | 563/999 [05:44<05:05,  1.43it/s]\r 56%|█████▋    | 564/999 [05:45<05:00,  1.45it/s]\r 57%|█████▋    | 565/999 [05:45<05:00,  1.44it/s]\r 57%|█████▋    | 566/999 [05:46<04:53,  1.48it/s]\r 57%|█████▋    | 567/999 [05:47<04:51,  1.48it/s]\r 57%|█████▋    | 568/999 [05:47<04:52,  1.47it/s]\r 57%|█████▋    | 569/999 [05:48<04:57,  1.45it/s]\r 57%|█████▋    | 570/999 [05:49<04:56,  1.45it/s]\r 57%|█████▋    | 571/999 [05:49<04:56,  1.44it/s]\r 57%|█████▋    | 572/999 [05:50<04:52,  1.46it/s]\r 57%|█████▋    | 573/999 [05:51<04:49,  1.47it/s]\r 57%|█████▋    | 574/999 [05:51<04:52,  1.45it/s]\r 58%|█████▊    | 575/999 [05:52<04:47,  1.48it/s]\r 58%|█████▊    | 576/999 [05:53<04:43,  1.49it/s]\r 58%|█████▊    | 577/999 [05:53<04:46,  1.47it/s]\r 58%|█████▊    | 578/999 [05:54<04:45,  1.47it/s]\r 58%|█████▊    | 579/999 [05:55<04:40,  1.50it/s]\r 58%|█████▊    | 580/999 [05:55<04:38,  1.51it/s]\r 58%|█████▊    | 581/999 [05:56<04:46,  1.46it/s]\r 58%|█████▊    | 582/999 [05:57<04:40,  1.49it/s]\r 58%|█████▊    | 583/999 [05:57<04:40,  1.48it/s]\r 58%|█████▊    | 584/999 [05:58<04:42,  1.47it/s]\r 59%|█████▊    | 585/999 [05:59<04:43,  1.46it/s]\r 59%|█████▊    | 586/999 [06:00<04:50,  1.42it/s]\r 59%|█████▉    | 587/999 [06:00<04:51,  1.42it/s]\r 59%|█████▉    | 588/999 [06:01<04:51,  1.41it/s]\r 59%|█████▉    | 589/999 [06:02<04:44,  1.44it/s]\r 59%|█████▉    | 590/999 [06:02<04:48,  1.42it/s]\r 59%|█████▉    | 591/999 [06:03<04:53,  1.39it/s]\r 59%|█████▉    | 592/999 [06:04<04:47,  1.42it/s]\r 59%|█████▉    | 593/999 [06:05<04:46,  1.42it/s]\r 59%|█████▉    | 594/999 [06:05<04:51,  1.39it/s]\r 60%|█████▉    | 595/999 [06:06<04:57,  1.36it/s]\r 60%|█████▉    | 596/999 [06:07<05:01,  1.34it/s]\r 60%|█████▉    | 597/999 [06:08<05:02,  1.33it/s]\r 60%|█████▉    | 598/999 [06:08<04:59,  1.34it/s]\r 60%|█████▉    | 599/999 [06:09<04:56,  1.35it/s]\r 60%|██████    | 600/999 [06:10<04:52,  1.36it/s]\r 60%|██████    | 601/999 [06:11<04:46,  1.39it/s]\r 60%|██████    | 602/999 [06:11<04:44,  1.40it/s]\r 60%|██████    | 603/999 [06:12<04:39,  1.42it/s]\r 60%|██████    | 604/999 [06:13<04:36,  1.43it/s]\r 61%|██████    | 605/999 [06:13<04:34,  1.43it/s]\r 61%|██████    | 606/999 [06:14<04:42,  1.39it/s]\r 61%|██████    | 607/999 [06:15<04:37,  1.41it/s]\r 61%|██████    | 608/999 [06:15<04:29,  1.45it/s]\r 61%|██████    | 609/999 [06:16<04:25,  1.47it/s]\r 61%|██████    | 610/999 [06:17<04:25,  1.47it/s]\r 61%|██████    | 611/999 [06:17<04:21,  1.48it/s]\r 61%|██████▏   | 612/999 [06:18<04:26,  1.45it/s]\r 61%|██████▏   | 613/999 [06:19<04:22,  1.47it/s]\r 61%|██████▏   | 614/999 [06:19<04:19,  1.49it/s]\r 62%|██████▏   | 615/999 [06:20<04:16,  1.50it/s]\r 62%|██████▏   | 616/999 [06:21<04:17,  1.49it/s]\r 62%|██████▏   | 617/999 [06:21<04:16,  1.49it/s]\r 62%|██████▏   | 618/999 [06:22<04:12,  1.51it/s]\r 62%|██████▏   | 619/999 [06:23<04:10,  1.52it/s]\r 62%|██████▏   | 620/999 [06:23<04:14,  1.49it/s]\r 62%|██████▏   | 621/999 [06:24<04:15,  1.48it/s]\r 62%|██████▏   | 622/999 [06:25<04:16,  1.47it/s]\r 62%|██████▏   | 623/999 [06:26<04:19,  1.45it/s]\r 62%|██████▏   | 624/999 [06:26<04:11,  1.49it/s]\r 63%|██████▎   | 625/999 [06:27<04:12,  1.48it/s]\r 63%|██████▎   | 626/999 [06:27<04:11,  1.49it/s]\r 63%|██████▎   | 627/999 [06:28<04:06,  1.51it/s]\r 63%|██████▎   | 628/999 [06:29<04:09,  1.49it/s]\r 63%|██████▎   | 629/999 [06:29<04:07,  1.49it/s]\r 63%|██████▎   | 630/999 [06:30<04:08,  1.49it/s]\r 63%|██████▎   | 631/999 [06:31<04:05,  1.50it/s]\r 63%|██████▎   | 632/999 [06:31<04:04,  1.50it/s]\r 63%|██████▎   | 633/999 [06:32<04:01,  1.52it/s]\r 63%|██████▎   | 634/999 [06:33<04:05,  1.49it/s]\r 64%|██████▎   | 635/999 [06:33<04:04,  1.49it/s]\r 64%|██████▎   | 636/999 [06:34<04:05,  1.48it/s]\r 64%|██████▍   | 637/999 [06:35<04:03,  1.49it/s]\r 64%|██████▍   | 638/999 [06:36<04:03,  1.48it/s]\r 64%|██████▍   | 639/999 [06:36<04:05,  1.47it/s]\r 64%|██████▍   | 640/999 [06:37<04:05,  1.46it/s]\r 64%|██████▍   | 641/999 [06:38<04:02,  1.48it/s]\r 64%|██████▍   | 642/999 [06:38<04:04,  1.46it/s]\r 64%|██████▍   | 643/999 [06:39<04:03,  1.46it/s]\r 64%|██████▍   | 644/999 [06:40<04:02,  1.47it/s]\r 65%|██████▍   | 645/999 [06:40<03:55,  1.50it/s]\r 65%|██████▍   | 646/999 [06:41<03:56,  1.49it/s]\r 65%|██████▍   | 647/999 [06:42<04:00,  1.47it/s]\r 65%|██████▍   | 648/999 [06:42<03:51,  1.52it/s]\r 65%|██████▍   | 649/999 [06:43<03:47,  1.54it/s]\r 65%|██████▌   | 650/999 [06:43<03:40,  1.58it/s]\r 65%|██████▌   | 651/999 [06:44<03:41,  1.57it/s]\r 65%|██████▌   | 652/999 [06:45<03:45,  1.54it/s]\r 65%|██████▌   | 653/999 [06:45<03:47,  1.52it/s]\r 65%|██████▌   | 654/999 [06:46<03:39,  1.57it/s]\r 66%|██████▌   | 655/999 [06:47<03:34,  1.60it/s]\r 66%|██████▌   | 656/999 [06:47<03:44,  1.53it/s]\r 66%|██████▌   | 657/999 [06:48<03:46,  1.51it/s]\r 66%|██████▌   | 658/999 [06:49<03:39,  1.55it/s]\r 66%|██████▌   | 659/999 [06:49<03:38,  1.56it/s]\r 66%|██████▌   | 660/999 [06:50<03:38,  1.55it/s]\r 66%|██████▌   | 661/999 [06:51<03:36,  1.56it/s]\r 66%|██████▋   | 662/999 [06:51<03:38,  1.54it/s]\r 66%|██████▋   | 663/999 [06:52<03:41,  1.52it/s]\r 66%|██████▋   | 664/999 [06:53<03:41,  1.51it/s]\r 67%|██████▋   | 665/999 [06:53<03:38,  1.53it/s]\r 67%|██████▋   | 666/999 [06:54<03:35,  1.54it/s]\r 67%|██████▋   | 667/999 [06:54<03:30,  1.58it/s]\r 67%|██████▋   | 668/999 [06:55<03:33,  1.55it/s]\r 67%|██████▋   | 669/999 [06:56<03:38,  1.51it/s]\r 67%|██████▋   | 670/999 [06:57<03:38,  1.50it/s]\r 67%|██████▋   | 671/999 [06:57<03:32,  1.54it/s]\r 67%|██████▋   | 672/999 [06:58<03:28,  1.57it/s]\r 67%|██████▋   | 673/999 [06:58<03:29,  1.55it/s]\r 67%|██████▋   | 674/999 [06:59<03:25,  1.58it/s]\r 68%|██████▊   | 675/999 [07:00<03:27,  1.56it/s]\r 68%|██████▊   | 676/999 [07:00<03:29,  1.54it/s]\r 68%|██████▊   | 677/999 [07:01<03:26,  1.56it/s]\r 68%|██████▊   | 678/999 [07:02<03:28,  1.54it/s]\r 68%|██████▊   | 679/999 [07:02<03:29,  1.53it/s]\r 68%|██████▊   | 680/999 [07:03<03:29,  1.52it/s]\r 68%|██████▊   | 681/999 [07:04<03:26,  1.54it/s]\r 68%|██████▊   | 682/999 [07:04<03:22,  1.57it/s]\r 68%|██████▊   | 683/999 [07:05<03:26,  1.53it/s]\r 68%|██████▊   | 684/999 [07:06<03:30,  1.49it/s]\r 69%|██████▊   | 685/999 [07:06<03:32,  1.48it/s]\r 69%|██████▊   | 686/999 [07:07<03:30,  1.49it/s]\r 69%|██████▉   | 687/999 [07:08<03:33,  1.46it/s]\r 69%|██████▉   | 688/999 [07:08<03:35,  1.45it/s]\r 69%|██████▉   | 689/999 [07:09<03:33,  1.45it/s]\r 69%|██████▉   | 690/999 [07:10<03:30,  1.47it/s]\r 69%|██████▉   | 691/999 [07:10<03:26,  1.49it/s]\r 69%|██████▉   | 692/999 [07:11<03:23,  1.51it/s]\r 69%|██████▉   | 693/999 [07:12<03:25,  1.49it/s]\r 69%|██████▉   | 694/999 [07:12<03:29,  1.46it/s]\r 70%|██████▉   | 695/999 [07:13<03:30,  1.44it/s]\r 70%|██████▉   | 696/999 [07:14<03:33,  1.42it/s]\r 70%|██████▉   | 697/999 [07:15<03:33,  1.42it/s]\r 70%|██████▉   | 698/999 [07:15<03:31,  1.42it/s]\r 70%|██████▉   | 699/999 [07:16<03:31,  1.42it/s]\r 70%|███████   | 700/999 [07:17<03:28,  1.44it/s]\r 70%|███████   | 701/999 [07:17<03:27,  1.44it/s]\r 70%|███████   | 702/999 [07:18<03:34,  1.39it/s]\r 70%|███████   | 703/999 [07:19<03:31,  1.40it/s]\r 70%|███████   | 704/999 [07:20<03:28,  1.42it/s]\r 71%|███████   | 705/999 [07:20<03:37,  1.35it/s]\r 71%|███████   | 706/999 [07:21<03:33,  1.37it/s]\r 71%|███████   | 707/999 [07:22<03:30,  1.39it/s]\r 71%|███████   | 708/999 [07:22<03:28,  1.40it/s]\r 71%|███████   | 709/999 [07:23<03:25,  1.41it/s]\r 71%|███████   | 710/999 [07:24<03:30,  1.37it/s]\r 71%|███████   | 711/999 [07:25<03:31,  1.36it/s]\r 71%|███████▏  | 712/999 [07:25<03:26,  1.39it/s]\r 71%|███████▏  | 713/999 [07:26<03:23,  1.40it/s]\r 71%|███████▏  | 714/999 [07:27<03:25,  1.39it/s]\r 72%|███████▏  | 715/999 [07:28<03:25,  1.38it/s]\r 72%|███████▏  | 716/999 [07:28<03:22,  1.40it/s]\r 72%|███████▏  | 717/999 [07:29<03:29,  1.34it/s]\r 72%|███████▏  | 718/999 [07:30<03:28,  1.35it/s]\r 72%|███████▏  | 719/999 [07:31<03:29,  1.34it/s]\r 72%|███████▏  | 720/999 [07:31<03:33,  1.31it/s]\r 72%|███████▏  | 721/999 [07:32<03:33,  1.30it/s]\r 72%|███████▏  | 722/999 [07:33<03:31,  1.31it/s]\r 72%|███████▏  | 723/999 [07:34<03:28,  1.32it/s]\r 72%|███████▏  | 724/999 [07:34<03:23,  1.35it/s]\r 73%|███████▎  | 725/999 [07:35<03:25,  1.33it/s]\r 73%|███████▎  | 726/999 [07:36<03:25,  1.33it/s]\r 73%|███████▎  | 727/999 [07:37<03:19,  1.36it/s]\r 73%|███████▎  | 728/999 [07:37<03:23,  1.33it/s]\r 73%|███████▎  | 729/999 [07:38<03:25,  1.31it/s]\r 73%|███████▎  | 730/999 [07:39<03:31,  1.27it/s]\r 73%|███████▎  | 731/999 [07:40<03:30,  1.27it/s]\r 73%|███████▎  | 732/999 [07:40<03:26,  1.30it/s]\r 73%|███████▎  | 733/999 [07:41<03:25,  1.29it/s]\r 73%|███████▎  | 734/999 [07:42<03:19,  1.33it/s]\r 74%|███████▎  | 735/999 [07:43<03:21,  1.31it/s]\r 74%|███████▎  | 736/999 [07:44<03:29,  1.26it/s]\r 74%|███████▍  | 737/999 [07:44<03:26,  1.27it/s]\r 74%|███████▍  | 738/999 [07:45<03:40,  1.18it/s]\r 74%|███████▍  | 739/999 [07:46<03:44,  1.16it/s]\r 74%|███████▍  | 740/999 [07:47<03:44,  1.16it/s]\r 74%|███████▍  | 741/999 [07:48<03:42,  1.16it/s]\r 74%|███████▍  | 742/999 [07:49<03:41,  1.16it/s]\r 74%|███████▍  | 743/999 [07:50<03:37,  1.18it/s]\r 74%|███████▍  | 744/999 [07:51<03:39,  1.16it/s]\r 75%|███████▍  | 745/999 [07:51<03:35,  1.18it/s]\r 75%|███████▍  | 746/999 [07:52<03:32,  1.19it/s]\r 75%|███████▍  | 747/999 [07:53<03:31,  1.19it/s]\r 75%|███████▍  | 748/999 [07:54<03:34,  1.17it/s]\r 75%|███████▍  | 749/999 [07:55<03:31,  1.18it/s]\r 75%|███████▌  | 750/999 [07:56<03:34,  1.16it/s]\r 75%|███████▌  | 751/999 [07:57<03:34,  1.16it/s]\r 75%|███████▌  | 752/999 [07:57<03:29,  1.18it/s]\r 75%|███████▌  | 753/999 [07:58<03:29,  1.17it/s]\r 75%|███████▌  | 754/999 [07:59<03:29,  1.17it/s]\r 76%|███████▌  | 755/999 [08:00<03:31,  1.15it/s]\r 76%|███████▌  | 756/999 [08:01<03:30,  1.16it/s]\r 76%|███████▌  | 757/999 [08:02<03:27,  1.16it/s]\r 76%|███████▌  | 758/999 [08:02<03:26,  1.17it/s]\r 76%|███████▌  | 759/999 [08:03<03:25,  1.17it/s]\r 76%|███████▌  | 760/999 [08:04<03:25,  1.16it/s]\r 76%|███████▌  | 761/999 [08:05<03:28,  1.14it/s]\r 76%|███████▋  | 762/999 [08:06<03:25,  1.16it/s]\r 76%|███████▋  | 763/999 [08:07<03:28,  1.13it/s]\r 76%|███████▋  | 764/999 [08:08<03:29,  1.12it/s]\r 77%|███████▋  | 765/999 [08:09<03:25,  1.14it/s]\r 77%|███████▋  | 766/999 [08:10<03:23,  1.14it/s]\r 77%|███████▋  | 767/999 [08:10<03:21,  1.15it/s]\r 77%|███████▋  | 768/999 [08:11<03:19,  1.16it/s]\r 77%|███████▋  | 769/999 [08:12<03:20,  1.15it/s]\r 77%|███████▋  | 770/999 [08:13<03:25,  1.12it/s]\r 77%|███████▋  | 771/999 [08:14<03:19,  1.14it/s]\r 77%|███████▋  | 772/999 [08:15<03:15,  1.16it/s]\r 77%|███████▋  | 773/999 [08:16<03:14,  1.16it/s]\r 77%|███████▋  | 774/999 [08:16<03:08,  1.19it/s]\r 78%|███████▊  | 775/999 [08:17<03:07,  1.19it/s]\r 78%|███████▊  | 776/999 [08:18<03:10,  1.17it/s]\r 78%|███████▊  | 777/999 [08:19<03:12,  1.15it/s]\r 78%|███████▊  | 778/999 [08:20<03:11,  1.15it/s]\r 78%|███████▊  | 779/999 [08:21<03:07,  1.17it/s]\r 78%|███████▊  | 780/999 [08:22<03:04,  1.19it/s]\r 78%|███████▊  | 781/999 [08:22<03:02,  1.19it/s]\r 78%|███████▊  | 782/999 [08:23<03:01,  1.20it/s]\r 78%|███████▊  | 783/999 [08:24<02:59,  1.20it/s]\r 78%|███████▊  | 784/999 [08:25<02:58,  1.21it/s]\r 79%|███████▊  | 785/999 [08:26<03:05,  1.15it/s]\r 79%|███████▊  | 786/999 [08:27<03:08,  1.13it/s]\r 79%|███████▉  | 787/999 [08:28<03:07,  1.13it/s]\r 79%|███████▉  | 788/999 [08:29<03:10,  1.11it/s]\r 79%|███████▉  | 789/999 [08:29<03:09,  1.11it/s]\r 79%|███████▉  | 790/999 [08:30<03:09,  1.10it/s]\r 79%|███████▉  | 791/999 [08:31<03:06,  1.12it/s]\r 79%|███████▉  | 792/999 [08:32<03:05,  1.11it/s]\r 79%|███████▉  | 793/999 [08:33<03:05,  1.11it/s]\r 79%|███████▉  | 794/999 [08:34<03:07,  1.09it/s]\r 80%|███████▉  | 795/999 [08:35<03:06,  1.10it/s]\r 80%|███████▉  | 796/999 [08:36<03:03,  1.10it/s]\r 80%|███████▉  | 797/999 [08:37<03:03,  1.10it/s]\r 80%|███████▉  | 798/999 [08:38<03:02,  1.10it/s]\r 80%|███████▉  | 799/999 [08:39<03:02,  1.10it/s]\r 80%|████████  | 800/999 [08:39<03:00,  1.10it/s]\r 80%|████████  | 801/999 [08:40<02:58,  1.11it/s]\r 80%|████████  | 802/999 [08:41<02:59,  1.10it/s]\r 80%|████████  | 803/999 [08:42<02:59,  1.09it/s]\r 80%|████████  | 804/999 [08:43<03:02,  1.07it/s]\r 81%|████████  | 805/999 [08:44<03:00,  1.07it/s]\r 81%|████████  | 806/999 [08:45<03:01,  1.06it/s]\r 81%|████████  | 807/999 [08:46<02:59,  1.07it/s]\r 81%|████████  | 808/999 [08:47<02:58,  1.07it/s]\r 81%|████████  | 809/999 [08:48<02:56,  1.07it/s]\r 81%|████████  | 810/999 [08:49<02:53,  1.09it/s]\r 81%|████████  | 811/999 [08:50<02:50,  1.10it/s]\r 81%|████████▏ | 812/999 [08:50<02:46,  1.12it/s]\r 81%|████████▏ | 813/999 [08:51<02:49,  1.10it/s]\r 81%|████████▏ | 814/999 [08:52<02:51,  1.08it/s]\r 82%|████████▏ | 815/999 [08:53<02:50,  1.08it/s]\r 82%|████████▏ | 816/999 [08:54<02:48,  1.09it/s]\r 82%|████████▏ | 817/999 [08:55<02:45,  1.10it/s]\r 82%|████████▏ | 818/999 [08:56<02:45,  1.09it/s]\r 82%|████████▏ | 819/999 [08:57<02:55,  1.03it/s]\r 82%|████████▏ | 820/999 [08:58<02:54,  1.03it/s]\r 82%|████████▏ | 821/999 [08:59<02:54,  1.02it/s]\r 82%|████████▏ | 822/999 [09:00<02:52,  1.03it/s]\r 82%|████████▏ | 823/999 [09:01<02:52,  1.02it/s]\r 82%|████████▏ | 824/999 [09:02<02:49,  1.03it/s]\r 83%|████████▎ | 825/999 [09:03<02:48,  1.03it/s]\r 83%|████████▎ | 826/999 [09:04<02:42,  1.07it/s]\r 83%|████████▎ | 827/999 [09:05<02:35,  1.10it/s]\r 83%|████████▎ | 828/999 [09:06<02:40,  1.07it/s]\r 83%|████████▎ | 829/999 [09:07<02:41,  1.05it/s]\r 83%|████████▎ | 830/999 [09:08<02:37,  1.07it/s]\r 83%|████████▎ | 831/999 [09:08<02:34,  1.09it/s]\r 83%|████████▎ | 832/999 [09:09<02:33,  1.09it/s]\r 83%|████████▎ | 833/999 [09:10<02:26,  1.14it/s]\r 83%|████████▎ | 834/999 [09:11<02:24,  1.14it/s]\r 84%|████████▎ | 835/999 [09:12<02:24,  1.13it/s]\r 84%|████████▎ | 836/999 [09:13<02:21,  1.15it/s]\r 84%|████████▍ | 837/999 [09:14<02:21,  1.15it/s]\r 84%|████████▍ | 838/999 [09:14<02:22,  1.13it/s]\r 84%|████████▍ | 839/999 [09:15<02:21,  1.13it/s]\r 84%|████████▍ | 840/999 [09:16<02:18,  1.15it/s]\r 84%|████████▍ | 841/999 [09:17<02:15,  1.17it/s]\r 84%|████████▍ | 842/999 [09:18<02:15,  1.16it/s]\r 84%|████████▍ | 843/999 [09:19<02:13,  1.17it/s]\r 84%|████████▍ | 844/999 [09:20<02:11,  1.18it/s]\r 85%|████████▍ | 845/999 [09:20<02:09,  1.19it/s]\r 85%|████████▍ | 846/999 [09:21<02:09,  1.18it/s]\r 85%|████████▍ | 847/999 [09:22<02:07,  1.19it/s]\r 85%|████████▍ | 848/999 [09:23<02:07,  1.18it/s]\r 85%|████████▍ | 849/999 [09:24<02:09,  1.16it/s]\r 85%|████████▌ | 850/999 [09:25<02:07,  1.16it/s]\r 85%|████████▌ | 851/999 [09:26<02:07,  1.16it/s]\r 85%|████████▌ | 852/999 [09:26<02:06,  1.16it/s]\r 85%|████████▌ | 853/999 [09:27<02:04,  1.18it/s]\r 85%|████████▌ | 854/999 [09:28<02:02,  1.19it/s]\r 86%|████████▌ | 855/999 [09:29<02:02,  1.18it/s]\r 86%|████████▌ | 856/999 [09:30<01:59,  1.20it/s]\r 86%|████████▌ | 857/999 [09:31<01:56,  1.22it/s]\r 86%|████████▌ | 858/999 [09:31<01:56,  1.21it/s]\r 86%|████████▌ | 859/999 [09:32<01:55,  1.21it/s]\r 86%|████████▌ | 860/999 [09:33<01:54,  1.22it/s]\r 86%|████████▌ | 861/999 [09:34<01:55,  1.19it/s]\r 86%|████████▋ | 862/999 [09:35<01:52,  1.21it/s]\r 86%|████████▋ | 863/999 [09:36<01:54,  1.19it/s]\r 86%|████████▋ | 864/999 [09:36<01:53,  1.18it/s]\r 87%|████████▋ | 865/999 [09:37<01:54,  1.17it/s]\r 87%|████████▋ | 866/999 [09:38<01:53,  1.17it/s]\r 87%|████████▋ | 867/999 [09:39<01:55,  1.15it/s]\r 87%|████████▋ | 868/999 [09:40<01:51,  1.17it/s]\r 87%|████████▋ | 869/999 [09:41<01:49,  1.19it/s]\r 87%|████████▋ | 870/999 [09:42<01:47,  1.20it/s]\r 87%|████████▋ | 871/999 [09:42<01:47,  1.19it/s]\r 87%|████████▋ | 872/999 [09:43<01:48,  1.17it/s]\r 87%|████████▋ | 873/999 [09:44<01:48,  1.16it/s]\r 87%|████████▋ | 874/999 [09:45<01:46,  1.17it/s]\r 88%|████████▊ | 875/999 [09:46<01:46,  1.16it/s]\r 88%|████████▊ | 876/999 [09:47<01:46,  1.15it/s]\r 88%|████████▊ | 877/999 [09:48<01:47,  1.13it/s]\r 88%|████████▊ | 878/999 [09:48<01:45,  1.15it/s]\r 88%|████████▊ | 879/999 [09:49<01:45,  1.14it/s]\r 88%|████████▊ | 880/999 [09:50<01:44,  1.14it/s]\r 88%|████████▊ | 881/999 [09:51<01:44,  1.13it/s]\r 88%|████████▊ | 882/999 [09:52<01:43,  1.13it/s]\r 88%|████████▊ | 883/999 [09:53<01:42,  1.13it/s]\r 88%|████████▊ | 884/999 [09:54<01:42,  1.12it/s]\r 89%|████████▊ | 885/999 [09:55<01:38,  1.15it/s]\r 89%|████████▊ | 886/999 [09:56<01:38,  1.15it/s]\r 89%|████████▉ | 887/999 [09:56<01:38,  1.13it/s]\r 89%|████████▉ | 888/999 [09:57<01:41,  1.10it/s]\r 89%|████████▉ | 889/999 [09:58<01:38,  1.11it/s]\r 89%|████████▉ | 890/999 [09:59<01:36,  1.13it/s]\r 89%|████████▉ | 891/999 [10:00<01:34,  1.15it/s]\r 89%|████████▉ | 892/999 [10:01<01:31,  1.17it/s]\r 89%|████████▉ | 893/999 [10:02<01:30,  1.18it/s]\r 89%|████████▉ | 894/999 [10:03<01:30,  1.16it/s]\r 90%|████████▉ | 895/999 [10:03<01:31,  1.14it/s]\r 90%|████████▉ | 896/999 [10:04<01:28,  1.16it/s]\r 90%|████████▉ | 897/999 [10:05<01:27,  1.17it/s]\r 90%|████████▉ | 898/999 [10:06<01:26,  1.17it/s]\r 90%|████████▉ | 899/999 [10:07<01:24,  1.18it/s]\r 90%|█████████ | 900/999 [10:08<01:24,  1.17it/s]\r 90%|█████████ | 901/999 [10:08<01:22,  1.19it/s]\r 90%|█████████ | 902/999 [10:09<01:21,  1.19it/s]\r 90%|█████████ | 903/999 [10:10<01:21,  1.18it/s]\r 90%|█████████ | 904/999 [10:11<01:22,  1.16it/s]\r 91%|█████████ | 905/999 [10:12<01:22,  1.15it/s]\r 91%|█████████ | 906/999 [10:13<01:19,  1.17it/s]\r 91%|█████████ | 907/999 [10:14<01:18,  1.18it/s]\r 91%|█████████ | 908/999 [10:14<01:16,  1.19it/s]\r 91%|█████████ | 909/999 [10:15<01:15,  1.19it/s]\r 91%|█████████ | 910/999 [10:16<01:15,  1.18it/s]\r 91%|█████████ | 911/999 [10:17<01:14,  1.18it/s]\r 91%|█████████▏| 912/999 [10:18<01:14,  1.17it/s]\r 91%|█████████▏| 913/999 [10:19<01:12,  1.19it/s]\r 91%|█████████▏| 914/999 [10:20<01:11,  1.19it/s]\r 92%|█████████▏| 915/999 [10:20<01:11,  1.18it/s]\r 92%|█████████▏| 916/999 [10:21<01:11,  1.17it/s]\r 92%|█████████▏| 917/999 [10:22<01:10,  1.16it/s]\r 92%|█████████▏| 918/999 [10:23<01:09,  1.17it/s]\r 92%|█████████▏| 919/999 [10:24<01:08,  1.17it/s]\r 92%|█████████▏| 920/999 [10:25<01:05,  1.20it/s]\r 92%|█████████▏| 921/999 [10:25<01:04,  1.21it/s]\r 92%|█████████▏| 922/999 [10:26<01:02,  1.22it/s]\r 92%|█████████▏| 923/999 [10:27<01:03,  1.21it/s]\r 92%|█████████▏| 924/999 [10:28<01:02,  1.20it/s]\r 93%|█████████▎| 925/999 [10:29<01:02,  1.19it/s]\r 93%|█████████▎| 926/999 [10:30<01:01,  1.18it/s]\r 93%|█████████▎| 927/999 [10:31<01:01,  1.17it/s]\r 93%|█████████▎| 928/999 [10:31<01:01,  1.15it/s]\r 93%|█████████▎| 929/999 [10:32<01:01,  1.14it/s]\r 93%|█████████▎| 930/999 [10:33<01:01,  1.13it/s]\r 93%|█████████▎| 931/999 [10:34<01:01,  1.11it/s]\r 93%|█████████▎| 932/999 [10:35<00:59,  1.12it/s]\r 93%|█████████▎| 933/999 [10:36<00:59,  1.11it/s]\r 93%|█████████▎| 934/999 [10:37<00:58,  1.12it/s]\r 94%|█████████▎| 935/999 [10:38<00:56,  1.13it/s]\r 94%|█████████▎| 936/999 [10:39<00:55,  1.13it/s]\r 94%|█████████▍| 937/999 [10:39<00:53,  1.16it/s]\r 94%|█████████▍| 938/999 [10:40<00:52,  1.17it/s]\r 94%|█████████▍| 939/999 [10:41<00:52,  1.14it/s]\r 94%|█████████▍| 940/999 [10:42<00:50,  1.16it/s]\r 94%|█████████▍| 941/999 [10:43<00:49,  1.17it/s]\r 94%|█████████▍| 942/999 [10:44<00:48,  1.17it/s]\r 94%|█████████▍| 943/999 [10:45<00:48,  1.16it/s]\r 94%|█████████▍| 944/999 [10:45<00:47,  1.16it/s]\r 95%|█████████▍| 945/999 [10:46<00:45,  1.18it/s]\r 95%|█████████▍| 946/999 [10:47<00:44,  1.18it/s]\r 95%|█████████▍| 947/999 [10:48<00:42,  1.21it/s]\r 95%|█████████▍| 948/999 [10:49<00:41,  1.24it/s]\r 95%|█████████▍| 949/999 [10:49<00:40,  1.23it/s]\r 95%|█████████▌| 950/999 [10:50<00:42,  1.14it/s]\r 95%|█████████▌| 951/999 [10:51<00:42,  1.12it/s]\r 95%|█████████▌| 952/999 [10:52<00:41,  1.12it/s]\r 95%|█████████▌| 953/999 [10:53<00:41,  1.11it/s]\r 95%|█████████▌| 954/999 [10:54<00:40,  1.11it/s]\r 96%|█████████▌| 955/999 [10:55<00:39,  1.10it/s]\r 96%|█████████▌| 956/999 [10:56<00:39,  1.08it/s]\r 96%|█████████▌| 957/999 [10:57<00:39,  1.06it/s]\r 96%|█████████▌| 958/999 [10:58<00:38,  1.08it/s]\r 96%|█████████▌| 959/999 [10:59<00:37,  1.07it/s]\r 96%|█████████▌| 960/999 [11:00<00:35,  1.11it/s]\r 96%|█████████▌| 961/999 [11:01<00:34,  1.09it/s]\r 96%|█████████▋| 962/999 [11:01<00:33,  1.10it/s]\r 96%|█████████▋| 963/999 [11:02<00:33,  1.08it/s]\r 96%|█████████▋| 964/999 [11:03<00:33,  1.05it/s]\r 97%|█████████▋| 965/999 [11:04<00:31,  1.07it/s]\r 97%|█████████▋| 966/999 [11:05<00:30,  1.07it/s]\r 97%|█████████▋| 967/999 [11:06<00:30,  1.06it/s]\r 97%|█████████▋| 968/999 [11:07<00:29,  1.07it/s]\r 97%|█████████▋| 969/999 [11:08<00:28,  1.05it/s]\r 97%|█████████▋| 970/999 [11:09<00:27,  1.06it/s]\r 97%|█████████▋| 971/999 [11:10<00:26,  1.06it/s]\r 97%|█████████▋| 972/999 [11:11<00:25,  1.08it/s]\r 97%|█████████▋| 973/999 [11:12<00:24,  1.05it/s]\r 97%|█████████▋| 974/999 [11:13<00:24,  1.03it/s]\r 98%|█████████▊| 975/999 [11:14<00:23,  1.03it/s]\r 98%|█████████▊| 976/999 [11:15<00:21,  1.07it/s]\r 98%|█████████▊| 977/999 [11:16<00:20,  1.05it/s]\r 98%|█████████▊| 978/999 [11:17<00:20,  1.03it/s]\r 98%|█████████▊| 979/999 [11:18<00:19,  1.03it/s]\r 98%|█████████▊| 980/999 [11:19<00:18,  1.05it/s]\r 98%|█████████▊| 981/999 [11:20<00:17,  1.04it/s]\r 98%|█████████▊| 982/999 [11:21<00:16,  1.03it/s]\r 98%|█████████▊| 983/999 [11:22<00:15,  1.05it/s]\r 98%|█████████▊| 984/999 [11:22<00:13,  1.07it/s]\r 99%|█████████▊| 985/999 [11:23<00:13,  1.04it/s]\r 99%|█████████▊| 986/999 [11:24<00:12,  1.06it/s]\r 99%|█████████▉| 987/999 [11:25<00:11,  1.08it/s]\r 99%|█████████▉| 988/999 [11:26<00:10,  1.05it/s]\r 99%|█████████▉| 989/999 [11:27<00:09,  1.06it/s]\r 99%|█████████▉| 990/999 [11:28<00:08,  1.06it/s]\r 99%|█████████▉| 991/999 [11:29<00:07,  1.06it/s]\r 99%|█████████▉| 992/999 [11:30<00:06,  1.08it/s]\r 99%|█████████▉| 993/999 [11:31<00:05,  1.05it/s]\r 99%|█████████▉| 994/999 [11:32<00:04,  1.04it/s]\r100%|█████████▉| 995/999 [11:33<00:03,  1.07it/s]\r100%|█████████▉| 996/999 [11:34<00:02,  1.08it/s]\r100%|█████████▉| 997/999 [11:35<00:01,  1.08it/s]\r100%|█████████▉| 998/999 [11:36<00:00,  1.05it/s]\r100%|██████████| 999/999 [11:37<00:00,  1.06it/s]\r100%|██████████| 999/999 [11:37<00:00,  1.43it/s]\n```\n:::\n:::\n\n\n::: {#675127a2 .cell execution_count=39}\n``` {.python .cell-code}\nplt.figure(figsize=(10, 6))\nplt.scatter(quantiles_theoriques, quantiles_empiriques)\nplt.plot(quantiles_theoriques, quantiles_theoriques, color='red', label='Première bissectrice')\nplt.title('QQ Plot - Quantiles empiriques vs Quantiles théoriques')\nplt.xlabel('Quantiles théoriques (distribution Skew Student)')\nplt.ylabel('Quantiles empiriques')\nplt.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](var_classiques_files/figure-ipynb/cell-39-output-1.png){}\n:::\n:::\n\n\n::: {#500e6d27 .cell execution_count=40}\n``` {.python .cell-code}\n# # kstest y revenir\n# ks_stat, ks_p_value = kstest(data_train, skew_student_pdf, args=(**params_sstd,))\n\n# print(\"=\"*80)\n# print(\"H0 : Les données suivent une loi de Skew Student\")\n# print(f\"Statistique de test : {ks_stat:.4f}\")\n# print(f\"P-value : {ks_p_value:.4f}\")\n# print(\"=\"*80)\n# A revoir\n```\n:::\n\n\n### II.4.2. Calcul de la VaR Skew Student\n\n::: {#6bb7ed3f .cell execution_count=41}\n``` {.python .cell-code}\n# Objectif : écrire une fonction qui calcule la VaR skew-student\n\ndef sstd_var_fct(alpha, params):\n    \"\"\"\n    Calcul de la VaR skew student\n    data : les rendements logarithmiques\n    alpha : le niveau de confiance\n    \"\"\"\n\n    return -skew_student_quantile(1-alpha, **params)\n```\n:::\n\n\n::: {#61065fae .cell execution_count=42}\n``` {.python .cell-code}\nsstd_var = sstd_var_fct(alpha, params_sstd)\nprint(f\"La VaR skew student pour h=1j et alpha={alpha} est : {sstd_var:.4%}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLa VaR skew student pour h=1j et alpha=0.99 est : 4.2576%\n```\n:::\n:::\n\n\n# III. Implémentation de l'ES\n\nL'expected shortfall (ES) est une mesure de risque qui donne une estimation de la perte moyenne au-delà du seuil de la VaR. Par exemple, un ES à 5% sur 1 jour de 1000 euros signifie que si la perte dépasse 1000 euros, alors la perte moyenne sera de 1500 euros. L'ES est une mesure plus robuste que la VaR, car elle prend en compte les queues de distribution et est particulièrement utile pour évaluer les risques extrêmes. Elle est définie comme suit :\n\n$$ES_{\\alpha}(h) = E(PnL | PnL \\leq -VaR_{\\alpha}(h))$$\n\n\n/!\\ La ES du cours est différente de celle ci. Elle est définie comme suit :\n$$ES_{\\alpha}(h) = E(PnL - VaR | PnL \\leq -VaR_{\\alpha}(h)) = CTE - VaR$$\n\nVoir ce qui est fait dans le cadre réglementaire.\n\n::: {#71289ab2 .cell execution_count=43}\n``` {.python .cell-code}\n# Expected Shortfall pour la VaR historique, bootstrap et gaussienne, et skew-student\n\ndef expected_shortfall(data, var):\n    \"\"\"\n    Calcul de l'Expected Shortfall\n    data : les rendements logarithmiques\n    var : la VaR\n    \"\"\"\n    return -data[data < -var].mean()\n\nes_hist_train = expected_shortfall(data_train, var_hist_train)\nes_bs_train = expected_shortfall(data_train, var_bs_train)\nes_gauss_train = expected_shortfall(data_train, var_gauss_train)\nes_sstd_train = expected_shortfall(data_train, sstd_var)\n\n# in a df\nes = pd.DataFrame({\n    'Historique': [es_hist_train],\n    'Bootstrap': [es_bs_train],\n    'Gaussienne': [es_gauss_train],\n    'Skew Student': [es_sstd_train]\n})\n\nprint(\"=\"*80)\nprint(\"Expected Shortfall empirique (en %) pour h=1j\")\nprint(round(100*es,2))\nprint(\"=\"*80)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n================================================================================\nExpected Shortfall empirique (en %) pour h=1j\n   Historique  Bootstrap  Gaussienne  Skew Student\n0        5.47       5.51        4.47          5.68\n================================================================================\n```\n:::\n:::\n\n\n::: {#c10a5545 .cell execution_count=44}\n``` {.python .cell-code}\nimport scipy.stats as stats\nimport scipy.integrate as integrate\n\ndef expected_shortfall_theoretical(alpha, quantile_function, density_function,params):\n    \"\"\"\n    Computes the Expected Shortfall (Conditional VaR) for a given distribution.\n\n    Parameters:\n    - alpha (float): Confidence level (e.g., 0.99 for 99%)\n    - quantile_function (callable): Function to compute quantiles (e.g., skew_student_quantile)\n    - params (dict): Parameters of the distribution\n\n    Returns:\n    - float: Expected Shortfall value\n    \"\"\"\n\n    # Compute the Value at Risk (VaR) at level alpha\n    var_alpha = quantile_function(1-alpha, **params)\n\n    # Expected Shortfall integral\n    integral_value, _ = integrate.quad(lambda x: x * density_function(x, **params), -float(\"inf\"), var_alpha)\n\n    # Compute Expected Shortfall\n    es_alpha = -integral_value / (1 - alpha)\n\n    return es_alpha\n\n# Compute Expected Shortfall using the corrected function\nalpha = 0.99\nes_sstd_theoretical = expected_shortfall_theoretical(alpha,skew_student_quantile,skew_student_pdf, params_sstd)\n\nparams_norm = {\n    \"loc\" : np.mean(data_train),\n    \"scale\" : np.std(data_train)\n}\n\nes_gauss_theoretical = expected_shortfall_theoretical(alpha,stats.norm.ppf,stats.norm.pdf, params_norm)\n\nes_theoretical = pd.DataFrame({\n    'Gaussienne': [es_gauss_theoretical],\n    'Skew Student': [es_sstd_theoretical]\n})\n\nprint(\"=\"*80)\nprint(\"Expected Shortfall théorique (en %) pour h=1j\")\nprint(round(100*es_theoretical,2))\nprint(\"=\"*80)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n================================================================================\nExpected Shortfall théorique (en %) pour h=1j\n   Gaussienne  Skew Student\n0         3.7          6.71\n================================================================================\n```\n:::\n:::\n\n\n# IV.Protocole de Backtesting\n\nL'exercice de backtesting consiste à vérifier la capacité d'adaptation du modèle et sa viabilité en dehors de son cadre d'entraînement. Il permet d’évaluer la performance des modèles dans le temps. Idéalement, il faudrait le realiser quotidiennement afin d'évaluer s'il est utile ou non de recalibrer le modèle.\n\nDans le cadre de TP, nous n'avons pas observé d'exceptions avec l'utilisation de la VaR historique. Cela est probablement du à la période d’apprentissage trop stricte. Notre modèle était donc trop restrictif/conservateur ce qui peut témoigner de son incapacité d'adaptation. Pour ce faire, il aurait été necessaire de le recalibrer.\n\nSachant que les modèles sont évalués quotidiennement, à quel moment doit-on considérer qu'il est nécessaire de recalibrer le modèle ? Quels indicateurs pourrait-on mettre en place pour déterminer si tout est sous contrôle (VaR trop haute, trop basse) ou si un recalibrage est requis, sachant que le modèle est backtesté chaque jour ?  \n\nPour repondre à ces questions, nous proposons le protocole de backtest ci-dessous : \n\n- Dans la réglementation baloise, il est demandé de tester les performances de la VaR sur les 250 jours suivants la date de réalisation du modèle. Dans ces 250 jours, on est censé observé 2 à 3 exceptions, soit 1%. Lorsqu'il n'y a aucune exception sur cette période de temps, nous jugerons que le modèle est mal calibré.\n\n- Lorsqu'il y a des exceptions, nous pouvons comparer ces exceptions théoriques aux exceptions observées à l'aide d'un test de Kupiec/Unconditionnal coverage [1], une variante du test binomiale qui permet de tester sous l'hypothèse nulle que le taux d'exception(p) est égal au niveau de confiance de la VaR (1-$\\alpha$). La statistique de test suit une loi de khi-deux à 1 degré de liberté. Lorsque cette hypothèse est rejetée, cela signifie que le modèle est mal calibré. En effet, si une banque a trop d’exceptions, i.e. $p \\geq 1 - \\alpha$, cela signifie que son modèle sous-estime le risque, ce qui peut conduire à une exigence de recalibrage ou une augmentation du capital réglementaire. Si une banque a trop peu d’exceptions (voire 0), i.e. $p \\leq 1 - \\alpha$, cela peut indiquer que son modèle est trop conservateur, ce qui immobilise trop de capital inutilement.\n \n- Puisqu'un seul test de backtesting n'est pas suffisant[2] pour juger la qualité d’un modèle de VaR, il serait  préférable  de  combiner  différentes  méthodes. Pour ce faire, un autre test a été utilisé pour juger de la necessité de recalibrage du modèle. Il s'agit du test de Christoffersen’s Interval Forecast/Independance test [3]. Ce test permet de vérifier si les exceptions sont indépendantes et donc bien réparties dans le temps. En effet, si les exceptions sont concentrées dans un intervalle de temps, cela peut indiquer que le modèle est mal calibré. Sous l'hypothèse nulle, la statistique de test suit asymptotiquement une loi de khi-deux à 1 degré de liberté. \n\n- En couplant le test de Kupiec au test de Christoffersen [3], nous avons le test de conditional coverage mixte[3] qui suit une loi de khi-deux à 2 degrés de liberté.\n\nPour la mise en place de ces tests statistiques, nous avons besoin d'une échantillon de taille suffisamment grande, i.e $N=30$. Pour ce faire, nous ne pourrons mettre en place ce protocole qu'à partir du 30ème jour de backtesting. Pour le backtest, nous avons fait le choix d'utiliser un expanding window, i.e. une fenêtre d'apprentissage qui s'agrandit à chaque période de recalibrage. Il aurait été plus pertinent de privilégier un rolling window, i.e. une fenêtre d'apprentissage qui se déplace à chaque période de recalibrage, pour éviter de bruiter les données.\n\n\nPROBLÈME : au bout de 30j, s'il n'y a pas d'exceptions, on ne recalibre pas le modèle mais si au 31e jour il y a une exception, le test de kupiec echoue=> recalibrage.\n***References***:\n- [1] Kupiec, P. \"Techniques for Verifying the Accuracy of Risk Management Models.\" Journal of Derivatives. Vol. 3, 1995, pp. 73–84.\n- [2] Haas, M. \"New Methods in Backtesting.\" Financial Engineering, Research Center Caesar, Bonn, 2001.\n- [3] Christoffersen, P. \"Evaluating Interval Forecasts.\" International Economic Review. Vol. 39, 1998, pp. 841–862.\n\n::: {#62d05946 .cell execution_count=45}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nfrom scipy.stats import chi2\n\nclass Backtest:\n    def __init__(self, actual, forecast, alpha, alpha_test):\n        self.index = actual.index\n        self.actual = actual.values\n        self.forecast = forecast\n        self.alpha = alpha\n        self.alpha_test = alpha_test\n\n    def hit_series(self):\n        \"\"\" Returns a series of 1s (VaR breaches) and 0s (no breach) \"\"\"\n        return (self.actual < - self.forecast).astype(int)\n    \n    def lr_bt(self):\n        \"\"\" Back-test protocol \"\"\"\n        hits = self.hit_series()  # Série des violations de la VaR (1 si violation, 0 sinon)\n        transitions = hits[1:] - hits[:-1]  # Différences entre valeurs successives (1 si passage de 0 à 1, -1 si passage de 1 à 0)\n\n        # Transition counts\n        n01 = np.sum(transitions == 1)  # 0 -> 1\n        n10 = np.sum(transitions == -1) # 1 -> 0\n        n11 = np.sum((transitions == 0) & (hits[1:] == 1)) # 1 -> 1\n        n00 = np.sum((transitions == 0) & (hits[1:] == 0)) # 0 -> 0\n        \n        # Number of observations in each state\n        n0, n1 = n01 + n00, n10 + n11\n        total_n = n0 + n1\n        \n        # Probability estimates\n        p01 = n01 / (n00 + n01) if (n00 + n01) > 0 else 0\n        p11 = n11 / (n11 + n10) if (n11 + n10) > 0 else 0\n        p = n1 / total_n if total_n > 0 else 0\n        \n        if n1 > 0:\n            #\n\n            # Unconditional Coverage Test/Kupiec\n            uc_h0 = n0 * np.log(1 - self.alpha) + n1 * np.log(self.alpha)\n            uc_h1 = n0 * np.log(1 - p) + n1 * np.log(p)\n            uc_stat = -2 * (uc_h0 - uc_h1)\n            # uc_critical_val = chi2.ppf(self.alpha_test, 1)\n            uc_pval = 1 - chi2.cdf(uc_stat, 1)\n            \n            # Independence Test/Christoffersen\n            ind_h0 = (n00 + n01) * np.log(1 - p) + (n01 + n11) * np.log(p)\n            ind_h1 = 0\n            if p01 > 0: ind_h1 += n01 * np.log(p01)\n            if (1 - p01) > 0: ind_h1 += n00 * np.log(1 - p01)\n            if p11 > 0: ind_h1 += n11 * np.log(p11)\n            if (1 - p11) > 0: ind_h1 += n10 * np.log(1 - p11)\n            ind_stat = -2 * (ind_h0 - ind_h1)\n            # ind_critical_val = chi2.ppf(self.alpha_test, 1)\n            ind_pval = 1 - chi2.cdf(ind_stat, 1)\n            \n            # Conditional Coverage Test/ Christoffersen & Kupiec mixture\n            cc_stat = uc_stat + ind_stat\n            # cc_critical_val = chi2.ppf(self.alpha_test, 2)\n            cc_pval = 1 - chi2.cdf(cc_stat, 2)\n            \n            # Store results in a DataFrame\n            df = pd.DataFrame({\n                \"Statistic\": [uc_stat, cc_stat, ind_stat],\n                # \"Critical Value\": [uc_critical_val, ind_critical_val, cc_critical_val],\n                \"p-value\": [uc_pval, cc_pval, ind_pval]\n            }, index=[\"Unconditional\", \"Conditional\",\"Independence\"])\n\n            binomial_test = stats.binomtest(n1, total_n, 1-self.alpha, alternative='two-sided')\n            df.loc[\"Binomial\"] = [binomial_test.statistic, binomial_test.pvalue]\n        else:\n            df = pd.DataFrame(np.nan, index=[\"Unconditional\", \"Conditional\", \"Independence\"], columns=[\"Statistic\", \"p-value\"])\n            binomial_test = stats.binomtest(n1, total_n, 1-self.alpha, alternative='two-sided')\n            df.loc[\"Binomial\"] = [binomial_test.statistic, binomial_test.pvalue]\n        \n        \n        return df\n```\n:::\n\n\n::: {#c7c2639f .cell execution_count=46}\n``` {.python .cell-code}\ndef daily_backtest(actual, forecast, alpha=0.99, alpha_test = 0.95,min_days=30, max_days=250):\n    \"\"\" Runs a growing backtest daily, starting at min_days up to max_days \"\"\"\n    recalibration_needed = False\n    end_test = min(max_days,len(actual))\n    for end in range(min_days, end_test +1):\n        data_to_test = actual[:end]\n        var_to_test = forecast\n        if len(data_to_test) < 30:\n            continue\n        \n        bt = Backtest(actual=data_to_test, forecast=var_to_test, alpha=alpha, alpha_test=alpha_test)\n        result = bt.lr_bt()\n        \n        nb_exceptions = bt.hit_series().sum()\n        \n        # res=bootstrap((data_to_test,), statistic=lambda x: exceptions(x, var_to_test)/len(x), method='percentile', n_resamples=1000)\n        # ci_lower, ci_upper = res.confidence_interval\n\n        # if ci_lower <= 1-alpha <= ci_upper:\n        #     print(f\"Recalibration needed at {end} days: The conditional test failed.\")\n        #     recalibration_needed = True\n        #     return recalibration_needed, end\n\n        # if \"conditional\" in result.index and result.loc[\"Independence\", \"p-value\"] < 0.05:\n        #     print(f\"Recalibration needed at {end} days: The Independence test failed.\")\n        #     recalibration_needed = True\n        #     return recalibration_needed, end\n        # failed_tests = result.iloc[2:][result.iloc[2:][\"p-value\"] < 0.05].index.tolist()\n        failed_tests = result[result[\"p-value\"] < 0.05].index.tolist()\n\n        if failed_tests:\n            print(f\"Recalibration needed at {end} days: The following tests failed: {', '.join(failed_tests)}\")\n            recalibration_needed = True\n            return recalibration_needed, end\n            \n        if end == max_days and nb_exceptions == 0:\n            print(f\"Recalibration needed at {end} days: No exceptions observed in the test window.\")\n            recalibration_needed = True\n            return recalibration_needed, end\n    \n    if not recalibration_needed:\n        print(\"No recalibration needed in the tested period.\")\n```\n:::\n\n\n::: {#7742571c .cell execution_count=47}\n``` {.python .cell-code}\ndef iterative_backtest(data_train, data_test, var_model, alpha):\n    \"\"\" Runs an iterative backtest with recalibration \"\"\"\n    data_train = data_train.copy()\n    data_test = data_test.copy()\n\n    var_result = var_model(data_train, alpha=alpha)\n    var_to_test = var_result[0] if isinstance(var_result, (list, tuple)) else var_result \n    \n    recalibration_points = [0]\n    vars_stored = [var_to_test]\n    \n    while len(data_test) > 0 and len(data_test) >= 250:\n        print(\"=\"*80)\n        print(f\"Old VaR to test: {var_to_test:.4%}\")\n\n        # Run daily backtest correctly\n        res_backtest, index = daily_backtest(data_test, var_to_test, alpha=alpha, alpha_test=0.95, min_days=30, max_days=250)\n\n        # Find the index of recalibration\n        if res_backtest:\n            print(len(data_test))\n            recalibration_points.append(index)\n\n            # Expand training data and shrink test data\n            data_train = pd.concat([data_train, data_test.iloc[:index,]])\n            data_test = data_test.iloc[index:,]\n            var_result = var_model(data_train, alpha=alpha)\n            var_to_test = var_result[0] if isinstance(var_result, (list, tuple)) else var_result \n            vars_stored.append(var_to_test)\n\n            print(f\"New VaR to test: {var_to_test:.4%}\")\n        else:\n            print(\"No recalibration needed.\")\n            break\n\n    return recalibration_points, vars_stored\n\n# Execute iterative backtest\nrecalibration_points, vars_stored = iterative_backtest(data_train, data_test, gaussian_var_ewma, alpha=alpha)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n================================================================================\nOld VaR to test: 2.7763%\nRecalibration needed at 103 days: The following tests failed: Unconditional, Conditional\n586\nNew VaR to test: 2.5925%\n================================================================================\nOld VaR to test: 2.5925%\nRecalibration needed at 61 days: The following tests failed: Unconditional, Conditional\n483\nNew VaR to test: 2.6675%\n================================================================================\nOld VaR to test: 2.6675%\nRecalibration needed at 30 days: The following tests failed: Unconditional, Conditional\n422\nNew VaR to test: 1.8885%\n================================================================================\nOld VaR to test: 1.8885%\nRecalibration needed at 50 days: The following tests failed: Unconditional, Conditional\n392\nNew VaR to test: 2.5369%\n================================================================================\nOld VaR to test: 2.5369%\nRecalibration needed at 240 days: The following tests failed: Unconditional, Conditional\n342\nNew VaR to test: 2.7075%\n```\n:::\n:::\n\n\n::: {#96e47888 .cell execution_count=48}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nplt.figure(figsize=(12, 6))\ndata_test.reset_index(drop=True, inplace=True)\nplt.plot(data_test, label=\"Returns\", color='blue')\nrecab = np.cumsum(np.array(recalibration_points))\nvars_stored_neg = -np.array(vars_stored)\n\nplt.scatter(recab, vars_stored_neg, color='black', label=\"Recalibration points\", zorder=3)\nif len(recab) > 0:\n    plt.step(recab, vars_stored_neg, where='post', color='red', linestyle='solid', label=\"VaR Adjusted\")\n    plt.hlines(vars_stored_neg[-1], xmin=recab[-1], xmax=len(data_test), color='red', linestyle='solid')\n\nplt.xlabel(\"Time\")\nplt.ylabel(\"VaR / Returns\")\nplt.title(\"Backtesting VaR with Recalibration Points\")\nplt.legend()\nplt.grid(True)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](var_classiques_files/figure-ipynb/cell-48-output-1.png){}\n:::\n:::\n\n\n---\njupyter:\n  kernelspec:\n    display_name: Python 3 (ipykernel)\n    language: python\n    name: python3\n    path: /Users/cherylkouadio/Library/Python/3.9/share/jupyter/kernels/python3\n  language_info:\n    codemirror_mode:\n      name: ipython\n      version: 3\n    file_extension: .py\n    mimetype: text/x-python\n    name: python\n    nbconvert_exporter: python\n    pygments_lexer: ipython3\n    version: 3.9.6\n---\n",
    "supporting": [
      "var_classiques_files/figure-ipynb"
    ],
    "filters": []
  }
}